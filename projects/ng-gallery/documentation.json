{
    "pipes": [],
    "interfaces": [
        {
            "name": "BezierEasingOptions",
            "id": "interface-BezierEasingOptions-d5eb67d1ecb7e4a497bc40fcef2fe77cbb5c20ac2db236be86ebd414c779eaa102f061d231cd6f4b9e7eccafc0caec3de14b9637f33374309f5e2e1e76ff7548",
            "file": "projects/ng-gallery/src/lib/smooth-scroll/smooth-scroll.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { _XAxis, _YAxis } from '@angular/cdk/scrolling';\r\n\r\nexport type SmoothScrollOptions = _XAxis & _YAxis & {\r\n  behavior?: ScrollBehavior;\r\n}\r\n\r\nexport type SmoothScrollToOptions = _XAxis & _YAxis & {\r\n  duration?: number;\r\n  easing?: BezierEasingOptions;\r\n};\r\n\r\nexport interface SmoothScrollStep {\r\n  scrollable: HTMLElement;\r\n  startTime: number;\r\n  startX: number;\r\n  startY: number;\r\n  x: number;\r\n  y: number;\r\n  duration: number;\r\n  easing: (k: number) => number;\r\n  currentX?: number;\r\n  currentY?: number;\r\n}\r\n\r\nexport interface BezierEasingOptions {\r\n  x1: number;\r\n  y1: number;\r\n  x2: number;\r\n  y2: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "x1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "x2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "y1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "y2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "BulletsConfig",
            "id": "interface-BulletsConfig-6f9fdbcb39c24b0d29450ee3ef7d2371630be5c1f946773304ae58c3414ed67b990c7b6f65447311539eda65a179e0088235c46b7a44e65008d279b9ef79431e",
            "file": "projects/ng-gallery/src/lib/models/config.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken, TemplateRef } from '@angular/core';\r\nimport { BezierEasingOptions } from '../smooth-scroll';\r\n\r\nexport const GALLERY_CONFIG: InjectionToken<GalleryConfig> = new InjectionToken<GalleryConfig>('GALLERY_CONFIG');\r\n\r\ntype ImageSize = 'contain' | 'cover';\r\n\r\ntype Orientation = 'horizontal' | 'vertical';\r\n\r\ntype ThumbsPosition = 'top' | 'left' | 'right' | 'bottom';\r\n\r\ntype HorizontalPosition = 'top' | 'bottom';\r\n\r\ntype LoadingStrategy = 'preload' | 'lazy' | 'default';\r\n\r\ntype LoadingAttr = 'eager' | 'lazy';\r\n\r\ninterface ThumbConfig {\r\n  thumbs?: boolean;\r\n  thumbWidth?: number;\r\n  thumbHeight?: number;\r\n  thumbLoadingIcon?: string;\r\n  thumbLoadingError?: string;\r\n  disableThumbs?: boolean;\r\n  detachThumbs?: boolean;\r\n  thumbAutosize?: boolean;\r\n  disableThumbScroll?: boolean;\r\n  disableThumbMouseScroll?: boolean;\r\n  thumbCentralized?: boolean;\r\n  thumbPosition?: ThumbsPosition;\r\n  thumbImageSize?: ImageSize;\r\n  thumbTemplate?: TemplateRef<any>;\r\n}\r\n\r\ninterface NavConfig {\r\n  nav?: boolean;\r\n  navIcon?: string;\r\n}\r\n\r\ninterface BulletsConfig {\r\n  bullets?: boolean;\r\n  disableBullets?: boolean;\r\n  bulletSize?: number;\r\n  bulletPosition?: HorizontalPosition;\r\n}\r\n\r\ninterface CounterConfig {\r\n  counter?: boolean;\r\n  counterPosition?: HorizontalPosition;\r\n}\r\n\r\ninterface PlayerConfig {\r\n  autoplay?: boolean;\r\n  autoplayInterval?: number;\r\n}\r\n\r\ninterface SliderConfig {\r\n  loop?: boolean;\r\n  disableScroll?: boolean;\r\n  disableMouseScroll?: boolean;\r\n  itemAutosize?: boolean;\r\n  autoHeight?: boolean;\r\n  loadingIcon?: string;\r\n  loadingError?: string;\r\n  scrollDuration?: number;\r\n  scrollEase?: BezierEasingOptions;\r\n  orientation?: Orientation;\r\n  imageSize?: ImageSize;\r\n  loadingStrategy?: LoadingStrategy;\r\n  loadingAttr?: LoadingAttr;\r\n  boxTemplate?: TemplateRef<any>;\r\n  itemTemplate?: TemplateRef<any>;\r\n  imageTemplate?: TemplateRef<any>;\r\n}\r\n\r\nexport type GalleryConfig = SliderConfig\r\n  & ThumbConfig\r\n  & NavConfig\r\n  & BulletsConfig\r\n  & CounterConfig\r\n  & PlayerConfig\r\n  & {\r\n  scrollBehavior?: ScrollBehavior;\r\n  resizeDebounceTime?: number;\r\n  debug?: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "bulletPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HorizontalPosition",
                    "optional": true,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "bullets",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "bulletSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "disableBullets",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 42
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "CounterConfig",
            "id": "interface-CounterConfig-6f9fdbcb39c24b0d29450ee3ef7d2371630be5c1f946773304ae58c3414ed67b990c7b6f65447311539eda65a179e0088235c46b7a44e65008d279b9ef79431e",
            "file": "projects/ng-gallery/src/lib/models/config.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken, TemplateRef } from '@angular/core';\r\nimport { BezierEasingOptions } from '../smooth-scroll';\r\n\r\nexport const GALLERY_CONFIG: InjectionToken<GalleryConfig> = new InjectionToken<GalleryConfig>('GALLERY_CONFIG');\r\n\r\ntype ImageSize = 'contain' | 'cover';\r\n\r\ntype Orientation = 'horizontal' | 'vertical';\r\n\r\ntype ThumbsPosition = 'top' | 'left' | 'right' | 'bottom';\r\n\r\ntype HorizontalPosition = 'top' | 'bottom';\r\n\r\ntype LoadingStrategy = 'preload' | 'lazy' | 'default';\r\n\r\ntype LoadingAttr = 'eager' | 'lazy';\r\n\r\ninterface ThumbConfig {\r\n  thumbs?: boolean;\r\n  thumbWidth?: number;\r\n  thumbHeight?: number;\r\n  thumbLoadingIcon?: string;\r\n  thumbLoadingError?: string;\r\n  disableThumbs?: boolean;\r\n  detachThumbs?: boolean;\r\n  thumbAutosize?: boolean;\r\n  disableThumbScroll?: boolean;\r\n  disableThumbMouseScroll?: boolean;\r\n  thumbCentralized?: boolean;\r\n  thumbPosition?: ThumbsPosition;\r\n  thumbImageSize?: ImageSize;\r\n  thumbTemplate?: TemplateRef<any>;\r\n}\r\n\r\ninterface NavConfig {\r\n  nav?: boolean;\r\n  navIcon?: string;\r\n}\r\n\r\ninterface BulletsConfig {\r\n  bullets?: boolean;\r\n  disableBullets?: boolean;\r\n  bulletSize?: number;\r\n  bulletPosition?: HorizontalPosition;\r\n}\r\n\r\ninterface CounterConfig {\r\n  counter?: boolean;\r\n  counterPosition?: HorizontalPosition;\r\n}\r\n\r\ninterface PlayerConfig {\r\n  autoplay?: boolean;\r\n  autoplayInterval?: number;\r\n}\r\n\r\ninterface SliderConfig {\r\n  loop?: boolean;\r\n  disableScroll?: boolean;\r\n  disableMouseScroll?: boolean;\r\n  itemAutosize?: boolean;\r\n  autoHeight?: boolean;\r\n  loadingIcon?: string;\r\n  loadingError?: string;\r\n  scrollDuration?: number;\r\n  scrollEase?: BezierEasingOptions;\r\n  orientation?: Orientation;\r\n  imageSize?: ImageSize;\r\n  loadingStrategy?: LoadingStrategy;\r\n  loadingAttr?: LoadingAttr;\r\n  boxTemplate?: TemplateRef<any>;\r\n  itemTemplate?: TemplateRef<any>;\r\n  imageTemplate?: TemplateRef<any>;\r\n}\r\n\r\nexport type GalleryConfig = SliderConfig\r\n  & ThumbConfig\r\n  & NavConfig\r\n  & BulletsConfig\r\n  & CounterConfig\r\n  & PlayerConfig\r\n  & {\r\n  scrollBehavior?: ScrollBehavior;\r\n  resizeDebounceTime?: number;\r\n  debug?: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "counter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "counterPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HorizontalPosition",
                    "optional": true,
                    "description": "",
                    "line": 49
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "GalleryError",
            "id": "interface-GalleryError-bccc61a9106233b10cea13d16a36070bc93ff42f88a7f805e345e1617af3cfd049400f126fa7362585b75441e4bc42e59899a526d56d21bee91bd073bec24a6c",
            "file": "projects/ng-gallery/src/lib/models/gallery.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { GalleryAction, GalleryItemType } from './constants';\r\nimport { GalleryItemData } from '../components/templates/items.model';\r\n\r\nexport interface GalleryState {\r\n  action?: GalleryAction;\r\n  items?: GalleryItem[];\r\n  behavior?: ScrollBehavior;\r\n  currIndex?: number;\r\n  hasNext?: boolean;\r\n  hasPrev?: boolean;\r\n  isPlaying?: boolean;\r\n}\r\n\r\nexport interface GalleryItem {\r\n  data?: GalleryItemData;\r\n  type?: GalleryItemType;\r\n}\r\n\r\nexport interface GalleryError {\r\n  itemIndex: number;\r\n  error: ErrorEvent;\r\n}\r\n",
            "properties": [
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ErrorEvent",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "itemIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "GalleryItem",
            "id": "interface-GalleryItem-bccc61a9106233b10cea13d16a36070bc93ff42f88a7f805e345e1617af3cfd049400f126fa7362585b75441e4bc42e59899a526d56d21bee91bd073bec24a6c",
            "file": "projects/ng-gallery/src/lib/models/gallery.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { GalleryAction, GalleryItemType } from './constants';\r\nimport { GalleryItemData } from '../components/templates/items.model';\r\n\r\nexport interface GalleryState {\r\n  action?: GalleryAction;\r\n  items?: GalleryItem[];\r\n  behavior?: ScrollBehavior;\r\n  currIndex?: number;\r\n  hasNext?: boolean;\r\n  hasPrev?: boolean;\r\n  isPlaying?: boolean;\r\n}\r\n\r\nexport interface GalleryItem {\r\n  data?: GalleryItemData;\r\n  type?: GalleryItemType;\r\n}\r\n\r\nexport interface GalleryError {\r\n  itemIndex: number;\r\n  error: ErrorEvent;\r\n}\r\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GalleryItemData",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GalleryItemType",
                    "optional": true,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "GalleryItemContext",
            "id": "interface-GalleryItemContext-26e1a2a9cd6d60ca99303fc991011e44a915536a91e7fffb302ad20298ea1600095dac2bbb811adb2767e9c07b63f913c60fab3c81fff80a56796b65a8136cba",
            "file": "projects/ng-gallery/src/lib/directives/gallery-item-def.directive.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Directive, TemplateRef } from '@angular/core';\r\nimport { GalleryItemData } from '../components/templates/items.model';\r\nimport { GalleryItemType } from '../models/constants';\r\n\r\n@Directive({\r\n  standalone: true,\r\n  selector: '[galleryItemDef]'\r\n})\r\nexport class GalleryItemDef {\r\n  constructor(public templateRef: TemplateRef<GalleryItemContext<GalleryItemDef>>) {\r\n  }\r\n\r\n  // Make sure the template checker knows the type of the context with which the\r\n  // template of this directive will be rendered\r\n  static ngTemplateContextGuard(\r\n    directive: GalleryItemDef,\r\n    context: unknown\r\n  ): context is GalleryItemContext<GalleryItemData> {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport interface GalleryItemContext<T> {\r\n  /** Data for the row that this cell is located within. */\r\n  $implicit?: T;\r\n\r\n  /** Index of the item. */\r\n  index?: number;\r\n\r\n  /** The type of the item. */\r\n  type?: GalleryItemType;\r\n\r\n  /** True if this item is the active one. */\r\n  active?: boolean;\r\n\r\n  /** The number of total items. */\r\n  count?: number;\r\n\r\n  /** True if this item is first. */\r\n  first?: boolean;\r\n\r\n  /** True if this item is last. */\r\n  last?: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "$implicit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": true,
                    "description": "<p>Data for the row that this cell is located within.</p>\n",
                    "line": 25,
                    "rawdescription": "\nData for the row that this cell is located within."
                },
                {
                    "name": "active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "<p>True if this item is the active one.</p>\n",
                    "line": 34,
                    "rawdescription": "\nTrue if this item is the active one."
                },
                {
                    "name": "count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "<p>The number of total items.</p>\n",
                    "line": 37,
                    "rawdescription": "\nThe number of total items."
                },
                {
                    "name": "first",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "<p>True if this item is first.</p>\n",
                    "line": 40,
                    "rawdescription": "\nTrue if this item is first."
                },
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "<p>Index of the item.</p>\n",
                    "line": 28,
                    "rawdescription": "\nIndex of the item."
                },
                {
                    "name": "last",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "<p>True if this item is last.</p>\n",
                    "line": 43,
                    "rawdescription": "\nTrue if this item is last."
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GalleryItemType",
                    "optional": true,
                    "description": "<p>The type of the item.</p>\n",
                    "line": 31,
                    "rawdescription": "\nThe type of the item."
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "GalleryState",
            "id": "interface-GalleryState-bccc61a9106233b10cea13d16a36070bc93ff42f88a7f805e345e1617af3cfd049400f126fa7362585b75441e4bc42e59899a526d56d21bee91bd073bec24a6c",
            "file": "projects/ng-gallery/src/lib/models/gallery.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { GalleryAction, GalleryItemType } from './constants';\r\nimport { GalleryItemData } from '../components/templates/items.model';\r\n\r\nexport interface GalleryState {\r\n  action?: GalleryAction;\r\n  items?: GalleryItem[];\r\n  behavior?: ScrollBehavior;\r\n  currIndex?: number;\r\n  hasNext?: boolean;\r\n  hasPrev?: boolean;\r\n  isPlaying?: boolean;\r\n}\r\n\r\nexport interface GalleryItem {\r\n  data?: GalleryItemData;\r\n  type?: GalleryItemType;\r\n}\r\n\r\nexport interface GalleryError {\r\n  itemIndex: number;\r\n  error: ErrorEvent;\r\n}\r\n",
            "properties": [
                {
                    "name": "action",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GalleryAction",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "behavior",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ScrollBehavior",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "currIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "hasNext",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "hasPrev",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "isPlaying",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GalleryItem[]",
                    "optional": true,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "GalleryStateContext",
            "id": "interface-GalleryStateContext-dc42fc50e33dfef0b09f6091971bf663a23f56cdc21288a1d462bdbc08634bd1b5b282ac3be9fcd63e7a7bf9dbb0caf078fe0cc1be3b3bee6b6030f88eb947cf",
            "file": "projects/ng-gallery/src/lib/directives/gallery-box-def.directive.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Directive, TemplateRef } from '@angular/core';\r\nimport { GalleryState } from '../models/gallery.model';\r\nimport { GalleryConfig } from '../models/config.model';\r\n\r\n\r\n@Directive({\r\n  standalone: true,\r\n  selector: '[galleryBoxDef]'\r\n})\r\nexport class GalleryBoxDef {\r\n\r\n  constructor(public templateRef: TemplateRef<GalleryStateContext>) {\r\n  }\r\n\r\n  // Make sure the template checker knows the type of the context with which the\r\n  // template of this directive will be rendered\r\n  static ngTemplateContextGuard(\r\n    directive: GalleryBoxDef,\r\n    context: unknown\r\n  ): context is GalleryStateContext {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport interface GalleryStateContext {\r\n  state?: GalleryState;\r\n  config?: GalleryConfig;\r\n}\r\n",
            "properties": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GalleryConfig",
                    "optional": true,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GalleryState",
                    "optional": true,
                    "description": "",
                    "line": 26
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "Hit",
            "id": "interface-Hit-9963e215a72986d46269a7e039737f6c6e55bc470c7ac76575d708b4130365d8f7c49083162f6e62f4513eb9bdb38e41e5a145ecf64a471b5a64bc6912546195",
            "file": "projects/ng-gallery/src/stories/pixabay/pixabay.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface PixabayModel {\r\n  total: number;\r\n  totalHits: number;\r\n  hits: Hit[];\r\n}\r\n\r\nexport interface Hit {\r\n  id: number;\r\n  pageURL: string;\r\n  type: string;\r\n  tags: string[];\r\n  previewURL: string;\r\n  previewWidth: number;\r\n  previewHeight: number;\r\n  webformatURL: string;\r\n  webformatWidth: number;\r\n  webformatHeight: number;\r\n  imageWidth: number;\r\n  imageHeight: number;\r\n  imageSize: number;\r\n  views: number;\r\n  downloads: number;\r\n  favorites: number;\r\n  likes: number;\r\n  comments: number;\r\n  user_id: number;\r\n  user: string;\r\n  userImageURL: string;\r\n}\r\nexport interface PixabayHDModel {\r\n  total: number;\r\n  totalHits: number;\r\n  hits: Hit2[];\r\n}\r\n\r\nexport interface Hit2 {\r\n  id_hash: string;\r\n  type: string;\r\n  previewURL: string;\r\n  previewWidth: number;\r\n  previewHeight: number;\r\n  webformatURL: string;\r\n  webformatWidth: number;\r\n  webformatHeight: number;\r\n  largeImageURL: string;\r\n  fullHDURL: string;\r\n  imageWidth: number;\r\n  imageHeight: number;\r\n  imageSize: number;\r\n  imageURL: string;\r\n  user_id: number;\r\n  user: string;\r\n  userImageURL: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "comments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "downloads",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "favorites",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "imageHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "imageSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "imageWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "likes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "pageURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "previewHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "previewURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "previewWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "tags",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "user_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "userImageURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "views",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "webformatHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "webformatURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "webformatWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "Hit2",
            "id": "interface-Hit2-9963e215a72986d46269a7e039737f6c6e55bc470c7ac76575d708b4130365d8f7c49083162f6e62f4513eb9bdb38e41e5a145ecf64a471b5a64bc6912546195",
            "file": "projects/ng-gallery/src/stories/pixabay/pixabay.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface PixabayModel {\r\n  total: number;\r\n  totalHits: number;\r\n  hits: Hit[];\r\n}\r\n\r\nexport interface Hit {\r\n  id: number;\r\n  pageURL: string;\r\n  type: string;\r\n  tags: string[];\r\n  previewURL: string;\r\n  previewWidth: number;\r\n  previewHeight: number;\r\n  webformatURL: string;\r\n  webformatWidth: number;\r\n  webformatHeight: number;\r\n  imageWidth: number;\r\n  imageHeight: number;\r\n  imageSize: number;\r\n  views: number;\r\n  downloads: number;\r\n  favorites: number;\r\n  likes: number;\r\n  comments: number;\r\n  user_id: number;\r\n  user: string;\r\n  userImageURL: string;\r\n}\r\nexport interface PixabayHDModel {\r\n  total: number;\r\n  totalHits: number;\r\n  hits: Hit2[];\r\n}\r\n\r\nexport interface Hit2 {\r\n  id_hash: string;\r\n  type: string;\r\n  previewURL: string;\r\n  previewWidth: number;\r\n  previewHeight: number;\r\n  webformatURL: string;\r\n  webformatWidth: number;\r\n  webformatHeight: number;\r\n  largeImageURL: string;\r\n  fullHDURL: string;\r\n  imageWidth: number;\r\n  imageHeight: number;\r\n  imageSize: number;\r\n  imageURL: string;\r\n  user_id: number;\r\n  user: string;\r\n  userImageURL: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "fullHDURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "id_hash",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "imageHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "imageSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "imageURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "imageWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "largeImageURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "previewHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "previewURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "previewWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "user_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "userImageURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "webformatHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "webformatURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "webformatWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "ImageRegistry",
            "id": "interface-ImageRegistry-1e866edcdaf413ff6b97d6c0d28de27c02d86d2541f0037c4ee618a37f046e7657dfe08ed0dfdffcc7fc468817c0fc1ddb92feaec87cc5069cccc55780a4f395",
            "file": "projects/ng-gallery/src/lib/utils/img-manager.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Observable, BehaviorSubject, filter, map, switchMap, EMPTY } from 'rxjs';\r\nimport { GalleryState } from '../models/gallery.model';\r\nimport { ItemState } from '../components/templates/items.model';\r\n\r\ninterface ImageRegistry {\r\n  state: Observable<ItemState>;\r\n  target: HTMLImageElement;\r\n}\r\n\r\n@Injectable()\r\nexport class ImgManager {\r\n\r\n  private readonly trigger$: BehaviorSubject<void> = new BehaviorSubject<void>(null);\r\n\r\n  private readonly images: Map<number, ImageRegistry> = new Map<number, ImageRegistry>();\r\n\r\n  getActiveItem(state$: Observable<GalleryState>): Observable<HTMLImageElement> {\r\n    return this.trigger$.pipe(\r\n      switchMap(() => state$.pipe(\r\n        switchMap((state: GalleryState) => {\r\n          const img: ImageRegistry = this.images.get(state.currIndex);\r\n          if (img) {\r\n            return img.state.pipe(\r\n              filter((state: ItemState) => state !== 'loading'),\r\n              map(() => img.target)\r\n            )\r\n          }\r\n          return EMPTY;\r\n        })\r\n      ))\r\n    );\r\n  }\r\n\r\n  addItem(index: number, payload: ImageRegistry): void {\r\n    this.images.set(index, payload);\r\n    this.trigger$.next();\r\n  }\r\n\r\n  deleteItem(index: number): void {\r\n    if (this.images.has(index)) {\r\n      this.images.delete(index);\r\n      this.trigger$.next();\r\n    }\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<ItemState>",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "target",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLImageElement",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "NavConfig",
            "id": "interface-NavConfig-6f9fdbcb39c24b0d29450ee3ef7d2371630be5c1f946773304ae58c3414ed67b990c7b6f65447311539eda65a179e0088235c46b7a44e65008d279b9ef79431e",
            "file": "projects/ng-gallery/src/lib/models/config.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken, TemplateRef } from '@angular/core';\r\nimport { BezierEasingOptions } from '../smooth-scroll';\r\n\r\nexport const GALLERY_CONFIG: InjectionToken<GalleryConfig> = new InjectionToken<GalleryConfig>('GALLERY_CONFIG');\r\n\r\ntype ImageSize = 'contain' | 'cover';\r\n\r\ntype Orientation = 'horizontal' | 'vertical';\r\n\r\ntype ThumbsPosition = 'top' | 'left' | 'right' | 'bottom';\r\n\r\ntype HorizontalPosition = 'top' | 'bottom';\r\n\r\ntype LoadingStrategy = 'preload' | 'lazy' | 'default';\r\n\r\ntype LoadingAttr = 'eager' | 'lazy';\r\n\r\ninterface ThumbConfig {\r\n  thumbs?: boolean;\r\n  thumbWidth?: number;\r\n  thumbHeight?: number;\r\n  thumbLoadingIcon?: string;\r\n  thumbLoadingError?: string;\r\n  disableThumbs?: boolean;\r\n  detachThumbs?: boolean;\r\n  thumbAutosize?: boolean;\r\n  disableThumbScroll?: boolean;\r\n  disableThumbMouseScroll?: boolean;\r\n  thumbCentralized?: boolean;\r\n  thumbPosition?: ThumbsPosition;\r\n  thumbImageSize?: ImageSize;\r\n  thumbTemplate?: TemplateRef<any>;\r\n}\r\n\r\ninterface NavConfig {\r\n  nav?: boolean;\r\n  navIcon?: string;\r\n}\r\n\r\ninterface BulletsConfig {\r\n  bullets?: boolean;\r\n  disableBullets?: boolean;\r\n  bulletSize?: number;\r\n  bulletPosition?: HorizontalPosition;\r\n}\r\n\r\ninterface CounterConfig {\r\n  counter?: boolean;\r\n  counterPosition?: HorizontalPosition;\r\n}\r\n\r\ninterface PlayerConfig {\r\n  autoplay?: boolean;\r\n  autoplayInterval?: number;\r\n}\r\n\r\ninterface SliderConfig {\r\n  loop?: boolean;\r\n  disableScroll?: boolean;\r\n  disableMouseScroll?: boolean;\r\n  itemAutosize?: boolean;\r\n  autoHeight?: boolean;\r\n  loadingIcon?: string;\r\n  loadingError?: string;\r\n  scrollDuration?: number;\r\n  scrollEase?: BezierEasingOptions;\r\n  orientation?: Orientation;\r\n  imageSize?: ImageSize;\r\n  loadingStrategy?: LoadingStrategy;\r\n  loadingAttr?: LoadingAttr;\r\n  boxTemplate?: TemplateRef<any>;\r\n  itemTemplate?: TemplateRef<any>;\r\n  imageTemplate?: TemplateRef<any>;\r\n}\r\n\r\nexport type GalleryConfig = SliderConfig\r\n  & ThumbConfig\r\n  & NavConfig\r\n  & BulletsConfig\r\n  & CounterConfig\r\n  & PlayerConfig\r\n  & {\r\n  scrollBehavior?: ScrollBehavior;\r\n  resizeDebounceTime?: number;\r\n  debug?: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "nav",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "navIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 37
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "PixabayHDModel",
            "id": "interface-PixabayHDModel-9963e215a72986d46269a7e039737f6c6e55bc470c7ac76575d708b4130365d8f7c49083162f6e62f4513eb9bdb38e41e5a145ecf64a471b5a64bc6912546195",
            "file": "projects/ng-gallery/src/stories/pixabay/pixabay.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface PixabayModel {\r\n  total: number;\r\n  totalHits: number;\r\n  hits: Hit[];\r\n}\r\n\r\nexport interface Hit {\r\n  id: number;\r\n  pageURL: string;\r\n  type: string;\r\n  tags: string[];\r\n  previewURL: string;\r\n  previewWidth: number;\r\n  previewHeight: number;\r\n  webformatURL: string;\r\n  webformatWidth: number;\r\n  webformatHeight: number;\r\n  imageWidth: number;\r\n  imageHeight: number;\r\n  imageSize: number;\r\n  views: number;\r\n  downloads: number;\r\n  favorites: number;\r\n  likes: number;\r\n  comments: number;\r\n  user_id: number;\r\n  user: string;\r\n  userImageURL: string;\r\n}\r\nexport interface PixabayHDModel {\r\n  total: number;\r\n  totalHits: number;\r\n  hits: Hit2[];\r\n}\r\n\r\nexport interface Hit2 {\r\n  id_hash: string;\r\n  type: string;\r\n  previewURL: string;\r\n  previewWidth: number;\r\n  previewHeight: number;\r\n  webformatURL: string;\r\n  webformatWidth: number;\r\n  webformatHeight: number;\r\n  largeImageURL: string;\r\n  fullHDURL: string;\r\n  imageWidth: number;\r\n  imageHeight: number;\r\n  imageSize: number;\r\n  imageURL: string;\r\n  user_id: number;\r\n  user: string;\r\n  userImageURL: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "hits",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Hit2[]",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "total",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "totalHits",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "PixabayModel",
            "id": "interface-PixabayModel-9963e215a72986d46269a7e039737f6c6e55bc470c7ac76575d708b4130365d8f7c49083162f6e62f4513eb9bdb38e41e5a145ecf64a471b5a64bc6912546195",
            "file": "projects/ng-gallery/src/stories/pixabay/pixabay.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface PixabayModel {\r\n  total: number;\r\n  totalHits: number;\r\n  hits: Hit[];\r\n}\r\n\r\nexport interface Hit {\r\n  id: number;\r\n  pageURL: string;\r\n  type: string;\r\n  tags: string[];\r\n  previewURL: string;\r\n  previewWidth: number;\r\n  previewHeight: number;\r\n  webformatURL: string;\r\n  webformatWidth: number;\r\n  webformatHeight: number;\r\n  imageWidth: number;\r\n  imageHeight: number;\r\n  imageSize: number;\r\n  views: number;\r\n  downloads: number;\r\n  favorites: number;\r\n  likes: number;\r\n  comments: number;\r\n  user_id: number;\r\n  user: string;\r\n  userImageURL: string;\r\n}\r\nexport interface PixabayHDModel {\r\n  total: number;\r\n  totalHits: number;\r\n  hits: Hit2[];\r\n}\r\n\r\nexport interface Hit2 {\r\n  id_hash: string;\r\n  type: string;\r\n  previewURL: string;\r\n  previewWidth: number;\r\n  previewHeight: number;\r\n  webformatURL: string;\r\n  webformatWidth: number;\r\n  webformatHeight: number;\r\n  largeImageURL: string;\r\n  fullHDURL: string;\r\n  imageWidth: number;\r\n  imageHeight: number;\r\n  imageSize: number;\r\n  imageURL: string;\r\n  user_id: number;\r\n  user: string;\r\n  userImageURL: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "hits",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Hit[]",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "total",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "totalHits",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "PlayerConfig",
            "id": "interface-PlayerConfig-6f9fdbcb39c24b0d29450ee3ef7d2371630be5c1f946773304ae58c3414ed67b990c7b6f65447311539eda65a179e0088235c46b7a44e65008d279b9ef79431e",
            "file": "projects/ng-gallery/src/lib/models/config.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken, TemplateRef } from '@angular/core';\r\nimport { BezierEasingOptions } from '../smooth-scroll';\r\n\r\nexport const GALLERY_CONFIG: InjectionToken<GalleryConfig> = new InjectionToken<GalleryConfig>('GALLERY_CONFIG');\r\n\r\ntype ImageSize = 'contain' | 'cover';\r\n\r\ntype Orientation = 'horizontal' | 'vertical';\r\n\r\ntype ThumbsPosition = 'top' | 'left' | 'right' | 'bottom';\r\n\r\ntype HorizontalPosition = 'top' | 'bottom';\r\n\r\ntype LoadingStrategy = 'preload' | 'lazy' | 'default';\r\n\r\ntype LoadingAttr = 'eager' | 'lazy';\r\n\r\ninterface ThumbConfig {\r\n  thumbs?: boolean;\r\n  thumbWidth?: number;\r\n  thumbHeight?: number;\r\n  thumbLoadingIcon?: string;\r\n  thumbLoadingError?: string;\r\n  disableThumbs?: boolean;\r\n  detachThumbs?: boolean;\r\n  thumbAutosize?: boolean;\r\n  disableThumbScroll?: boolean;\r\n  disableThumbMouseScroll?: boolean;\r\n  thumbCentralized?: boolean;\r\n  thumbPosition?: ThumbsPosition;\r\n  thumbImageSize?: ImageSize;\r\n  thumbTemplate?: TemplateRef<any>;\r\n}\r\n\r\ninterface NavConfig {\r\n  nav?: boolean;\r\n  navIcon?: string;\r\n}\r\n\r\ninterface BulletsConfig {\r\n  bullets?: boolean;\r\n  disableBullets?: boolean;\r\n  bulletSize?: number;\r\n  bulletPosition?: HorizontalPosition;\r\n}\r\n\r\ninterface CounterConfig {\r\n  counter?: boolean;\r\n  counterPosition?: HorizontalPosition;\r\n}\r\n\r\ninterface PlayerConfig {\r\n  autoplay?: boolean;\r\n  autoplayInterval?: number;\r\n}\r\n\r\ninterface SliderConfig {\r\n  loop?: boolean;\r\n  disableScroll?: boolean;\r\n  disableMouseScroll?: boolean;\r\n  itemAutosize?: boolean;\r\n  autoHeight?: boolean;\r\n  loadingIcon?: string;\r\n  loadingError?: string;\r\n  scrollDuration?: number;\r\n  scrollEase?: BezierEasingOptions;\r\n  orientation?: Orientation;\r\n  imageSize?: ImageSize;\r\n  loadingStrategy?: LoadingStrategy;\r\n  loadingAttr?: LoadingAttr;\r\n  boxTemplate?: TemplateRef<any>;\r\n  itemTemplate?: TemplateRef<any>;\r\n  imageTemplate?: TemplateRef<any>;\r\n}\r\n\r\nexport type GalleryConfig = SliderConfig\r\n  & ThumbConfig\r\n  & NavConfig\r\n  & BulletsConfig\r\n  & CounterConfig\r\n  & PlayerConfig\r\n  & {\r\n  scrollBehavior?: ScrollBehavior;\r\n  resizeDebounceTime?: number;\r\n  debug?: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "autoplay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "autoplayInterval",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 54
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "SliderConfig",
            "id": "interface-SliderConfig-6f9fdbcb39c24b0d29450ee3ef7d2371630be5c1f946773304ae58c3414ed67b990c7b6f65447311539eda65a179e0088235c46b7a44e65008d279b9ef79431e",
            "file": "projects/ng-gallery/src/lib/models/config.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken, TemplateRef } from '@angular/core';\r\nimport { BezierEasingOptions } from '../smooth-scroll';\r\n\r\nexport const GALLERY_CONFIG: InjectionToken<GalleryConfig> = new InjectionToken<GalleryConfig>('GALLERY_CONFIG');\r\n\r\ntype ImageSize = 'contain' | 'cover';\r\n\r\ntype Orientation = 'horizontal' | 'vertical';\r\n\r\ntype ThumbsPosition = 'top' | 'left' | 'right' | 'bottom';\r\n\r\ntype HorizontalPosition = 'top' | 'bottom';\r\n\r\ntype LoadingStrategy = 'preload' | 'lazy' | 'default';\r\n\r\ntype LoadingAttr = 'eager' | 'lazy';\r\n\r\ninterface ThumbConfig {\r\n  thumbs?: boolean;\r\n  thumbWidth?: number;\r\n  thumbHeight?: number;\r\n  thumbLoadingIcon?: string;\r\n  thumbLoadingError?: string;\r\n  disableThumbs?: boolean;\r\n  detachThumbs?: boolean;\r\n  thumbAutosize?: boolean;\r\n  disableThumbScroll?: boolean;\r\n  disableThumbMouseScroll?: boolean;\r\n  thumbCentralized?: boolean;\r\n  thumbPosition?: ThumbsPosition;\r\n  thumbImageSize?: ImageSize;\r\n  thumbTemplate?: TemplateRef<any>;\r\n}\r\n\r\ninterface NavConfig {\r\n  nav?: boolean;\r\n  navIcon?: string;\r\n}\r\n\r\ninterface BulletsConfig {\r\n  bullets?: boolean;\r\n  disableBullets?: boolean;\r\n  bulletSize?: number;\r\n  bulletPosition?: HorizontalPosition;\r\n}\r\n\r\ninterface CounterConfig {\r\n  counter?: boolean;\r\n  counterPosition?: HorizontalPosition;\r\n}\r\n\r\ninterface PlayerConfig {\r\n  autoplay?: boolean;\r\n  autoplayInterval?: number;\r\n}\r\n\r\ninterface SliderConfig {\r\n  loop?: boolean;\r\n  disableScroll?: boolean;\r\n  disableMouseScroll?: boolean;\r\n  itemAutosize?: boolean;\r\n  autoHeight?: boolean;\r\n  loadingIcon?: string;\r\n  loadingError?: string;\r\n  scrollDuration?: number;\r\n  scrollEase?: BezierEasingOptions;\r\n  orientation?: Orientation;\r\n  imageSize?: ImageSize;\r\n  loadingStrategy?: LoadingStrategy;\r\n  loadingAttr?: LoadingAttr;\r\n  boxTemplate?: TemplateRef<any>;\r\n  itemTemplate?: TemplateRef<any>;\r\n  imageTemplate?: TemplateRef<any>;\r\n}\r\n\r\nexport type GalleryConfig = SliderConfig\r\n  & ThumbConfig\r\n  & NavConfig\r\n  & BulletsConfig\r\n  & CounterConfig\r\n  & PlayerConfig\r\n  & {\r\n  scrollBehavior?: ScrollBehavior;\r\n  resizeDebounceTime?: number;\r\n  debug?: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "autoHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "boxTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": true,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "disableMouseScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "disableScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "imageSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ImageSize",
                    "optional": true,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "imageTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": true,
                    "description": "",
                    "line": 73
                },
                {
                    "name": "itemAutosize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "itemTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": true,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "loadingAttr",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LoadingAttr",
                    "optional": true,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "loadingError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "loadingIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "loadingStrategy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LoadingStrategy",
                    "optional": true,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "loop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "orientation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Orientation",
                    "optional": true,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "scrollDuration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "scrollEase",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BezierEasingOptions",
                    "optional": true,
                    "description": "",
                    "line": 66
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "SliderState",
            "id": "interface-SliderState-d22312f8a2fc91818c2306e7e2454008eef511221649d326d37fbdd06035ce34659a4234e92dad62f41e0298ff110bcd14a068c3054d8c83edefdd48daedc8f3",
            "file": "projects/ng-gallery/src/lib/models/slider.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SliderState {\r\n  style: any;\r\n  instant: boolean;\r\n}\r\n\r\nexport interface WorkerState {\r\n  value: number;\r\n  instant: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "instant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "SmoothScrollStep",
            "id": "interface-SmoothScrollStep-d5eb67d1ecb7e4a497bc40fcef2fe77cbb5c20ac2db236be86ebd414c779eaa102f061d231cd6f4b9e7eccafc0caec3de14b9637f33374309f5e2e1e76ff7548",
            "file": "projects/ng-gallery/src/lib/smooth-scroll/smooth-scroll.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { _XAxis, _YAxis } from '@angular/cdk/scrolling';\r\n\r\nexport type SmoothScrollOptions = _XAxis & _YAxis & {\r\n  behavior?: ScrollBehavior;\r\n}\r\n\r\nexport type SmoothScrollToOptions = _XAxis & _YAxis & {\r\n  duration?: number;\r\n  easing?: BezierEasingOptions;\r\n};\r\n\r\nexport interface SmoothScrollStep {\r\n  scrollable: HTMLElement;\r\n  startTime: number;\r\n  startX: number;\r\n  startY: number;\r\n  x: number;\r\n  y: number;\r\n  duration: number;\r\n  easing: (k: number) => number;\r\n  currentX?: number;\r\n  currentY?: number;\r\n}\r\n\r\nexport interface BezierEasingOptions {\r\n  x1: number;\r\n  y1: number;\r\n  x2: number;\r\n  y2: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "currentX",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "currentY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "easing",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "scrollable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "startTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "startX",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "startY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "x",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "y",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "ThumbConfig",
            "id": "interface-ThumbConfig-6f9fdbcb39c24b0d29450ee3ef7d2371630be5c1f946773304ae58c3414ed67b990c7b6f65447311539eda65a179e0088235c46b7a44e65008d279b9ef79431e",
            "file": "projects/ng-gallery/src/lib/models/config.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken, TemplateRef } from '@angular/core';\r\nimport { BezierEasingOptions } from '../smooth-scroll';\r\n\r\nexport const GALLERY_CONFIG: InjectionToken<GalleryConfig> = new InjectionToken<GalleryConfig>('GALLERY_CONFIG');\r\n\r\ntype ImageSize = 'contain' | 'cover';\r\n\r\ntype Orientation = 'horizontal' | 'vertical';\r\n\r\ntype ThumbsPosition = 'top' | 'left' | 'right' | 'bottom';\r\n\r\ntype HorizontalPosition = 'top' | 'bottom';\r\n\r\ntype LoadingStrategy = 'preload' | 'lazy' | 'default';\r\n\r\ntype LoadingAttr = 'eager' | 'lazy';\r\n\r\ninterface ThumbConfig {\r\n  thumbs?: boolean;\r\n  thumbWidth?: number;\r\n  thumbHeight?: number;\r\n  thumbLoadingIcon?: string;\r\n  thumbLoadingError?: string;\r\n  disableThumbs?: boolean;\r\n  detachThumbs?: boolean;\r\n  thumbAutosize?: boolean;\r\n  disableThumbScroll?: boolean;\r\n  disableThumbMouseScroll?: boolean;\r\n  thumbCentralized?: boolean;\r\n  thumbPosition?: ThumbsPosition;\r\n  thumbImageSize?: ImageSize;\r\n  thumbTemplate?: TemplateRef<any>;\r\n}\r\n\r\ninterface NavConfig {\r\n  nav?: boolean;\r\n  navIcon?: string;\r\n}\r\n\r\ninterface BulletsConfig {\r\n  bullets?: boolean;\r\n  disableBullets?: boolean;\r\n  bulletSize?: number;\r\n  bulletPosition?: HorizontalPosition;\r\n}\r\n\r\ninterface CounterConfig {\r\n  counter?: boolean;\r\n  counterPosition?: HorizontalPosition;\r\n}\r\n\r\ninterface PlayerConfig {\r\n  autoplay?: boolean;\r\n  autoplayInterval?: number;\r\n}\r\n\r\ninterface SliderConfig {\r\n  loop?: boolean;\r\n  disableScroll?: boolean;\r\n  disableMouseScroll?: boolean;\r\n  itemAutosize?: boolean;\r\n  autoHeight?: boolean;\r\n  loadingIcon?: string;\r\n  loadingError?: string;\r\n  scrollDuration?: number;\r\n  scrollEase?: BezierEasingOptions;\r\n  orientation?: Orientation;\r\n  imageSize?: ImageSize;\r\n  loadingStrategy?: LoadingStrategy;\r\n  loadingAttr?: LoadingAttr;\r\n  boxTemplate?: TemplateRef<any>;\r\n  itemTemplate?: TemplateRef<any>;\r\n  imageTemplate?: TemplateRef<any>;\r\n}\r\n\r\nexport type GalleryConfig = SliderConfig\r\n  & ThumbConfig\r\n  & NavConfig\r\n  & BulletsConfig\r\n  & CounterConfig\r\n  & PlayerConfig\r\n  & {\r\n  scrollBehavior?: ScrollBehavior;\r\n  resizeDebounceTime?: number;\r\n  debug?: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "detachThumbs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "disableThumbMouseScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "disableThumbs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "disableThumbScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "thumbAutosize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "thumbCentralized",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "thumbHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "thumbImageSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ImageSize",
                    "optional": true,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "thumbLoadingError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "thumbLoadingIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "thumbPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThumbsPosition",
                    "optional": true,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "thumbs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "thumbTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": true,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "thumbWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 20
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "WorkerState",
            "id": "interface-WorkerState-d22312f8a2fc91818c2306e7e2454008eef511221649d326d37fbdd06035ce34659a4234e92dad62f41e0298ff110bcd14a068c3054d8c83edefdd48daedc8f3",
            "file": "projects/ng-gallery/src/lib/models/slider.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SliderState {\r\n  style: any;\r\n  instant: boolean;\r\n}\r\n\r\nexport interface WorkerState {\r\n  value: number;\r\n  instant: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "instant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "Gallery",
            "id": "injectable-Gallery-5a22f71c73e3d73bdb0d70d243c246ee81e6ad9ed4f2db3fed877932e3a5417d5f42141b52cd8a3e3759288dfdb43d47d607cc442701be17aa01e323801eae82",
            "file": "projects/ng-gallery/src/lib/services/gallery.service.ts",
            "properties": [
                {
                    "name": "_instances",
                    "defaultValue": "new Map<string, GalleryRef>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Store gallery instances</p>\n",
                    "line": 13,
                    "rawdescription": "\nStore gallery instances",
                    "modifierKind": [
                        121,
                        146
                    ]
                },
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GalleryConfig",
                    "optional": false,
                    "description": "<p>Global config</p>\n",
                    "line": 16,
                    "rawdescription": "\nGlobal config"
                }
            ],
            "methods": [
                {
                    "name": "debugConsole",
                    "args": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLogger for debugging\n",
                    "description": "<p>Logger for debugging</p>\n",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteInstance",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "() => void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nA destroyer function for each gallery instance\n",
                    "description": "<p>A destroyer function for each gallery instance</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "destroyAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDestroy all gallery instances\n",
                    "description": "<p>Destroy all gallery instances</p>\n"
                },
                {
                    "name": "ref",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'root'"
                        },
                        {
                            "name": "config",
                            "type": "GalleryConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "GalleryRef",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet or create gallery by ID\n",
                    "description": "<p>Get or create gallery by ID</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 676,
                                "end": 678,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "id"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'root'",
                            "tagName": {
                                "pos": 670,
                                "end": 675,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": {
                                "pos": 692,
                                "end": 698,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "config"
                            },
                            "type": "GalleryConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 686,
                                "end": 691,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "resetAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset all gallery instances\n",
                    "description": "<p>Reset all gallery instances</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable, Optional } from '@angular/core';\r\n\r\nimport { GalleryRef } from './gallery-ref';\r\nimport { GalleryConfig, GALLERY_CONFIG } from '../models/config.model';\r\nimport { defaultConfig } from '../utils/gallery.default';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Gallery {\r\n\r\n  /** Store gallery instances */\r\n  private readonly _instances = new Map<string, GalleryRef>();\r\n\r\n  /** Global config */\r\n  config: GalleryConfig;\r\n\r\n  constructor(@Optional() @Inject(GALLERY_CONFIG) config: GalleryConfig) {\r\n    this.config = config ? { ...defaultConfig, ...config } : defaultConfig;\r\n  }\r\n\r\n  /**\r\n   * Get or create gallery by ID\r\n   * @param id\r\n   * @param config\r\n   */\r\n  ref(id = 'root', config?: GalleryConfig): GalleryRef {\r\n    if (this._instances.has(id)) {\r\n      const galleryRef: GalleryRef = this._instances.get(id);\r\n      if (config) {\r\n        galleryRef.setConfig(config);\r\n      }\r\n      return galleryRef;\r\n    } else {\r\n      return this._instances.set(id, new GalleryRef({ ...this.config, ...config }, this.deleteInstance(id))).get(id);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroy all gallery instances\r\n   */\r\n  destroyAll() {\r\n    this._instances.forEach((ref: GalleryRef) => ref.destroy());\r\n  }\r\n\r\n  /**\r\n   * Reset all gallery instances\r\n   */\r\n  resetAll() {\r\n    this._instances.forEach((ref: GalleryRef) => ref.reset());\r\n  }\r\n\r\n  /**\r\n   * Logger for debugging\r\n   */\r\n  debugConsole(...data: any[]): void {\r\n    if (this.config.debug) {\r\n      console.log(...data)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A destroyer function for each gallery instance\r\n   */\r\n  private deleteInstance(id: string) {\r\n    return () => {\r\n      if (this._instances.has(id)) {\r\n        this._instances.delete(id);\r\n      }\r\n    };\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "config",
                        "type": "GalleryConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "config",
                        "type": "GalleryConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ImgManager",
            "id": "injectable-ImgManager-1e866edcdaf413ff6b97d6c0d28de27c02d86d2541f0037c4ee618a37f046e7657dfe08ed0dfdffcc7fc468817c0fc1ddb92feaec87cc5069cccc55780a4f395",
            "file": "projects/ng-gallery/src/lib/utils/img-manager.ts",
            "properties": [
                {
                    "name": "images",
                    "defaultValue": "new Map<number, ImageRegistry>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<number | ImageRegistry>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        121,
                        146
                    ]
                },
                {
                    "name": "trigger$",
                    "defaultValue": "new BehaviorSubject<void>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<void>",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        121,
                        146
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addItem",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "payload",
                            "type": "ImageRegistry",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "payload",
                            "type": "ImageRegistry",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteItem",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getActiveItem",
                    "args": [
                        {
                            "name": "state$",
                            "type": "Observable<GalleryState>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HTMLImageElement>",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "state$",
                            "type": "Observable<GalleryState>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Observable, BehaviorSubject, filter, map, switchMap, EMPTY } from 'rxjs';\r\nimport { GalleryState } from '../models/gallery.model';\r\nimport { ItemState } from '../components/templates/items.model';\r\n\r\ninterface ImageRegistry {\r\n  state: Observable<ItemState>;\r\n  target: HTMLImageElement;\r\n}\r\n\r\n@Injectable()\r\nexport class ImgManager {\r\n\r\n  private readonly trigger$: BehaviorSubject<void> = new BehaviorSubject<void>(null);\r\n\r\n  private readonly images: Map<number, ImageRegistry> = new Map<number, ImageRegistry>();\r\n\r\n  getActiveItem(state$: Observable<GalleryState>): Observable<HTMLImageElement> {\r\n    return this.trigger$.pipe(\r\n      switchMap(() => state$.pipe(\r\n        switchMap((state: GalleryState) => {\r\n          const img: ImageRegistry = this.images.get(state.currIndex);\r\n          if (img) {\r\n            return img.state.pipe(\r\n              filter((state: ItemState) => state !== 'loading'),\r\n              map(() => img.target)\r\n            )\r\n          }\r\n          return EMPTY;\r\n        })\r\n      ))\r\n    );\r\n  }\r\n\r\n  addItem(index: number, payload: ImageRegistry): void {\r\n    this.images.set(index, payload);\r\n    this.trigger$.next();\r\n  }\r\n\r\n  deleteItem(index: number): void {\r\n    if (this.images.has(index)) {\r\n      this.images.delete(index);\r\n      this.trigger$.next();\r\n    }\r\n  }\r\n}\r\n",
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "ActiveItemObserver",
            "id": "class-ActiveItemObserver-9180d1fd42bb564fafb7790f26d07a9aac1ae69ddab5986cfb4e40bc313416ec17d3a9b8b461ae3d18fbb987444aeee96f71c95fa6d3f7147b560221fef2e46b",
            "file": "projects/ng-gallery/src/lib/observers/active-item-observer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Observable, Subscriber, mergeMap, filter, map } from 'rxjs';\r\n\r\nexport class ActiveItemObserver {\r\n\r\n  observe(root: HTMLElement, elements: HTMLElement[], rootMargin: string): Observable<number> {\r\n    return createIntersectionObserver(root, elements, rootMargin).pipe(\r\n      map((entry: IntersectionObserverEntry) => {\r\n        if (entry.isIntersecting) {\r\n          entry.target.classList.add('g-item-highlight');\r\n          return +entry.target.getAttribute('galleryIndex');\r\n        } else {\r\n          entry.target.classList.remove('g-item-highlight');\r\n          return -1;\r\n        }\r\n      }),\r\n      filter((index: number) => index !== -1)\r\n    );\r\n  }\r\n}\r\n\r\nfunction createIntersectionObserver(root: HTMLElement, elements: HTMLElement[], rootMargin: string): Observable<IntersectionObserverEntry> {\r\n  return new Observable((observer: Subscriber<IntersectionObserverEntry[]>) => {\r\n    const intersectionObserver: IntersectionObserver = new IntersectionObserver(\r\n      (entries: IntersectionObserverEntry[]) => observer.next(entries),\r\n      {\r\n        root,\r\n        rootMargin,\r\n        threshold: 1\r\n      }\r\n    );\r\n    elements.forEach((element: HTMLElement) => intersectionObserver.observe(element));\r\n    return () => {\r\n      elements.forEach((element: HTMLElement) => intersectionObserver.unobserve(element));\r\n      intersectionObserver.disconnect();\r\n    };\r\n  }).pipe(\r\n    mergeMap((entries: IntersectionObserverEntry[]) => entries)\r\n  );\r\n}\r\n\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "observe",
                    "args": [
                        {
                            "name": "root",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "elements",
                            "type": "HTMLElement[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "rootMargin",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<number>",
                    "typeParameters": [],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "root",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "elements",
                            "type": "HTMLElement[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "rootMargin",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "GalleryRef",
            "id": "class-GalleryRef-8ca5faf14b2f565232b54e8f226af10dede46ddefd46097283d024368d6c02b09ec52d9d6c770cc002b4d899679c38623f7948e4d6e8d322d95d70f337b837ba",
            "file": "projects/ng-gallery/src/lib/services/gallery-ref.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { BehaviorSubject, Subject, Observable, filter } from 'rxjs';\r\nimport { defaultState } from '../utils/gallery.default';\r\nimport { GalleryError, GalleryItem, GalleryState } from '../models/gallery.model';\r\nimport { GalleryConfig } from '../models/config.model';\r\nimport { GalleryAction } from '../models/constants';\r\nimport {\r\n  IframeItem,\r\n  IframeItemData,\r\n  ImageItem,\r\n  ImageItemData,\r\n  VideoItem,\r\n  VideoItemData,\r\n  YoutubeItem,\r\n  YoutubeItemData\r\n} from '../components/templates/items.model';\r\n\r\nconst filterActions = (actions: string[]) => {\r\n  return filter((state: GalleryState) => actions.indexOf(state.action) > -1);\r\n};\r\n\r\nexport class GalleryRef {\r\n\r\n  /** Stream that emits gallery state */\r\n  private readonly _state: BehaviorSubject<GalleryState>;\r\n\r\n  /** Stream that emits gallery config */\r\n  private readonly _config: BehaviorSubject<GalleryConfig>;\r\n\r\n  /** Stream that emits on item click */\r\n  readonly itemClick: Subject<number> = new Subject<number>();\r\n\r\n  /** Stream that emits on thumbnail click */\r\n  readonly thumbClick: Subject<number> = new Subject<number>();\r\n\r\n  /** Stream that emits on an error occurs */\r\n  readonly error: Subject<GalleryError> = new Subject<GalleryError>();\r\n\r\n  /** Gallery Events */\r\n\r\n  /** Stream that emits gallery state */\r\n  readonly state: Observable<GalleryState>;\r\n\r\n  /** Stream that emits gallery config */\r\n  readonly config: Observable<GalleryConfig>;\r\n\r\n  get stateSnapshot(): GalleryState {\r\n    return this._state.value;\r\n  }\r\n\r\n  get configSnapshot(): GalleryConfig {\r\n    return this._config.value;\r\n  }\r\n\r\n  /** Stream that emits when gallery is initialized/reset */\r\n  get initialized(): Observable<GalleryState> {\r\n    return this.state.pipe(filterActions([GalleryAction.INITIALIZED]));\r\n  }\r\n\r\n  /** Stream that emits when items is changed (items loaded, item added, item removed) */\r\n  get itemsChanged(): Observable<GalleryState> {\r\n    return this.state.pipe(filterActions([GalleryAction.ITEMS_CHANGED]));\r\n  }\r\n\r\n  /** Stream that emits when current item is changed */\r\n  get indexChanged(): Observable<GalleryState> {\r\n    return this.state.pipe(filterActions([GalleryAction.INDEX_CHANGED]));\r\n  }\r\n\r\n  /** Stream that emits when the player should start or stop */\r\n  get playingChanged(): Observable<GalleryState> {\r\n    return this.state.pipe(filterActions([GalleryAction.PLAY, GalleryAction.STOP]));\r\n  }\r\n\r\n  constructor(config: GalleryConfig, private deleteInstance: () => void) {\r\n    this._state = new BehaviorSubject<GalleryState>(defaultState);\r\n    this._config = new BehaviorSubject<GalleryConfig>(config);\r\n    this.state = this._state.asObservable();\r\n    this.config = this._config.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Set gallery state\r\n   */\r\n  private setState(state: GalleryState): void {\r\n    this._state.next({ ...this.stateSnapshot, ...state });\r\n  }\r\n\r\n  /**\r\n   * Set gallery config\r\n   */\r\n  setConfig(config: GalleryConfig): void {\r\n    this._config.next({ ...this._config.value, ...config });\r\n  }\r\n\r\n  /**\r\n   * Add gallery item\r\n   */\r\n  add(item: GalleryItem, active?: boolean): void {\r\n    const items: GalleryItem[] = [...this.stateSnapshot.items, item];\r\n    this.setState({\r\n      action: GalleryAction.ITEMS_CHANGED,\r\n      items,\r\n      hasNext: items.length > 1,\r\n      currIndex: active ? items.length - 1 : this.stateSnapshot.currIndex\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add image item\r\n   */\r\n  addImage(data: ImageItemData, active?: boolean): void {\r\n    this.add(new ImageItem(data), active);\r\n  }\r\n\r\n  /**\r\n   * Add video item\r\n   */\r\n  addVideo(data: VideoItemData, active?: boolean): void {\r\n    this.add(new VideoItem(data), active);\r\n  }\r\n\r\n  /**\r\n   * Add iframe item\r\n   */\r\n  addIframe(data: IframeItemData, active?: boolean): void {\r\n    this.add(new IframeItem(data), active);\r\n  }\r\n\r\n  /**\r\n   * Add Youtube item\r\n   */\r\n  addYoutube(data: YoutubeItemData, active?: boolean): void {\r\n    this.add(new YoutubeItem(data), active);\r\n  }\r\n\r\n  /**\r\n   * Remove gallery item\r\n   */\r\n  remove(i: number): void {\r\n    const state: GalleryState = this.stateSnapshot;\r\n    const items: GalleryItem[] = [\r\n      ...state.items.slice(0, i),\r\n      ...state.items.slice(i + 1, state.items.length)\r\n    ];\r\n    this.setState({\r\n      action: GalleryAction.ITEMS_CHANGED,\r\n      currIndex: i < 1 ? state.currIndex : i - 1,\r\n      items,\r\n      hasNext: items.length > 1,\r\n      hasPrev: i > 0\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Load items and reset the state\r\n   */\r\n  load(items: GalleryItem[]): void {\r\n    if (items) {\r\n      this.setState({\r\n        action: GalleryAction.ITEMS_CHANGED,\r\n        items,\r\n        hasNext: items.length > 1,\r\n        hasPrev: false\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set active item\r\n   */\r\n  set(i: number, behavior: ScrollBehavior = this._config.value.scrollBehavior): void {\r\n    if (i < 0 || i >= this.stateSnapshot.items.length) {\r\n      console.error(`[NgGallery]: Unable to set the active item because the given index (${ i }) is outside the items range!`);\r\n      return;\r\n    }\r\n    if (i !== this.stateSnapshot.currIndex) {\r\n      this.setState({\r\n        behavior,\r\n        action: GalleryAction.INDEX_CHANGED,\r\n        currIndex: i,\r\n        hasNext: i < this.stateSnapshot.items.length - 1,\r\n        hasPrev: i > 0\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Next item\r\n   */\r\n  next(behavior: ScrollBehavior = this._config.value.scrollBehavior, loop: boolean = true): void {\r\n    if (this.stateSnapshot.hasNext) {\r\n      this.set(this.stateSnapshot.currIndex + 1, behavior);\r\n    } else if (loop && this._config.value.loop) {\r\n      this.set(0, behavior);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Prev item\r\n   */\r\n  prev(behavior: ScrollBehavior = this._config.value.scrollBehavior, loop: boolean = true): void {\r\n    if (this.stateSnapshot.hasPrev) {\r\n      this.set(this.stateSnapshot.currIndex - 1, behavior);\r\n    } else if (loop && this._config.value.loop) {\r\n      this.set(this.stateSnapshot.items.length - 1, behavior);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start gallery player\r\n   */\r\n  play(interval?: number): void {\r\n    if (interval) {\r\n      this.setConfig({ autoplayInterval: interval });\r\n    }\r\n    this.setState({ action: GalleryAction.PLAY, behavior: 'auto', isPlaying: true });\r\n  }\r\n\r\n  /**\r\n   * Stop gallery player\r\n   */\r\n  stop(): void {\r\n    this.setState({ action: GalleryAction.STOP, isPlaying: false });\r\n  }\r\n\r\n  /**\r\n   * Reset gallery to initial state\r\n   */\r\n  reset(): void {\r\n    this.setState(defaultState);\r\n  }\r\n\r\n  /**\r\n   * Destroy gallery\r\n   */\r\n  destroy(): void {\r\n    this._state.complete();\r\n    this._config.complete();\r\n    this.itemClick.complete();\r\n    this.thumbClick.complete();\r\n    this.deleteInstance();\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "config",
                        "type": "GalleryConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "deleteInstance",
                        "type": "function",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "function": []
                    }
                ],
                "line": 72,
                "jsdoctags": [
                    {
                        "name": "config",
                        "type": "GalleryConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "deleteInstance",
                        "type": "function",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "function": [],
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "_config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<GalleryConfig>",
                    "optional": false,
                    "description": "<p>Stream that emits gallery config</p>\n",
                    "line": 27,
                    "rawdescription": "\nStream that emits gallery config",
                    "modifierKind": [
                        121,
                        146
                    ]
                },
                {
                    "name": "_state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<GalleryState>",
                    "optional": false,
                    "description": "<p>Stream that emits gallery state</p>\n",
                    "line": 24,
                    "rawdescription": "\nStream that emits gallery state",
                    "modifierKind": [
                        121,
                        146
                    ]
                },
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<GalleryConfig>",
                    "optional": false,
                    "description": "<p>Stream that emits gallery config</p>\n",
                    "line": 44,
                    "rawdescription": "\nStream that emits gallery config",
                    "modifierKind": [
                        146
                    ]
                },
                {
                    "name": "error",
                    "defaultValue": "new Subject<GalleryError>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<GalleryError>",
                    "optional": false,
                    "description": "<p>Stream that emits on an error occurs</p>\n",
                    "line": 36,
                    "rawdescription": "\nStream that emits on an error occurs",
                    "modifierKind": [
                        146
                    ]
                },
                {
                    "name": "itemClick",
                    "defaultValue": "new Subject<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<number>",
                    "optional": false,
                    "description": "<p>Stream that emits on item click</p>\n",
                    "line": 30,
                    "rawdescription": "\nStream that emits on item click",
                    "modifierKind": [
                        146
                    ]
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<GalleryState>",
                    "optional": false,
                    "description": "<p>Stream that emits gallery state</p>\n",
                    "line": 41,
                    "rawdescription": "\nStream that emits gallery state",
                    "modifierKind": [
                        146
                    ]
                },
                {
                    "name": "thumbClick",
                    "defaultValue": "new Subject<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<number>",
                    "optional": false,
                    "description": "<p>Stream that emits on thumbnail click</p>\n",
                    "line": 33,
                    "rawdescription": "\nStream that emits on thumbnail click",
                    "modifierKind": [
                        146
                    ]
                }
            ],
            "methods": [
                {
                    "name": "add",
                    "args": [
                        {
                            "name": "item",
                            "type": "GalleryItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "active",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdd gallery item\n",
                    "description": "<p>Add gallery item</p>\n",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "GalleryItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "active",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addIframe",
                    "args": [
                        {
                            "name": "data",
                            "type": "IframeItemData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "active",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 125,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdd iframe item\n",
                    "description": "<p>Add iframe item</p>\n",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "IframeItemData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "active",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addImage",
                    "args": [
                        {
                            "name": "data",
                            "type": "ImageItemData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "active",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdd image item\n",
                    "description": "<p>Add image item</p>\n",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "ImageItemData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "active",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addVideo",
                    "args": [
                        {
                            "name": "data",
                            "type": "VideoItemData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "active",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 118,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdd video item\n",
                    "description": "<p>Add video item</p>\n",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "VideoItemData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "active",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addYoutube",
                    "args": [
                        {
                            "name": "data",
                            "type": "YoutubeItemData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "active",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdd Youtube item\n",
                    "description": "<p>Add Youtube item</p>\n",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "YoutubeItemData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "active",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "destroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 236,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDestroy gallery\n",
                    "description": "<p>Destroy gallery</p>\n"
                },
                {
                    "name": "load",
                    "args": [
                        {
                            "name": "items",
                            "type": "GalleryItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 157,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLoad items and reset the state\n",
                    "description": "<p>Load items and reset the state</p>\n",
                    "jsdoctags": [
                        {
                            "name": "items",
                            "type": "GalleryItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "next",
                    "args": [
                        {
                            "name": "behavior",
                            "type": "ScrollBehavior",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this._config.value.scrollBehavior"
                        },
                        {
                            "name": "loop",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "true"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 190,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nNext item\n",
                    "description": "<p>Next item</p>\n",
                    "jsdoctags": [
                        {
                            "name": "behavior",
                            "type": "ScrollBehavior",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this._config.value.scrollBehavior",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "loop",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "true",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "play",
                    "args": [
                        {
                            "name": "interval",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 212,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nStart gallery player\n",
                    "description": "<p>Start gallery player</p>\n",
                    "jsdoctags": [
                        {
                            "name": "interval",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "prev",
                    "args": [
                        {
                            "name": "behavior",
                            "type": "ScrollBehavior",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this._config.value.scrollBehavior"
                        },
                        {
                            "name": "loop",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "true"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 201,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPrev item\n",
                    "description": "<p>Prev item</p>\n",
                    "jsdoctags": [
                        {
                            "name": "behavior",
                            "type": "ScrollBehavior",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this._config.value.scrollBehavior",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "loop",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "true",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "remove",
                    "args": [
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRemove gallery item\n",
                    "description": "<p>Remove gallery item</p>\n",
                    "jsdoctags": [
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 229,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset gallery to initial state\n",
                    "description": "<p>Reset gallery to initial state</p>\n"
                },
                {
                    "name": "set",
                    "args": [
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "behavior",
                            "type": "ScrollBehavior",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this._config.value.scrollBehavior"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 171,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSet active item\n",
                    "description": "<p>Set active item</p>\n",
                    "jsdoctags": [
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "behavior",
                            "type": "ScrollBehavior",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this._config.value.scrollBehavior",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setConfig",
                    "args": [
                        {
                            "name": "config",
                            "type": "GalleryConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSet gallery config\n",
                    "description": "<p>Set gallery config</p>\n",
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "GalleryConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setState",
                    "args": [
                        {
                            "name": "state",
                            "type": "GalleryState",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSet gallery state\n",
                    "description": "<p>Set gallery state</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "GalleryState",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "stop",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 222,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nStop gallery player\n",
                    "description": "<p>Stop gallery player</p>\n"
                }
            ],
            "indexSignatures": [],
            "accessors": {
                "stateSnapshot": {
                    "name": "stateSnapshot",
                    "getSignature": {
                        "name": "stateSnapshot",
                        "type": "",
                        "returnType": "GalleryState",
                        "line": 46
                    }
                },
                "configSnapshot": {
                    "name": "configSnapshot",
                    "getSignature": {
                        "name": "configSnapshot",
                        "type": "",
                        "returnType": "GalleryConfig",
                        "line": 50
                    }
                },
                "initialized": {
                    "name": "initialized",
                    "getSignature": {
                        "name": "initialized",
                        "type": "",
                        "returnType": "Observable<GalleryState>",
                        "line": 55,
                        "rawdescription": "\nStream that emits when gallery is initialized/reset",
                        "description": "<p>Stream that emits when gallery is initialized/reset</p>\n"
                    }
                },
                "itemsChanged": {
                    "name": "itemsChanged",
                    "getSignature": {
                        "name": "itemsChanged",
                        "type": "",
                        "returnType": "Observable<GalleryState>",
                        "line": 60,
                        "rawdescription": "\nStream that emits when items is changed (items loaded, item added, item removed)",
                        "description": "<p>Stream that emits when items is changed (items loaded, item added, item removed)</p>\n"
                    }
                },
                "indexChanged": {
                    "name": "indexChanged",
                    "getSignature": {
                        "name": "indexChanged",
                        "type": "",
                        "returnType": "Observable<GalleryState>",
                        "line": 65,
                        "rawdescription": "\nStream that emits when current item is changed",
                        "description": "<p>Stream that emits when current item is changed</p>\n"
                    }
                },
                "playingChanged": {
                    "name": "playingChanged",
                    "getSignature": {
                        "name": "playingChanged",
                        "type": "",
                        "returnType": "Observable<GalleryState>",
                        "line": 70,
                        "rawdescription": "\nStream that emits when the player should start or stop",
                        "description": "<p>Stream that emits when the player should start or stop</p>\n"
                    }
                }
            },
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "HorizontalAdapter",
            "id": "class-HorizontalAdapter-3daae6a8cc0b8e54bd405839b944d48041efbb99f2117571af80d5e3c88b5d81310f2ba88bbde52dbd371b5e501d1046a5d3a3351bade652e3ab629e9370cb35",
            "file": "projects/ng-gallery/src/lib/components/adapters/main-adapters.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { GalleryConfig } from '../../models/config.model';\r\nimport { SliderAdapter } from './base-adapter';\r\nimport { SmoothScrollOptions } from '../../smooth-scroll';\r\n\r\n/**\r\n * A clone of HammerJs constants\r\n */\r\nexport const DIRECTION_LEFT: number = 2;\r\nexport const DIRECTION_RIGHT: number = 4;\r\nexport const DIRECTION_UP: number = 8;\r\nexport const DIRECTION_DOWN: number = 16;\r\n\r\nexport class HorizontalAdapter implements SliderAdapter {\r\n\r\n  readonly hammerDirection: number = DIRECTION_LEFT | DIRECTION_RIGHT;\r\n\r\n  readonly scrollSnapType: string = 'x mandatory';\r\n\r\n  get scrollValue(): number {\r\n    return this.slider.scrollLeft;\r\n  }\r\n\r\n  get clientSize(): number {\r\n    return this.slider.clientWidth;\r\n  }\r\n\r\n  get isContentLessThanContainer(): boolean {\r\n    return this.clientSize >= this.slider.firstElementChild.clientWidth;\r\n  }\r\n\r\n  constructor(public slider: HTMLElement, public config: GalleryConfig) {\r\n  }\r\n\r\n  getScrollToValue(el: HTMLElement, behavior: ScrollBehavior): SmoothScrollOptions {\r\n    const position: number = el.offsetLeft - ((this.clientSize - el.clientWidth) / 2);\r\n    return {\r\n      behavior,\r\n      start: position\r\n    };\r\n  }\r\n\r\n  getRootMargin(): string {\r\n    return `1000px 1px 1000px 1px`;\r\n  }\r\n\r\n  getElementRootMargin(viewport: HTMLElement, el: HTMLElement): string {\r\n    const rootMargin: number = -1 * ((viewport.clientWidth - el.clientWidth) / 2) + 1;\r\n    return `0px ${ rootMargin }px 0px ${ rootMargin }px`;\r\n  }\r\n\r\n  getCentralizerStartSize(): number {\r\n    if (this.isContentLessThanContainer) {\r\n      const size: number = this.clientSize - this.slider.firstElementChild.clientWidth;\r\n      return size / 2;\r\n    }\r\n    return (this.clientSize / 2) - (this.slider.firstElementChild.firstElementChild?.clientWidth / 2);\r\n  }\r\n\r\n  getCentralizerEndSize(): number {\r\n    if (this.isContentLessThanContainer) {\r\n      const size: number = this.clientSize - this.slider.firstElementChild.clientWidth;\r\n      return size / 2;\r\n    }\r\n    return (this.clientSize / 2) - (this.slider.firstElementChild.lastElementChild?.clientWidth / 2);\r\n  }\r\n\r\n  getHammerVelocity(e: any): number {\r\n    return e.velocityX;\r\n  }\r\n\r\n  getHammerValue(value: number, e: any, behavior: ScrollBehavior): ScrollToOptions {\r\n    return {\r\n      behavior,\r\n      left: value - e.deltaX\r\n    };\r\n  }\r\n\r\n  // getDraggingProperty(e: MouseEvent): number {\r\n  //   return e.clientX;\r\n  // }\r\n\r\n  // getDraggingValue(value: number, delta: number, behavior: ScrollBehavior): ScrollToOptions {\r\n  //   return {\r\n  //     behavior,\r\n  //     left: value - delta\r\n  //   };\r\n  // }\r\n}\r\n\r\nexport class VerticalAdapter implements SliderAdapter {\r\n\r\n  readonly hammerDirection: number = DIRECTION_UP | DIRECTION_DOWN;\r\n\r\n  readonly scrollSnapType: string = 'y mandatory';\r\n\r\n  get scrollValue(): number {\r\n    return this.slider.scrollTop;\r\n  }\r\n\r\n  get clientSize(): number {\r\n    return this.slider.clientHeight;\r\n  }\r\n\r\n  get isContentLessThanContainer(): boolean {\r\n    return this.clientSize >= this.slider.firstElementChild.clientHeight;\r\n  }\r\n\r\n  constructor(public slider: HTMLElement, public config: GalleryConfig) {\r\n  }\r\n\r\n  getScrollToValue(el: HTMLElement, behavior: ScrollBehavior): SmoothScrollOptions {\r\n    const position: number = el.offsetTop - ((this.clientSize - el.clientHeight) / 2);\r\n    return {\r\n      behavior,\r\n      top: position\r\n    };\r\n  }\r\n\r\n  getRootMargin(): string {\r\n    return `1px 1000px 1px 1000px`;\r\n  }\r\n\r\n  getElementRootMargin(viewport: HTMLElement, el: HTMLElement): string {\r\n    const rootMargin: number = -1 * ((viewport.clientHeight - el.clientHeight) / 2) + 1;\r\n    return `${ rootMargin }px 0px ${ rootMargin }px 0px`;\r\n  }\r\n\r\n  getCentralizerStartSize(): number {\r\n    if (this.isContentLessThanContainer) {\r\n      const size = this.clientSize - this.slider.firstElementChild.clientHeight;\r\n      return size / 2;\r\n    }\r\n    return (this.clientSize / 2) - (this.slider.firstElementChild.firstElementChild?.clientHeight / 2);\r\n  }\r\n\r\n  getCentralizerEndSize(): number {\r\n    if (this.isContentLessThanContainer) {\r\n      const size = this.clientSize - this.slider.firstElementChild.clientHeight;\r\n      return size / 2;\r\n    }\r\n    return (this.clientSize / 2) - (this.slider.firstElementChild.lastElementChild?.clientHeight / 2);\r\n  }\r\n\r\n  getHammerVelocity(e: any): number {\r\n    return e.velocityY;\r\n  }\r\n\r\n  getHammerValue(value: number, e: any, behavior: ScrollBehavior): ScrollToOptions {\r\n    return {\r\n      behavior,\r\n      top: value - e.deltaY\r\n    };\r\n  }\r\n\r\n  // getDraggingProperty(e: MouseEvent): number {\r\n  //   return e.clientY;\r\n  // }\r\n\r\n  // getDraggingValue(value: number, delta: number, behavior: ScrollBehavior): ScrollToOptions {\r\n  //   return {\r\n  //     behavior,\r\n  //     top: value - delta\r\n  //   };\r\n  // }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "slider",
                        "type": "HTMLElement",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "config",
                        "type": "GalleryConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "slider",
                        "type": "HTMLElement",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "config",
                        "type": "GalleryConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GalleryConfig",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "hammerDirection",
                    "defaultValue": "DIRECTION_LEFT | DIRECTION_RIGHT",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        146
                    ]
                },
                {
                    "name": "scrollSnapType",
                    "defaultValue": "'x mandatory'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        146
                    ]
                },
                {
                    "name": "slider",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getCentralizerEndSize",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getCentralizerStartSize",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getElementRootMargin",
                    "args": [
                        {
                            "name": "viewport",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "el",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "viewport",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "el",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getHammerValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "behavior",
                            "type": "ScrollBehavior",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ScrollToOptions",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "behavior",
                            "type": "ScrollBehavior",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getHammerVelocity",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getRootMargin",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getScrollToValue",
                    "args": [
                        {
                            "name": "el",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "behavior",
                            "type": "ScrollBehavior",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "SmoothScrollOptions",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "el",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "behavior",
                            "type": "ScrollBehavior",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "accessors": {
                "scrollValue": {
                    "name": "scrollValue",
                    "getSignature": {
                        "name": "scrollValue",
                        "type": "number",
                        "returnType": "number",
                        "line": 19
                    }
                },
                "clientSize": {
                    "name": "clientSize",
                    "getSignature": {
                        "name": "clientSize",
                        "type": "number",
                        "returnType": "number",
                        "line": 23
                    }
                },
                "isContentLessThanContainer": {
                    "name": "isContentLessThanContainer",
                    "getSignature": {
                        "name": "isContentLessThanContainer",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 27
                    }
                }
            },
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "SliderAdapter"
            ]
        },
        {
            "name": "IframeItem",
            "id": "class-IframeItem-34d4be651a4e6f718dde28f397ec99c82360d81641da65c47a5499e3490da86d487d6fffea17cd93fbe36c8452006119cbc339e396218d25a91dedb22a7e837b",
            "file": "projects/ng-gallery/src/lib/components/templates/items.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { GalleryItem } from '../../models/gallery.model';\r\nimport { GalleryItemType, GalleryItemTypes } from '../../models/constants';\r\n\r\nexport class ImageItem implements GalleryItem {\r\n  readonly type: GalleryItemType;\r\n  readonly data: ImageItemData;\r\n\r\n  constructor(data: ImageItemData) {\r\n    this.data = data;\r\n    this.type = GalleryItemTypes.Image;\r\n  }\r\n}\r\n\r\nexport class VideoItem implements GalleryItem {\r\n  readonly type: GalleryItemType;\r\n  readonly data: VideoItemData;\r\n\r\n  constructor(data: VideoItemData) {\r\n    this.data = data;\r\n    this.type = GalleryItemTypes.Video;\r\n  }\r\n}\r\n\r\nexport class IframeItem implements GalleryItem {\r\n  readonly type: GalleryItemType;\r\n  readonly data: IframeItemData;\r\n\r\n  constructor(data: IframeItemData) {\r\n    this.data = data;\r\n    this.type = GalleryItemTypes.Iframe;\r\n  }\r\n}\r\n\r\nexport class YoutubeItem implements GalleryItem {\r\n  readonly type: GalleryItemType;\r\n  readonly data: YoutubeItemData;\r\n\r\n  constructor(data: YoutubeItemData) {\r\n    this.data = {\r\n      ...data,\r\n      ...{\r\n        src: `https://youtube.com/embed/${ data.src }`,\r\n        thumb: data.thumb ? data.thumb : `//img.youtube.com/vi/${ data.src }/default.jpg`\r\n      }\r\n    };\r\n    this.type = GalleryItemTypes.Youtube;\r\n  }\r\n}\r\n\r\ntype GalleryItemModel = {\r\n  type?: GalleryItemType;\r\n  src?: string | { url: string, type: string }[];\r\n  thumb?: string;\r\n  args?: any;\r\n};\r\n\r\nexport type ImageItemData = GalleryItemModel & {\r\n  alt?: string;\r\n};\r\n\r\nexport type IframeItemData = GalleryItemModel & {\r\n  params?: any;\r\n};\r\n\r\nexport type YoutubeItemData = IframeItemData & {\r\n  autoplay?: boolean;\r\n};\r\n\r\nexport type VideoItemData = GalleryItemModel & {\r\n  poster?: string;\r\n  loop?: boolean;\r\n  // The only option for boolean video attributes is 'true', because false will still be evaluated to true in attributes binding\r\n  mute?: true;\r\n  disablePictureInPicture?: true;\r\n  controls?: boolean;\r\n  autoplay?: boolean;\r\n  preload?: 'none' | 'metadata' | 'auto' | '';\r\n  controlsList?: 'nodownload' | 'nofullscreen' | 'noremoteplayback';\r\n  disableRemotePlayback?: boolean;\r\n};\r\n\r\nexport type GalleryItemData = ImageItemData | VideoItemData | IframeItemData | YoutubeItemData;\r\n\r\nexport type ItemState = 'success' | 'loading' | 'failed';\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "data",
                        "type": "IframeItemData",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "IframeItemData",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IframeItemData",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        146
                    ]
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GalleryItemType",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        146
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "GalleryItem"
            ]
        },
        {
            "name": "ImageItem",
            "id": "class-ImageItem-34d4be651a4e6f718dde28f397ec99c82360d81641da65c47a5499e3490da86d487d6fffea17cd93fbe36c8452006119cbc339e396218d25a91dedb22a7e837b",
            "file": "projects/ng-gallery/src/lib/components/templates/items.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { GalleryItem } from '../../models/gallery.model';\r\nimport { GalleryItemType, GalleryItemTypes } from '../../models/constants';\r\n\r\nexport class ImageItem implements GalleryItem {\r\n  readonly type: GalleryItemType;\r\n  readonly data: ImageItemData;\r\n\r\n  constructor(data: ImageItemData) {\r\n    this.data = data;\r\n    this.type = GalleryItemTypes.Image;\r\n  }\r\n}\r\n\r\nexport class VideoItem implements GalleryItem {\r\n  readonly type: GalleryItemType;\r\n  readonly data: VideoItemData;\r\n\r\n  constructor(data: VideoItemData) {\r\n    this.data = data;\r\n    this.type = GalleryItemTypes.Video;\r\n  }\r\n}\r\n\r\nexport class IframeItem implements GalleryItem {\r\n  readonly type: GalleryItemType;\r\n  readonly data: IframeItemData;\r\n\r\n  constructor(data: IframeItemData) {\r\n    this.data = data;\r\n    this.type = GalleryItemTypes.Iframe;\r\n  }\r\n}\r\n\r\nexport class YoutubeItem implements GalleryItem {\r\n  readonly type: GalleryItemType;\r\n  readonly data: YoutubeItemData;\r\n\r\n  constructor(data: YoutubeItemData) {\r\n    this.data = {\r\n      ...data,\r\n      ...{\r\n        src: `https://youtube.com/embed/${ data.src }`,\r\n        thumb: data.thumb ? data.thumb : `//img.youtube.com/vi/${ data.src }/default.jpg`\r\n      }\r\n    };\r\n    this.type = GalleryItemTypes.Youtube;\r\n  }\r\n}\r\n\r\ntype GalleryItemModel = {\r\n  type?: GalleryItemType;\r\n  src?: string | { url: string, type: string }[];\r\n  thumb?: string;\r\n  args?: any;\r\n};\r\n\r\nexport type ImageItemData = GalleryItemModel & {\r\n  alt?: string;\r\n};\r\n\r\nexport type IframeItemData = GalleryItemModel & {\r\n  params?: any;\r\n};\r\n\r\nexport type YoutubeItemData = IframeItemData & {\r\n  autoplay?: boolean;\r\n};\r\n\r\nexport type VideoItemData = GalleryItemModel & {\r\n  poster?: string;\r\n  loop?: boolean;\r\n  // The only option for boolean video attributes is 'true', because false will still be evaluated to true in attributes binding\r\n  mute?: true;\r\n  disablePictureInPicture?: true;\r\n  controls?: boolean;\r\n  autoplay?: boolean;\r\n  preload?: 'none' | 'metadata' | 'auto' | '';\r\n  controlsList?: 'nodownload' | 'nofullscreen' | 'noremoteplayback';\r\n  disableRemotePlayback?: boolean;\r\n};\r\n\r\nexport type GalleryItemData = ImageItemData | VideoItemData | IframeItemData | YoutubeItemData;\r\n\r\nexport type ItemState = 'success' | 'loading' | 'failed';\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "data",
                        "type": "ImageItemData",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "ImageItemData",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ImageItemData",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        146
                    ]
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GalleryItemType",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        146
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "GalleryItem"
            ]
        },
        {
            "name": "SliderAdapter",
            "id": "class-SliderAdapter-ea6462dbf17682e1faf5e410cb58035c08652806b5846d639d21f0eee660d97a47244af46d5fc39dce6cdb8040b9bc4b6e221faa6d764716fd505e3fb8219a0e",
            "file": "projects/ng-gallery/src/lib/components/adapters/base-adapter.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export abstract class SliderAdapter {\r\n\r\n  readonly abstract hammerDirection: number;\r\n\r\n  readonly abstract scrollSnapType: string;\r\n\r\n  abstract get scrollValue(): number;\r\n\r\n  abstract get clientSize(): number;\r\n\r\n  abstract get isContentLessThanContainer(): boolean;\r\n\r\n  abstract getScrollToValue(el: Element, behavior: ScrollBehavior): ScrollToOptions;\r\n\r\n  abstract getCentralizerStartSize(): number;\r\n\r\n  abstract getCentralizerEndSize(): number;\r\n\r\n  abstract getRootMargin(): string;\r\n\r\n  abstract getElementRootMargin(viewport: HTMLElement, el: HTMLElement): string;\r\n\r\n  abstract getHammerVelocity(e): number;\r\n\r\n  abstract getHammerValue(value: number, delta: number, behavior: ScrollBehavior): ScrollToOptions;\r\n\r\n  // abstract getDraggingValue(value: number, delta: number, behavior: ScrollBehavior): ScrollToOptions;\r\n\r\n  // abstract getDraggingProperty(e: MouseEvent): number;\r\n}\r\n",
            "properties": [
                {
                    "name": "hammerDirection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "modifierKind": [
                        146,
                        126
                    ]
                },
                {
                    "name": "scrollSnapType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        146,
                        126
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getCentralizerEndSize",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ]
                },
                {
                    "name": "getCentralizerStartSize",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ]
                },
                {
                    "name": "getElementRootMargin",
                    "args": [
                        {
                            "name": "viewport",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "el",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "viewport",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "el",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getHammerValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "delta",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "behavior",
                            "type": "ScrollBehavior",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ScrollToOptions",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "delta",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "behavior",
                            "type": "ScrollBehavior",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getHammerVelocity",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getRootMargin",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ]
                },
                {
                    "name": "getScrollToValue",
                    "args": [
                        {
                            "name": "el",
                            "type": "Element",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "behavior",
                            "type": "ScrollBehavior",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ScrollToOptions",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "el",
                            "type": "Element",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "behavior",
                            "type": "ScrollBehavior",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "accessors": {
                "scrollValue": {
                    "name": "scrollValue",
                    "getSignature": {
                        "name": "scrollValue",
                        "type": "number",
                        "returnType": "number",
                        "line": 7
                    }
                },
                "clientSize": {
                    "name": "clientSize",
                    "getSignature": {
                        "name": "clientSize",
                        "type": "number",
                        "returnType": "number",
                        "line": 9
                    }
                },
                "isContentLessThanContainer": {
                    "name": "isContentLessThanContainer",
                    "getSignature": {
                        "name": "isContentLessThanContainer",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 11
                    }
                }
            },
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "VerticalAdapter",
            "id": "class-VerticalAdapter-3daae6a8cc0b8e54bd405839b944d48041efbb99f2117571af80d5e3c88b5d81310f2ba88bbde52dbd371b5e501d1046a5d3a3351bade652e3ab629e9370cb35",
            "file": "projects/ng-gallery/src/lib/components/adapters/main-adapters.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { GalleryConfig } from '../../models/config.model';\r\nimport { SliderAdapter } from './base-adapter';\r\nimport { SmoothScrollOptions } from '../../smooth-scroll';\r\n\r\n/**\r\n * A clone of HammerJs constants\r\n */\r\nexport const DIRECTION_LEFT: number = 2;\r\nexport const DIRECTION_RIGHT: number = 4;\r\nexport const DIRECTION_UP: number = 8;\r\nexport const DIRECTION_DOWN: number = 16;\r\n\r\nexport class HorizontalAdapter implements SliderAdapter {\r\n\r\n  readonly hammerDirection: number = DIRECTION_LEFT | DIRECTION_RIGHT;\r\n\r\n  readonly scrollSnapType: string = 'x mandatory';\r\n\r\n  get scrollValue(): number {\r\n    return this.slider.scrollLeft;\r\n  }\r\n\r\n  get clientSize(): number {\r\n    return this.slider.clientWidth;\r\n  }\r\n\r\n  get isContentLessThanContainer(): boolean {\r\n    return this.clientSize >= this.slider.firstElementChild.clientWidth;\r\n  }\r\n\r\n  constructor(public slider: HTMLElement, public config: GalleryConfig) {\r\n  }\r\n\r\n  getScrollToValue(el: HTMLElement, behavior: ScrollBehavior): SmoothScrollOptions {\r\n    const position: number = el.offsetLeft - ((this.clientSize - el.clientWidth) / 2);\r\n    return {\r\n      behavior,\r\n      start: position\r\n    };\r\n  }\r\n\r\n  getRootMargin(): string {\r\n    return `1000px 1px 1000px 1px`;\r\n  }\r\n\r\n  getElementRootMargin(viewport: HTMLElement, el: HTMLElement): string {\r\n    const rootMargin: number = -1 * ((viewport.clientWidth - el.clientWidth) / 2) + 1;\r\n    return `0px ${ rootMargin }px 0px ${ rootMargin }px`;\r\n  }\r\n\r\n  getCentralizerStartSize(): number {\r\n    if (this.isContentLessThanContainer) {\r\n      const size: number = this.clientSize - this.slider.firstElementChild.clientWidth;\r\n      return size / 2;\r\n    }\r\n    return (this.clientSize / 2) - (this.slider.firstElementChild.firstElementChild?.clientWidth / 2);\r\n  }\r\n\r\n  getCentralizerEndSize(): number {\r\n    if (this.isContentLessThanContainer) {\r\n      const size: number = this.clientSize - this.slider.firstElementChild.clientWidth;\r\n      return size / 2;\r\n    }\r\n    return (this.clientSize / 2) - (this.slider.firstElementChild.lastElementChild?.clientWidth / 2);\r\n  }\r\n\r\n  getHammerVelocity(e: any): number {\r\n    return e.velocityX;\r\n  }\r\n\r\n  getHammerValue(value: number, e: any, behavior: ScrollBehavior): ScrollToOptions {\r\n    return {\r\n      behavior,\r\n      left: value - e.deltaX\r\n    };\r\n  }\r\n\r\n  // getDraggingProperty(e: MouseEvent): number {\r\n  //   return e.clientX;\r\n  // }\r\n\r\n  // getDraggingValue(value: number, delta: number, behavior: ScrollBehavior): ScrollToOptions {\r\n  //   return {\r\n  //     behavior,\r\n  //     left: value - delta\r\n  //   };\r\n  // }\r\n}\r\n\r\nexport class VerticalAdapter implements SliderAdapter {\r\n\r\n  readonly hammerDirection: number = DIRECTION_UP | DIRECTION_DOWN;\r\n\r\n  readonly scrollSnapType: string = 'y mandatory';\r\n\r\n  get scrollValue(): number {\r\n    return this.slider.scrollTop;\r\n  }\r\n\r\n  get clientSize(): number {\r\n    return this.slider.clientHeight;\r\n  }\r\n\r\n  get isContentLessThanContainer(): boolean {\r\n    return this.clientSize >= this.slider.firstElementChild.clientHeight;\r\n  }\r\n\r\n  constructor(public slider: HTMLElement, public config: GalleryConfig) {\r\n  }\r\n\r\n  getScrollToValue(el: HTMLElement, behavior: ScrollBehavior): SmoothScrollOptions {\r\n    const position: number = el.offsetTop - ((this.clientSize - el.clientHeight) / 2);\r\n    return {\r\n      behavior,\r\n      top: position\r\n    };\r\n  }\r\n\r\n  getRootMargin(): string {\r\n    return `1px 1000px 1px 1000px`;\r\n  }\r\n\r\n  getElementRootMargin(viewport: HTMLElement, el: HTMLElement): string {\r\n    const rootMargin: number = -1 * ((viewport.clientHeight - el.clientHeight) / 2) + 1;\r\n    return `${ rootMargin }px 0px ${ rootMargin }px 0px`;\r\n  }\r\n\r\n  getCentralizerStartSize(): number {\r\n    if (this.isContentLessThanContainer) {\r\n      const size = this.clientSize - this.slider.firstElementChild.clientHeight;\r\n      return size / 2;\r\n    }\r\n    return (this.clientSize / 2) - (this.slider.firstElementChild.firstElementChild?.clientHeight / 2);\r\n  }\r\n\r\n  getCentralizerEndSize(): number {\r\n    if (this.isContentLessThanContainer) {\r\n      const size = this.clientSize - this.slider.firstElementChild.clientHeight;\r\n      return size / 2;\r\n    }\r\n    return (this.clientSize / 2) - (this.slider.firstElementChild.lastElementChild?.clientHeight / 2);\r\n  }\r\n\r\n  getHammerVelocity(e: any): number {\r\n    return e.velocityY;\r\n  }\r\n\r\n  getHammerValue(value: number, e: any, behavior: ScrollBehavior): ScrollToOptions {\r\n    return {\r\n      behavior,\r\n      top: value - e.deltaY\r\n    };\r\n  }\r\n\r\n  // getDraggingProperty(e: MouseEvent): number {\r\n  //   return e.clientY;\r\n  // }\r\n\r\n  // getDraggingValue(value: number, delta: number, behavior: ScrollBehavior): ScrollToOptions {\r\n  //   return {\r\n  //     behavior,\r\n  //     top: value - delta\r\n  //   };\r\n  // }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "slider",
                        "type": "HTMLElement",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "config",
                        "type": "GalleryConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 106,
                "jsdoctags": [
                    {
                        "name": "slider",
                        "type": "HTMLElement",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "config",
                        "type": "GalleryConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GalleryConfig",
                    "optional": false,
                    "description": "",
                    "line": 108,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "hammerDirection",
                    "defaultValue": "DIRECTION_UP | DIRECTION_DOWN",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 92,
                    "modifierKind": [
                        146
                    ]
                },
                {
                    "name": "scrollSnapType",
                    "defaultValue": "'y mandatory'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 94,
                    "modifierKind": [
                        146
                    ]
                },
                {
                    "name": "slider",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 108,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getCentralizerEndSize",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 136,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getCentralizerStartSize",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 128,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getElementRootMargin",
                    "args": [
                        {
                            "name": "viewport",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "el",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "viewport",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "el",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getHammerValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "behavior",
                            "type": "ScrollBehavior",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ScrollToOptions",
                    "typeParameters": [],
                    "line": 148,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "behavior",
                            "type": "ScrollBehavior",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getHammerVelocity",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 144,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getRootMargin",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 119,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getScrollToValue",
                    "args": [
                        {
                            "name": "el",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "behavior",
                            "type": "ScrollBehavior",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "SmoothScrollOptions",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "el",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "behavior",
                            "type": "ScrollBehavior",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "accessors": {
                "scrollValue": {
                    "name": "scrollValue",
                    "getSignature": {
                        "name": "scrollValue",
                        "type": "number",
                        "returnType": "number",
                        "line": 96
                    }
                },
                "clientSize": {
                    "name": "clientSize",
                    "getSignature": {
                        "name": "clientSize",
                        "type": "number",
                        "returnType": "number",
                        "line": 100
                    }
                },
                "isContentLessThanContainer": {
                    "name": "isContentLessThanContainer",
                    "getSignature": {
                        "name": "isContentLessThanContainer",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 104
                    }
                }
            },
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "SliderAdapter"
            ]
        },
        {
            "name": "VideoItem",
            "id": "class-VideoItem-34d4be651a4e6f718dde28f397ec99c82360d81641da65c47a5499e3490da86d487d6fffea17cd93fbe36c8452006119cbc339e396218d25a91dedb22a7e837b",
            "file": "projects/ng-gallery/src/lib/components/templates/items.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { GalleryItem } from '../../models/gallery.model';\r\nimport { GalleryItemType, GalleryItemTypes } from '../../models/constants';\r\n\r\nexport class ImageItem implements GalleryItem {\r\n  readonly type: GalleryItemType;\r\n  readonly data: ImageItemData;\r\n\r\n  constructor(data: ImageItemData) {\r\n    this.data = data;\r\n    this.type = GalleryItemTypes.Image;\r\n  }\r\n}\r\n\r\nexport class VideoItem implements GalleryItem {\r\n  readonly type: GalleryItemType;\r\n  readonly data: VideoItemData;\r\n\r\n  constructor(data: VideoItemData) {\r\n    this.data = data;\r\n    this.type = GalleryItemTypes.Video;\r\n  }\r\n}\r\n\r\nexport class IframeItem implements GalleryItem {\r\n  readonly type: GalleryItemType;\r\n  readonly data: IframeItemData;\r\n\r\n  constructor(data: IframeItemData) {\r\n    this.data = data;\r\n    this.type = GalleryItemTypes.Iframe;\r\n  }\r\n}\r\n\r\nexport class YoutubeItem implements GalleryItem {\r\n  readonly type: GalleryItemType;\r\n  readonly data: YoutubeItemData;\r\n\r\n  constructor(data: YoutubeItemData) {\r\n    this.data = {\r\n      ...data,\r\n      ...{\r\n        src: `https://youtube.com/embed/${ data.src }`,\r\n        thumb: data.thumb ? data.thumb : `//img.youtube.com/vi/${ data.src }/default.jpg`\r\n      }\r\n    };\r\n    this.type = GalleryItemTypes.Youtube;\r\n  }\r\n}\r\n\r\ntype GalleryItemModel = {\r\n  type?: GalleryItemType;\r\n  src?: string | { url: string, type: string }[];\r\n  thumb?: string;\r\n  args?: any;\r\n};\r\n\r\nexport type ImageItemData = GalleryItemModel & {\r\n  alt?: string;\r\n};\r\n\r\nexport type IframeItemData = GalleryItemModel & {\r\n  params?: any;\r\n};\r\n\r\nexport type YoutubeItemData = IframeItemData & {\r\n  autoplay?: boolean;\r\n};\r\n\r\nexport type VideoItemData = GalleryItemModel & {\r\n  poster?: string;\r\n  loop?: boolean;\r\n  // The only option for boolean video attributes is 'true', because false will still be evaluated to true in attributes binding\r\n  mute?: true;\r\n  disablePictureInPicture?: true;\r\n  controls?: boolean;\r\n  autoplay?: boolean;\r\n  preload?: 'none' | 'metadata' | 'auto' | '';\r\n  controlsList?: 'nodownload' | 'nofullscreen' | 'noremoteplayback';\r\n  disableRemotePlayback?: boolean;\r\n};\r\n\r\nexport type GalleryItemData = ImageItemData | VideoItemData | IframeItemData | YoutubeItemData;\r\n\r\nexport type ItemState = 'success' | 'loading' | 'failed';\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "data",
                        "type": "VideoItemData",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "VideoItemData",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VideoItemData",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        146
                    ]
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GalleryItemType",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        146
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "GalleryItem"
            ]
        },
        {
            "name": "YoutubeItem",
            "id": "class-YoutubeItem-34d4be651a4e6f718dde28f397ec99c82360d81641da65c47a5499e3490da86d487d6fffea17cd93fbe36c8452006119cbc339e396218d25a91dedb22a7e837b",
            "file": "projects/ng-gallery/src/lib/components/templates/items.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { GalleryItem } from '../../models/gallery.model';\r\nimport { GalleryItemType, GalleryItemTypes } from '../../models/constants';\r\n\r\nexport class ImageItem implements GalleryItem {\r\n  readonly type: GalleryItemType;\r\n  readonly data: ImageItemData;\r\n\r\n  constructor(data: ImageItemData) {\r\n    this.data = data;\r\n    this.type = GalleryItemTypes.Image;\r\n  }\r\n}\r\n\r\nexport class VideoItem implements GalleryItem {\r\n  readonly type: GalleryItemType;\r\n  readonly data: VideoItemData;\r\n\r\n  constructor(data: VideoItemData) {\r\n    this.data = data;\r\n    this.type = GalleryItemTypes.Video;\r\n  }\r\n}\r\n\r\nexport class IframeItem implements GalleryItem {\r\n  readonly type: GalleryItemType;\r\n  readonly data: IframeItemData;\r\n\r\n  constructor(data: IframeItemData) {\r\n    this.data = data;\r\n    this.type = GalleryItemTypes.Iframe;\r\n  }\r\n}\r\n\r\nexport class YoutubeItem implements GalleryItem {\r\n  readonly type: GalleryItemType;\r\n  readonly data: YoutubeItemData;\r\n\r\n  constructor(data: YoutubeItemData) {\r\n    this.data = {\r\n      ...data,\r\n      ...{\r\n        src: `https://youtube.com/embed/${ data.src }`,\r\n        thumb: data.thumb ? data.thumb : `//img.youtube.com/vi/${ data.src }/default.jpg`\r\n      }\r\n    };\r\n    this.type = GalleryItemTypes.Youtube;\r\n  }\r\n}\r\n\r\ntype GalleryItemModel = {\r\n  type?: GalleryItemType;\r\n  src?: string | { url: string, type: string }[];\r\n  thumb?: string;\r\n  args?: any;\r\n};\r\n\r\nexport type ImageItemData = GalleryItemModel & {\r\n  alt?: string;\r\n};\r\n\r\nexport type IframeItemData = GalleryItemModel & {\r\n  params?: any;\r\n};\r\n\r\nexport type YoutubeItemData = IframeItemData & {\r\n  autoplay?: boolean;\r\n};\r\n\r\nexport type VideoItemData = GalleryItemModel & {\r\n  poster?: string;\r\n  loop?: boolean;\r\n  // The only option for boolean video attributes is 'true', because false will still be evaluated to true in attributes binding\r\n  mute?: true;\r\n  disablePictureInPicture?: true;\r\n  controls?: boolean;\r\n  autoplay?: boolean;\r\n  preload?: 'none' | 'metadata' | 'auto' | '';\r\n  controlsList?: 'nodownload' | 'nofullscreen' | 'noremoteplayback';\r\n  disableRemotePlayback?: boolean;\r\n};\r\n\r\nexport type GalleryItemData = ImageItemData | VideoItemData | IframeItemData | YoutubeItemData;\r\n\r\nexport type ItemState = 'success' | 'loading' | 'failed';\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "data",
                        "type": "YoutubeItemData",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 36,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "YoutubeItemData",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "YoutubeItemData",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        146
                    ]
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GalleryItemType",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        146
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "GalleryItem"
            ]
        }
    ],
    "directives": [
        {
            "name": "AutoplayDirective",
            "id": "directive-AutoplayDirective-4af5917269fb330e83f2fcd8f86865c4d4d199976809347176711bbb3406e1b4bd8c3e81d2a5b0acf44d19904d49b06e8b98cfa68168f5eb655308373ef1edec",
            "file": "projects/ng-gallery/src/lib/autoplay/autoplay.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input, AfterViewInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\r\nimport { Subscription, delay, of, switchMap, tap, EMPTY } from 'rxjs';\r\nimport { ImgManager } from '../utils/img-manager';\r\nimport { Gallery } from '../services/gallery.service';\r\nimport { GalleryRef } from '../services/gallery-ref';\r\nimport { GalleryState } from '../models/gallery.model';\r\nimport { GalleryConfig } from '../models/config.model';\r\n\r\n@Directive({\r\n  selector: 'gallery-core[autoplay]',\r\n  standalone: true\r\n})\r\nexport class AutoplayDirective implements AfterViewInit, OnChanges, OnDestroy {\r\n\r\n  private _currentSubscription: Subscription;\r\n\r\n  private _galleryRef: GalleryRef;\r\n\r\n  @Input() config: GalleryConfig;\r\n\r\n  @Input() galleryId: string;\r\n\r\n  constructor(private _gallery: Gallery, private _imgManager: ImgManager) {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this._galleryRef = this._gallery.ref(this.galleryId);\r\n    this._subscribe();\r\n    if (this.config.autoplay) {\r\n      this._galleryRef.play();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (this._galleryRef && changes.config?.currentValue.autoplay !== changes.config?.previousValue.autoplay) {\r\n      this.config.autoplay ? this._galleryRef.play() : this._galleryRef.stop();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._unsubscribe();\r\n  }\r\n\r\n\r\n  private _subscribe(): void {\r\n    this._unsubscribe();\r\n\r\n    this._currentSubscription = this._galleryRef.playingChanged.pipe(\r\n      switchMap((state: GalleryState) => {\r\n        if (state.isPlaying) {\r\n          return this._imgManager.getActiveItem(this._galleryRef.state).pipe(\r\n            switchMap(() => of({}).pipe(\r\n              delay(this.config.autoplayInterval),\r\n              tap(() => {\r\n                if (this._galleryRef.stateSnapshot.hasNext) {\r\n                  this._galleryRef.next(this.config.scrollBehavior);\r\n                } else {\r\n                  this._galleryRef.set(0, this.config.scrollBehavior);\r\n                }\r\n              })\r\n            ))\r\n          );\r\n        }\r\n        return EMPTY;\r\n      })\r\n    ).subscribe();\r\n  }\r\n\r\n  private _unsubscribe(): void {\r\n    this._currentSubscription?.unsubscribe();\r\n  }\r\n}\r\n",
            "selector": "gallery-core[autoplay]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "GalleryConfig",
                    "decorators": []
                },
                {
                    "name": "galleryId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_currentSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_galleryRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GalleryRef",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "_subscribe",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_unsubscribe",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "AfterViewInit",
                "OnChanges",
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_gallery",
                        "type": "Gallery",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_imgManager",
                        "type": "ImgManager",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "_gallery",
                        "type": "Gallery",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_imgManager",
                        "type": "ImgManager",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "GalleryBoxDef",
            "id": "directive-GalleryBoxDef-dc42fc50e33dfef0b09f6091971bf663a23f56cdc21288a1d462bdbc08634bd1b5b282ac3be9fcd63e7a7bf9dbb0caf078fe0cc1be3b3bee6b6030f88eb947cf",
            "file": "projects/ng-gallery/src/lib/directives/gallery-box-def.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, TemplateRef } from '@angular/core';\r\nimport { GalleryState } from '../models/gallery.model';\r\nimport { GalleryConfig } from '../models/config.model';\r\n\r\n\r\n@Directive({\r\n  standalone: true,\r\n  selector: '[galleryBoxDef]'\r\n})\r\nexport class GalleryBoxDef {\r\n\r\n  constructor(public templateRef: TemplateRef<GalleryStateContext>) {\r\n  }\r\n\r\n  // Make sure the template checker knows the type of the context with which the\r\n  // template of this directive will be rendered\r\n  static ngTemplateContextGuard(\r\n    directive: GalleryBoxDef,\r\n    context: unknown\r\n  ): context is GalleryStateContext {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport interface GalleryStateContext {\r\n  state?: GalleryState;\r\n  config?: GalleryConfig;\r\n}\r\n",
            "selector": "[galleryBoxDef]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<GalleryStateContext>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngTemplateContextGuard",
                    "args": [
                        {
                            "name": "directive",
                            "type": "GalleryBoxDef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "context",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "GalleryStateContext",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "directive",
                            "type": "GalleryBoxDef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "context",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<GalleryStateContext>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<GalleryStateContext>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "GalleryImageDef",
            "id": "directive-GalleryImageDef-ed5ba58045d4decff0e07e755dc0c225ab926051f1c25b914bd812eb0fb9a3969ead4cfbf96f0f1a82b37db87c29887edd98a66211d3949fe201fda6c8006b70",
            "file": "projects/ng-gallery/src/lib/directives/gallery-image-def.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, TemplateRef } from '@angular/core';\r\nimport { ImageItemData } from '../components/templates/items.model';\r\nimport { GalleryItemContext } from './gallery-item-def.directive';\r\n\r\n@Directive({\r\n  standalone: true,\r\n  selector: '[galleryImageDef]'\r\n})\r\nexport class GalleryImageDef {\r\n\r\n  constructor(public templateRef: TemplateRef<GalleryItemContext<ImageItemData>>) {\r\n  }\r\n\r\n  // Make sure the template checker knows the type of the context with which the\r\n  // template of this directive will be rendered\r\n  static ngTemplateContextGuard(\r\n    directive: GalleryImageDef,\r\n    context: unknown\r\n  ): context is GalleryItemContext<ImageItemData> {\r\n    return true;\r\n  }\r\n}\r\n",
            "selector": "[galleryImageDef]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<GalleryItemContext<ImageItemData>>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngTemplateContextGuard",
                    "args": [
                        {
                            "name": "directive",
                            "type": "GalleryImageDef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "context",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "GalleryItemContext<ImageItemData>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "directive",
                            "type": "GalleryImageDef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "context",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<GalleryItemContext<ImageItemData>>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<GalleryItemContext<ImageItemData>>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "GalleryItemDef",
            "id": "directive-GalleryItemDef-26e1a2a9cd6d60ca99303fc991011e44a915536a91e7fffb302ad20298ea1600095dac2bbb811adb2767e9c07b63f913c60fab3c81fff80a56796b65a8136cba",
            "file": "projects/ng-gallery/src/lib/directives/gallery-item-def.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, TemplateRef } from '@angular/core';\r\nimport { GalleryItemData } from '../components/templates/items.model';\r\nimport { GalleryItemType } from '../models/constants';\r\n\r\n@Directive({\r\n  standalone: true,\r\n  selector: '[galleryItemDef]'\r\n})\r\nexport class GalleryItemDef {\r\n  constructor(public templateRef: TemplateRef<GalleryItemContext<GalleryItemDef>>) {\r\n  }\r\n\r\n  // Make sure the template checker knows the type of the context with which the\r\n  // template of this directive will be rendered\r\n  static ngTemplateContextGuard(\r\n    directive: GalleryItemDef,\r\n    context: unknown\r\n  ): context is GalleryItemContext<GalleryItemData> {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport interface GalleryItemContext<T> {\r\n  /** Data for the row that this cell is located within. */\r\n  $implicit?: T;\r\n\r\n  /** Index of the item. */\r\n  index?: number;\r\n\r\n  /** The type of the item. */\r\n  type?: GalleryItemType;\r\n\r\n  /** True if this item is the active one. */\r\n  active?: boolean;\r\n\r\n  /** The number of total items. */\r\n  count?: number;\r\n\r\n  /** True if this item is first. */\r\n  first?: boolean;\r\n\r\n  /** True if this item is last. */\r\n  last?: boolean;\r\n}\r\n",
            "selector": "[galleryItemDef]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<GalleryItemContext<GalleryItemDef>>",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngTemplateContextGuard",
                    "args": [
                        {
                            "name": "directive",
                            "type": "GalleryItemDef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "context",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "GalleryItemContext<GalleryItemData>",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "directive",
                            "type": "GalleryItemDef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "context",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<GalleryItemContext<GalleryItemDef>>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<GalleryItemContext<GalleryItemDef>>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "GalleryThumbDef",
            "id": "directive-GalleryThumbDef-b6a21582967ca97fc62641838641bac7ceab9261c6d740a6cf2fee519d0caf4895136246fe2c47f8e521708a79f78b24ff01d43714a993eec105c40ea6f36666",
            "file": "projects/ng-gallery/src/lib/directives/gallery-thumb-def.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, TemplateRef } from '@angular/core';\r\nimport { ImageItemData } from '../components/templates/items.model';\r\nimport { GalleryItemContext } from './gallery-item-def.directive';\r\n\r\n@Directive({\r\n  standalone: true,\r\n  selector: '[galleryThumbDef]'\r\n})\r\nexport class GalleryThumbDef {\r\n\r\n  constructor(public templateRef: TemplateRef<GalleryItemContext<ImageItemData>>) {\r\n  }\r\n  // Make sure the template checker knows the type of the context with which the\r\n  // template of this directive will be rendered\r\n  static ngTemplateContextGuard(\r\n    directive: GalleryThumbDef,\r\n    context: unknown\r\n  ): context is GalleryItemContext<ImageItemData> {\r\n    return true;\r\n  }\r\n}\r\n",
            "selector": "[galleryThumbDef]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<GalleryItemContext<ImageItemData>>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngTemplateContextGuard",
                    "args": [
                        {
                            "name": "directive",
                            "type": "GalleryThumbDef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "context",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "GalleryItemContext<ImageItemData>",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "directive",
                            "type": "GalleryThumbDef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "context",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<GalleryItemContext<ImageItemData>>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<GalleryItemContext<ImageItemData>>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "HammerSliding",
            "id": "directive-HammerSliding-8e4f574e588240c89e9cb6a7a2e9074c48787b2109fc5d8a6facd287445d7e14e5da8c94ceed35201f55257548d74ea42709b688f2e6ec0a65caa754d6104759",
            "file": "projects/ng-gallery/src/lib/gestures/hammer-sliding.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\r\n  Directive,\r\n  Inject,\r\n  Input,\r\n  Output,\r\n  OnChanges,\r\n  OnDestroy,\r\n  SimpleChanges,\r\n  NgZone,\r\n  ElementRef,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { Directionality } from '@angular/cdk/bidi';\r\nimport { SliderAdapter } from '../components/adapters';\r\nimport { GalleryState } from '../models/gallery.model';\r\nimport { GalleryConfig } from '../models/config.model';\r\nimport { Orientation } from '../models/constants';\r\nimport { GalleryItemComponent } from '../components/gallery-item.component';\r\nimport { GalleryThumbComponent } from '../components/gallery-thumb.component';\r\n\r\ndeclare const Hammer: any;\r\n\r\n@Directive({\r\n  selector: '[hammerSliding]',\r\n  standalone: true\r\n})\r\nexport class HammerSliding implements OnChanges, OnDestroy {\r\n\r\n  /** HammerJS instance */\r\n  private _hammer: any;\r\n\r\n  get _viewport(): HTMLElement {\r\n    return this._el.nativeElement;\r\n  }\r\n\r\n  @Input('hammerSliding') enabled: boolean;\r\n\r\n  @Input() galleryId: string;\r\n\r\n  @Input() items: GalleryItemComponent[] | GalleryThumbComponent[];\r\n\r\n  @Input() adapter: SliderAdapter;\r\n\r\n  @Input() state: GalleryState;\r\n\r\n  @Input() config: GalleryConfig;\r\n\r\n  @Output() activeIndexChange: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  @Output() isSlidingChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  constructor(@Inject(DOCUMENT) private _document: Document,\r\n              private _el: ElementRef<HTMLElement>,\r\n              private _dir: Directionality,\r\n              private _platform: Platform,\r\n              private _zone: NgZone) {\r\n  }\r\n\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.enabled && changes.enabled?.currentValue !== changes.enabled?.previousValue) {\r\n      this.enabled ? this._subscribe() : this._unsubscribe();\r\n    }\r\n    if (!changes.adapter?.firstChange && changes.adapter?.currentValue !== changes.adapter?.previousValue) {\r\n      this.enabled ? this._subscribe() : this._unsubscribe();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._unsubscribe();\r\n  }\r\n\r\n  private _subscribe(): void {\r\n    this._unsubscribe();\r\n\r\n    if (!this._platform.ANDROID && !this._platform.IOS && typeof Hammer !== 'undefined') {\r\n      this._zone.runOutsideAngular(() => {\r\n\r\n        const direction: number = this.adapter.hammerDirection;\r\n        this._hammer = new Hammer(this._el.nativeElement, { inputClass: Hammer.MouseInput });\r\n        this._hammer.get('pan').set({ direction });\r\n\r\n        let offset: number;\r\n\r\n        // Set panOffset for sliding on pan start event\r\n        this._hammer.on('panstart', () => {\r\n          this._zone.run(() => {\r\n            this.isSlidingChange.emit(true);\r\n          });\r\n\r\n          offset = this.adapter.scrollValue;\r\n          this._viewport.classList.add('g-sliding');\r\n          this._viewport.style.setProperty('--slider-scroll-snap-type', 'none');\r\n        });\r\n\r\n        this._hammer.on('panmove', (e: any) => this._viewport.scrollTo(this.adapter.getHammerValue(offset, e, 'auto')));\r\n\r\n        this._hammer.on('panend', (e: any) => {\r\n          this._document.onselectstart = null;\r\n          this._viewport.classList.remove('g-sliding');\r\n          const index: number = this.getIndexOnMouseUp(e);\r\n\r\n          this._zone.run(() => {\r\n            this.isSlidingChange.emit(false);\r\n            this.activeIndexChange.emit(index);\r\n          });\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  private _unsubscribe(): void {\r\n    this._hammer?.destroy();\r\n  }\r\n\r\n  private getIndexOnMouseUp(e: any): number {\r\n    // Check if scrolled item is great enough to navigate\r\n    const currElement: Element = this.items[this.state.currIndex].nativeElement;\r\n\r\n    // Find the gallery item element in the center elements\r\n    const elementAtCenter: Element = this.getElementFromViewportCenter();\r\n\r\n    // Check if center item can be taken from element using\r\n    if (elementAtCenter && elementAtCenter !== currElement) {\r\n      return +elementAtCenter.getAttribute('galleryIndex');\r\n    }\r\n\r\n    const velocity: number = this.adapter.getHammerVelocity(e);\r\n    // Check if velocity is great enough to navigate\r\n    if (Math.abs(velocity) > 0.3) {\r\n      if (this.config.orientation === Orientation.Horizontal) {\r\n        if (velocity > 0) {\r\n          return this._dir.value === 'rtl' ? this.state.currIndex + 1 : this.state.currIndex - 1;\r\n        }\r\n        return this._dir.value === 'rtl' ? this.state.currIndex - 1 : this.state.currIndex + 1;\r\n      } else {\r\n        return velocity > 0 ? this.state.currIndex - 1 : this.state.currIndex + 1;\r\n      }\r\n    }\r\n\r\n    // Reset position to the current index\r\n    return -1;\r\n  }\r\n\r\n  private getElementFromViewportCenter(): Element {\r\n    // Get slider position relative to the document\r\n    const sliderRect: DOMRect = this._viewport.getBoundingClientRect();\r\n    // Try look for the center item using `elementsFromPoint` function\r\n    const centerElements: Element[] = this._document.elementsFromPoint(\r\n      sliderRect.x + (sliderRect.width / 2),\r\n      sliderRect.y + (sliderRect.height / 2)\r\n    );\r\n    // Find the gallery item element in the center elements\r\n    return centerElements.find((element: Element) => {\r\n      return element.getAttribute('galleryId') === this.galleryId;\r\n    });\r\n  }\r\n}\r\n",
            "selector": "[hammerSliding]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "adapter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "SliderAdapter",
                    "decorators": []
                },
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "GalleryConfig",
                    "decorators": []
                },
                {
                    "name": "galleryId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "hammerSliding",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "GalleryItemComponent[] | GalleryThumbComponent[]",
                    "decorators": []
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "GalleryState",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "activeIndexChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "EventEmitter<number>"
                },
                {
                    "name": "isSlidingChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_hammer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>HammerJS instance</p>\n",
                    "line": 32,
                    "rawdescription": "\nHammerJS instance",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "_subscribe",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_unsubscribe",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "getElementFromViewportCenter",
                    "args": [],
                    "optional": false,
                    "returnType": "Element",
                    "typeParameters": [],
                    "line": 147,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "getIndexOnMouseUp",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 118,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "OnChanges",
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_el",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_dir",
                        "type": "Directionality",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_platform",
                        "type": "Platform",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_zone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 52,
                "jsdoctags": [
                    {
                        "name": "_document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_el",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_dir",
                        "type": "Directionality",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_platform",
                        "type": "Platform",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_zone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "_viewport": {
                    "name": "_viewport",
                    "getSignature": {
                        "name": "_viewport",
                        "type": "",
                        "returnType": "HTMLElement",
                        "line": 34
                    }
                }
            }
        },
        {
            "name": "ImgRecognizer",
            "id": "directive-ImgRecognizer-4c9d5a8c7a08b40e1e9d439399a05aec404513b8e889a789020d8e5175a205f816481633114970e3a3acc2b03986c1cf8e9d84cea50aec93a0147c934632f8ab",
            "file": "projects/ng-gallery/src/lib/utils/img-recognizer.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input, HostListener, OnInit, OnDestroy, ElementRef } from '@angular/core';\r\nimport { ImgManager } from './img-manager';\r\nimport { GalleryItemComponent } from '../components/gallery-item.component';\r\n\r\n@Directive({\r\n  selector: 'img[galleryImage]',\r\n  standalone: true\r\n})\r\nexport class ImgRecognizer implements OnInit, OnDestroy {\r\n\r\n  @Input('galleryImage') index: number;\r\n\r\n  @HostListener('load', ['$event'])\r\n  onLoad() {\r\n    this.item.state$.next('success');\r\n  }\r\n\r\n  @HostListener('error', ['$event'])\r\n  onError() {\r\n    this.item.state$.next('failed');\r\n  }\r\n\r\n  constructor(private el: ElementRef<HTMLImageElement>, private manager: ImgManager, private item: GalleryItemComponent) {\r\n    if (item) {\r\n      // Mark the gallery-item component as an image item\r\n      item.isItemContainImage = true;\r\n    } else {\r\n      throw new Error('[NgGallery]: galleryImage directive should be only used inside gallery item templates!')\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.manager.addItem(this.index, {\r\n      state: this.item.state$.asObservable(),\r\n      target: this.el.nativeElement\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.manager.deleteItem(this.index);\r\n  }\r\n}\r\n",
            "selector": "img[galleryImage]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "galleryImage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "error",
                    "args": [],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19
                },
                {
                    "name": "load",
                    "args": [],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onError",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'error', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "onLoad",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'load', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                }
            ],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef<HTMLImageElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "manager",
                        "type": "ImgManager",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "item",
                        "type": "GalleryItemComponent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef<HTMLImageElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "manager",
                        "type": "ImgManager",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "item",
                        "type": "GalleryItemComponent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ItemIntersectionObserver",
            "id": "directive-ItemIntersectionObserver-0a3b2b78df343b3cbe0b7519ff88f8d37ab36f127b1e40cfba7e23f28b9ba9f67efdf206d6dcf1eb069ec9912a4641df91af4d5f9368d7b020c4a2a653f054cf",
            "file": "projects/ng-gallery/src/lib/observers/item-intersection-observer.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input, Output, OnChanges, OnDestroy, NgZone, EventEmitter } from '@angular/core';\r\nimport { Subscription, combineLatest, filter, switchMap } from 'rxjs';\r\nimport { GalleryConfig } from '../models/config.model';\r\nimport { ActiveItemObserver } from './active-item-observer';\r\nimport { resizeObservable } from '../utils/resize-observer';\r\nimport { SliderAdapter } from '../components/adapters';\r\nimport { GalleryItemComponent } from '../components/gallery-item.component';\r\nimport { ItemState } from '../components/templates/items.model';\r\n\r\n@Directive({\r\n  selector: '[itemIntersectionObserver]',\r\n  standalone: true\r\n})\r\nexport class ItemIntersectionObserver implements OnChanges, OnDestroy {\r\n\r\n  private _currentSubscription: Subscription;\r\n\r\n  private _sensor: ActiveItemObserver = new ActiveItemObserver();\r\n\r\n  private get _viewport(): HTMLElement {\r\n    return this._item.nativeElement.parentElement.parentElement;\r\n  }\r\n\r\n  @Input() adapter: SliderAdapter;\r\n\r\n  @Input() config: GalleryConfig;\r\n\r\n  @Input('itemIntersectionObserverDisabled') disabled: boolean;\r\n\r\n  @Output() activeIndexChange: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  constructor(private _zone: NgZone, private _item: GalleryItemComponent) {\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    (this.config.itemAutosize && !this.disabled) ? this._subscribe() : this._unsubscribe();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._unsubscribe();\r\n  }\r\n\r\n  private _subscribe(): void {\r\n    this._unsubscribe();\r\n\r\n    if (!!this.adapter) {\r\n      this._zone.runOutsideAngular(() => {\r\n        this._currentSubscription = combineLatest([\r\n          resizeObservable(this._viewport),\r\n          resizeObservable(this._item.nativeElement)\r\n        ]).pipe(\r\n          switchMap(() => this._item.state$),\r\n          filter((state: ItemState) => state !== 'loading'),\r\n          switchMap(() => {\r\n            const rootMargin: string = this.adapter.getElementRootMargin(this._viewport, this._item.nativeElement);\r\n            if (this.config.debug) {\r\n              this._item.nativeElement.style.setProperty('--item-intersection-margin', `\"VIEWPORT(${ this._viewport.clientWidth }x${ this._viewport.clientHeight }) ITEM(${ this._item.nativeElement.clientWidth }x${ this._item.nativeElement.clientHeight }) INTERSECTION(${ rootMargin })\"`);\r\n            }\r\n\r\n            return this._sensor.observe(\r\n              this._viewport,\r\n              [this._item.nativeElement],\r\n              rootMargin\r\n            );\r\n          }\r\n          )\r\n        ).subscribe((index: number) => {\r\n          this._zone.run(() => this.activeIndexChange.emit(index));\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  private _unsubscribe(): void {\r\n    this._currentSubscription?.unsubscribe();\r\n  }\r\n}\r\n",
            "selector": "[itemIntersectionObserver]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "adapter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "SliderAdapter",
                    "decorators": []
                },
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "GalleryConfig",
                    "decorators": []
                },
                {
                    "name": "itemIntersectionObserverDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "activeIndexChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "EventEmitter<number>"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_currentSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_sensor",
                    "defaultValue": "new ActiveItemObserver()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActiveItemObserver",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "_subscribe",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_unsubscribe",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "OnChanges",
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_zone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_item",
                        "type": "GalleryItemComponent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "_zone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_item",
                        "type": "GalleryItemComponent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "_viewport": {
                    "name": "_viewport",
                    "getSignature": {
                        "name": "_viewport",
                        "type": "",
                        "returnType": "HTMLElement",
                        "line": 20
                    }
                }
            }
        },
        {
            "name": "SliderIntersectionObserver",
            "id": "directive-SliderIntersectionObserver-59296fab6cf19b998ffcf73bd65f51d466a277818639722ee281fa993055678cbb9b8fa77f5f0234106cbc02d5a6dbc972d06329fa5eeb06598776d1d6bf0228",
            "file": "projects/ng-gallery/src/lib/observers/slider-intersection-observer.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input, Output, OnChanges, OnDestroy, NgZone, ElementRef, EventEmitter } from '@angular/core';\r\nimport { skip, Subscription } from 'rxjs';\r\nimport { GalleryConfig } from '../models/config.model';\r\nimport { ActiveItemObserver } from './active-item-observer';\r\nimport { SliderAdapter } from '../components/adapters';\r\nimport { GalleryItemComponent } from '../components/gallery-item.component';\r\n\r\n@Directive({\r\n  selector: '[sliderIntersectionObserver]',\r\n  standalone: true\r\n})\r\nexport class SliderIntersectionObserver implements OnChanges, OnDestroy {\r\n\r\n  private _currentSubscription: Subscription;\r\n\r\n  private _sensor: ActiveItemObserver = new ActiveItemObserver();\r\n\r\n  private get _viewport(): HTMLElement {\r\n    return this._el.nativeElement;\r\n  }\r\n\r\n  @Input() adapter: SliderAdapter;\r\n\r\n  @Input() items: GalleryItemComponent[];\r\n\r\n  @Input() config: GalleryConfig;\r\n\r\n  @Input('sliderIntersectionObserverDisabled') disabled: boolean;\r\n\r\n  @Output() activeIndexChange: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  constructor(private _zone: NgZone, private _el: ElementRef<HTMLElement>) {\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    (this.config.itemAutosize || this.disabled) ? this._unsubscribe() : this._subscribe();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._unsubscribe();\r\n  }\r\n\r\n  private _subscribe(): void {\r\n    this._unsubscribe();\r\n\r\n    if (!!this.adapter && !!this.items?.length) {\r\n      const rootMargin: string = this.adapter.getRootMargin();\r\n      if (this.config.debug) {\r\n        this._viewport.style.setProperty('--intersection-margin', `\"INTERSECTION(${ rootMargin })\"`);\r\n      }\r\n\r\n      this._zone.runOutsideAngular(() => {\r\n        this._currentSubscription = this._sensor.observe(\r\n          this._viewport,\r\n          this.items.map((item: GalleryItemComponent) => item.nativeElement),\r\n          rootMargin\r\n        ).subscribe((index: number) => {\r\n          this._zone.run(() => this.activeIndexChange.emit(index));\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  private _unsubscribe(): void {\r\n    this._currentSubscription?.unsubscribe();\r\n  }\r\n}\r\n",
            "selector": "[sliderIntersectionObserver]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "adapter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "SliderAdapter",
                    "decorators": []
                },
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "GalleryConfig",
                    "decorators": []
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "GalleryItemComponent[]",
                    "decorators": []
                },
                {
                    "name": "sliderIntersectionObserverDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "activeIndexChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "EventEmitter<number>"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_currentSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_sensor",
                    "defaultValue": "new ActiveItemObserver()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActiveItemObserver",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "_subscribe",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_unsubscribe",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "OnChanges",
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_zone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_el",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "_zone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_el",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "_viewport": {
                    "name": "_viewport",
                    "getSignature": {
                        "name": "_viewport",
                        "type": "",
                        "returnType": "HTMLElement",
                        "line": 18
                    }
                }
            }
        },
        {
            "name": "SliderResizeObserver",
            "id": "directive-SliderResizeObserver-e9e0114bce4aa05a4e4454ec9d6bc082f728bc27ce0c56ff97ca48b841d05577d1734afbcd0dc58c53953763bb0b005c4442de9d4b6f0cd556443d328614d8d1",
            "file": "projects/ng-gallery/src/lib/observers/slider-resize-observer.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\r\n  Directive,\r\n  Input,\r\n  Output,\r\n  NgZone,\r\n  ElementRef,\r\n  AfterViewChecked,\r\n  OnInit,\r\n  OnChanges,\r\n  OnDestroy,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport {\r\n  Observable,\r\n  Subscription,\r\n  of,\r\n  tap,\r\n  take,\r\n  filter,\r\n  fromEvent,\r\n  switchMap,\r\n  debounceTime,\r\n  firstValueFrom,\r\n  distinctUntilChanged,\r\n  EMPTY,\r\n  animationFrameScheduler\r\n} from 'rxjs';\r\nimport { ImgManager } from '../utils/img-manager';\r\nimport { resizeObservable } from '../utils/resize-observer';\r\nimport { SliderAdapter } from '../components/adapters';\r\nimport { Gallery } from '../services/gallery.service';\r\nimport { GalleryRef } from '../services/gallery-ref';\r\nimport { GalleryConfig } from '../models/config.model';\r\nimport { GalleryState } from '../models/gallery.model';\r\n\r\n@Directive({\r\n  selector: '[sliderResizeObserver]',\r\n  standalone: true\r\n})\r\nexport class SliderResizeObserver implements AfterViewChecked, OnChanges, OnInit, OnDestroy {\r\n\r\n  private _resizeObserver: ResizeObserver;\r\n\r\n  private _autoHeightSubscription: Subscription;\r\n\r\n  private _resizeSubscription: Subscription;\r\n\r\n  private _shouldSkip: boolean;\r\n\r\n  // Stream that emits after the transition to the new height is completed\r\n  private _afterHeightChanged$: Observable<any>;\r\n\r\n  private get _viewport(): HTMLElement {\r\n    return this._el.nativeElement;\r\n  }\r\n\r\n  private get _galleryCore(): HTMLElement {\r\n    return this._el.nativeElement.parentElement.parentElement.parentElement;\r\n  }\r\n\r\n  private get _isAutoHeight(): boolean {\r\n    return this.config.autoHeight &&\r\n      !this.config.itemAutosize &&\r\n      this.config.orientation === 'horizontal' &&\r\n      (this.config.thumbPosition === 'top' || this.config.thumbPosition === 'bottom');\r\n  }\r\n\r\n  @Input() galleryId: string;\r\n\r\n  @Input() adapter: SliderAdapter;\r\n\r\n  @Input() config: GalleryConfig;\r\n\r\n  @Output() isResizingChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  constructor(private _el: ElementRef<HTMLElement>,\r\n              private _zone: NgZone,\r\n              private _gallery: Gallery,\r\n              private _imgManager: ImgManager) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const galleryRef: GalleryRef = this._gallery.ref(this.galleryId);\r\n\r\n    // Check if height has transition for the auto-height feature\r\n    const transitionDuration: string = getComputedStyle(this._viewport).getPropertyValue('transition-duration');\r\n    if (parseFloat(transitionDuration) === 0) {\r\n      this._afterHeightChanged$ = of(null);\r\n    } else {\r\n      this._afterHeightChanged$ = fromEvent(this._viewport, 'transitionend');\r\n    }\r\n\r\n    this._zone.runOutsideAngular(() => {\r\n\r\n      // Detect if the size of the slider has changed detecting current index on scroll\r\n      this._resizeSubscription = resizeObservable(this._viewport, (observer: ResizeObserver) => this._resizeObserver = observer).pipe(\r\n        // Check if resize should skip due to re-observing the slider\r\n        filter(() => !this._shouldSkip || !(this._shouldSkip = false)),\r\n        // Immediately set visibility to hidden to avoid changing the active item caused by appearance of other items when size is expanded\r\n        tap(() => this.setResizingState()),\r\n        debounceTime(this.config.resizeDebounceTime, animationFrameScheduler),\r\n        tap(async (entry: ResizeObserverEntry) => {\r\n          // Update CSS variables with the proper values\r\n          this.updateSliderSize();\r\n\r\n          if (this._isAutoHeight) {\r\n            const img: HTMLImageElement = await firstValueFrom(this._imgManager.getActiveItem(galleryRef.state));\r\n            // If img height is identical to the viewport height then skip\r\n            if (img.height === this._viewport.clientHeight) {\r\n              this.resetResizingState();\r\n            } else {\r\n              // Unobserve the slider while the height is being changed\r\n              this.setResizingState({ unobserve: true });\r\n              // Change the height\r\n              this._galleryCore.style.setProperty('--slider-height', `${ img.height }px`);\r\n              // Wait until height transition ends\r\n              await firstValueFrom(this._afterHeightChanged$);\r\n              this.resetResizingState({\r\n                // Mark to skip first emit after re-observing the slider if height content rect height and client height are identical\r\n                shouldSkip: entry.contentRect.height === this._viewport.clientHeight,\r\n                observe: true\r\n              });\r\n            }\r\n          } else {\r\n            requestAnimationFrame(() => this.resetResizingState({ shouldSkip: true }));\r\n          }\r\n        })\r\n      ).subscribe();\r\n    });\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    this._isAutoHeight ? this._subscribeAutoHeight() : this._unsubscribeAutoHeight();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._resizeSubscription?.unsubscribe();\r\n    this._unsubscribeAutoHeight();\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    this.updateSliderSize();\r\n  }\r\n\r\n  private updateSliderSize(): void {\r\n    // Update slider width and height CSS variables\r\n    this._galleryCore.style.setProperty('--slider-width', `${ this._viewport.clientWidth }px`);\r\n\r\n    // Only update height if auto-height is false, because when it's true, another function will take care of it\r\n    if (!this.config.autoHeight) {\r\n      this._galleryCore.style.setProperty('--slider-height', `${ this._viewport.clientHeight }px`);\r\n    }\r\n\r\n    this.updateCentralizeCSSVariables();\r\n  }\r\n\r\n  private updateCentralizeCSSVariables(): void {\r\n    if (this.config.itemAutosize) {\r\n      this._galleryCore.style.setProperty('--slider-centralize-start-size', `${ this.adapter.getCentralizerStartSize() }px`);\r\n      this._galleryCore.style.setProperty('--slider-centralize-end-size', `${ this.adapter.getCentralizerEndSize() }px`);\r\n    }\r\n  }\r\n\r\n  private _subscribeAutoHeight(): void {\r\n    this._unsubscribeAutoHeight();\r\n\r\n    this._shouldSkip = false;\r\n    this._zone.runOutsideAngular(() => {\r\n\r\n      const galleryRef: GalleryRef = this._gallery.ref(this.galleryId);\r\n\r\n      // TODO: Why is galleryRef.state emits when screen size changes?\r\n      const state: Observable<GalleryState> = galleryRef.state.pipe(distinctUntilChanged((a: GalleryState, b: GalleryState) => a.currIndex === b.currIndex))\r\n      this._autoHeightSubscription = this._imgManager.getActiveItem(state).pipe(\r\n        switchMap((img: HTMLImageElement) => {\r\n          this.setResizingState({ unobserve: true });\r\n          this._galleryCore.style.setProperty('--slider-height', `${ img.clientHeight }px`);\r\n\r\n          // Check if the new item height is equal to the current height, there will be no transition,\r\n          // So reset resizing state\r\n          if (img.height === this._viewport.clientHeight) {\r\n            this.resetResizingState({ shouldSkip: true, observe: true });\r\n            return EMPTY;\r\n          }\r\n          return this._afterHeightChanged$.pipe(\r\n            tap(() => this.resetResizingState({ shouldSkip: true, observe: true })),\r\n            take(1)\r\n          );\r\n        })\r\n      ).subscribe();\r\n    });\r\n  }\r\n\r\n  private _unsubscribeAutoHeight(): void {\r\n    this._autoHeightSubscription?.unsubscribe();\r\n  }\r\n\r\n  private setResizingState({ unobserve }: { unobserve?: boolean } = {}): void {\r\n    this._zone.run(() => {\r\n      this.isResizingChange.emit(true);\r\n    })\r\n    this._viewport.classList.add('g-resizing');\r\n    if (unobserve) {\r\n      // Unobserve the slider while the height is being changed\r\n      this._resizeObserver.unobserve(this._viewport);\r\n    }\r\n  }\r\n\r\n  private resetResizingState({ shouldSkip, observe }: { shouldSkip?: boolean, observe?: boolean } = {}): void {\r\n    this._zone.run(() => {\r\n      this.isResizingChange.emit(false);\r\n    })\r\n    this._viewport.classList.remove('g-resizing');\r\n    this._shouldSkip = shouldSkip;\r\n    if (observe) {\r\n      this._resizeObserver.observe(this._viewport);\r\n    }\r\n  }\r\n}\r\n",
            "selector": "[sliderResizeObserver]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "adapter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "SliderAdapter",
                    "decorators": []
                },
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "GalleryConfig",
                    "decorators": []
                },
                {
                    "name": "galleryId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "isResizingChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_afterHeightChanged$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_autoHeightSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_resizeObserver",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ResizeObserver",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_resizeSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_shouldSkip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "_subscribeAutoHeight",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 164,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_unsubscribeAutoHeight",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 194,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngAfterViewChecked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 136,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resetResizingState",
                    "args": [
                        {
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{}"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 209,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{}",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setResizingState",
                    "args": [
                        {
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{}"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 198,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{}",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateCentralizeCSSVariables",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 157,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "updateSliderSize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "implements": [
                "AfterViewChecked",
                "OnChanges",
                "OnInit",
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_el",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_zone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_gallery",
                        "type": "Gallery",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_imgManager",
                        "type": "ImgManager",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 74,
                "jsdoctags": [
                    {
                        "name": "_el",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_zone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_gallery",
                        "type": "Gallery",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_imgManager",
                        "type": "ImgManager",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "_viewport": {
                    "name": "_viewport",
                    "getSignature": {
                        "name": "_viewport",
                        "type": "",
                        "returnType": "HTMLElement",
                        "line": 53
                    }
                },
                "_galleryCore": {
                    "name": "_galleryCore",
                    "getSignature": {
                        "name": "_galleryCore",
                        "type": "",
                        "returnType": "HTMLElement",
                        "line": 57
                    }
                },
                "_isAutoHeight": {
                    "name": "_isAutoHeight",
                    "getSignature": {
                        "name": "_isAutoHeight",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 61
                    }
                }
            }
        },
        {
            "name": "SmoothScroll",
            "id": "directive-SmoothScroll-5bb27d460fc4a4e1ca2570fbc891c51a47834c7c6604af768ac261f9e520115f379926565a009c6aad180f99b311899a56030c3dcf739ffbf2539d9d56d6c38d",
            "file": "projects/ng-gallery/src/lib/smooth-scroll/smooth-scroll.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\r\n  Directive,\r\n  Inject,\r\n  Input,\r\n  Output,\r\n  NgZone,\r\n  OnInit,\r\n  OnDestroy,\r\n  ElementRef,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Dir } from '@angular/cdk/bidi';\r\nimport { _Bottom, _Left, _Right, _Top, _Without } from '@angular/cdk/scrolling';\r\nimport { getRtlScrollAxisType, RtlScrollAxisType } from '@angular/cdk/platform';\r\nimport {\r\n  Observable,\r\n  Subject,\r\n  Subscriber,\r\n  Subscription,\r\n  of,\r\n  take,\r\n  merge,\r\n  expand,\r\n  fromEvent,\r\n  switchMap,\r\n  takeUntil,\r\n  takeWhile,\r\n  finalize\r\n} from 'rxjs';\r\nimport BezierEasing from './bezier-easing';\r\nimport { GalleryConfig } from '../models/config.model';\r\nimport { SmoothScrollOptions, SmoothScrollStep, SmoothScrollToOptions } from './index';\r\nimport { SliderAdapter } from '../components/adapters';\r\n\r\ndeclare const Hammer: any;\r\n\r\n@Directive({\r\n  selector: '[smoothScroll]',\r\n  standalone: true,\r\n  providers: [Dir]\r\n})\r\nexport class SmoothScroll implements OnInit, OnDestroy {\r\n\r\n  /** HammerJS instance */\r\n  private _hammer: any;\r\n\r\n  private readonly _scrollController: Subject<SmoothScrollStep> = new Subject<SmoothScrollStep>();\r\n\r\n  private readonly _finished: Subject<void> = new Subject<void>();\r\n\r\n  private readonly _el: HTMLElement;\r\n\r\n  private _isInterruptedByMouse: boolean;\r\n\r\n  private _subscription: Subscription;\r\n\r\n  private get _w(): Window {\r\n    return this._document.defaultView;\r\n  }\r\n\r\n  /**\r\n   * Timing method\r\n   */\r\n  private get _now(): () => number {\r\n    return this._w.performance?.now?.bind(this._w.performance) || Date.now;\r\n  }\r\n\r\n  @Input()\r\n  set smoothScroll(value: SmoothScrollOptions) {\r\n    if (value) {\r\n      this._zone.runOutsideAngular(() => {\r\n        this.scrollTo(value);\r\n      });\r\n    }\r\n  }\r\n\r\n  @Input() adapter: SliderAdapter;\r\n\r\n  @Input() config: GalleryConfig;\r\n\r\n  @Input('smoothScrollInterruptOnMousemove') interruptOnMousemove: boolean;\r\n\r\n  @Output() isScrollingChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  constructor(@Inject(DOCUMENT) private _document: Document,\r\n              private _zone: NgZone,\r\n              private _dir: Dir,\r\n              _el: ElementRef<HTMLElement>) {\r\n    this._el = _el.nativeElement;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._subscription = this._scrollController.pipe(\r\n      switchMap((context: SmoothScrollStep) => {\r\n        this._zone.run(() => {\r\n          this.isScrollingChange.emit(true);\r\n        });\r\n\r\n        this._el.classList.add('g-scrolling');\r\n        this._el.style.setProperty('--slider-scroll-snap-type', 'none');\r\n\r\n        // Scroll each step recursively\r\n        return of(null).pipe(\r\n          expand(() => this._step(context).pipe(\r\n            takeWhile((currContext: SmoothScrollStep) => this._isFinished(currContext)),\r\n            takeUntil(this._finished)\r\n          )),\r\n          finalize(() => this.resetElement()),\r\n          takeUntil(this._interrupted()),\r\n        );\r\n      })\r\n    ).subscribe();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._subscription?.unsubscribe();\r\n    this._scrollController.complete();\r\n  }\r\n\r\n  /**\r\n   * changes scroll position inside an element\r\n   */\r\n  private _scrollElement(x: number, y: number): void {\r\n    this._el.scrollLeft = x;\r\n    this._el.scrollTop = y;\r\n  }\r\n\r\n  private resetElement(): void {\r\n    this._zone.run(() => {\r\n      this.isScrollingChange.emit(false);\r\n    });\r\n\r\n    this._el.classList.remove('g-scrolling');\r\n    if (!this._isInterruptedByMouse) {\r\n      this._el.style.setProperty('--slider-scroll-snap-type', this.adapter.scrollSnapType);\r\n    }\r\n    this._isInterruptedByMouse = false;\r\n  }\r\n\r\n  /**\r\n   * Checks if smooth scroll has reached, cleans up the smooth scroll stream and resolves its promise\r\n   */\r\n  private _isFinished(context: SmoothScrollStep): boolean {\r\n    if (context.currentX !== context.x || context.currentY !== context.y) {\r\n      return true;\r\n    }\r\n    this._finished.next();\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Terminates an ongoing smooth scroll\r\n   */\r\n  private _interrupted(): Observable<Event | void> {\r\n    let interrupt$: Observable<Event | void>;\r\n    if (this.interruptOnMousemove && typeof Hammer !== 'undefined') {\r\n      this._hammer = new Hammer(this._el, { inputClass: Hammer.MouseInput });\r\n      this._hammer.get('pan').set({ direction: this.adapter.hammerDirection });\r\n\r\n      // For gallery thumb slider, dragging thumbnails should cancel the ongoing scroll\r\n      interrupt$ = merge(\r\n        new Observable<void>((subscriber: Subscriber<void>) => {\r\n          this._hammer.on('panstart', () => {\r\n            this._isInterruptedByMouse = true;\r\n            subscriber.next();\r\n            subscriber.complete();\r\n          });\r\n          return () => {\r\n            this._hammer.destroy();\r\n          }\r\n        }),\r\n        fromEvent(this._el, 'wheel', { passive: true, capture: true }),\r\n        fromEvent(this._el, 'touchmove', { passive: true, capture: true }),\r\n      )\r\n    } else {\r\n      interrupt$ = merge(\r\n        fromEvent(this._el, 'wheel', { passive: true, capture: true }),\r\n        fromEvent(this._el, 'touchmove', { passive: true, capture: true }),\r\n      )\r\n    }\r\n    return interrupt$.pipe(take(1));\r\n  }\r\n\r\n  /**\r\n   * A function called recursively that, given a context, steps through scrolling\r\n   */\r\n  private _step(context: SmoothScrollStep): Observable<SmoothScrollStep> {\r\n    return new Observable((subscriber: Subscriber<SmoothScrollStep>) => {\r\n      let elapsed: number = (this._now() - context.startTime) / context.duration;\r\n\r\n      // avoid elapsed times higher than one\r\n      elapsed = elapsed > 1 ? 1 : elapsed;\r\n\r\n      // apply easing to elapsed time\r\n      const value: number = context.easing(elapsed);\r\n\r\n      context.currentX = context.startX + (context.x - context.startX) * value;\r\n      context.currentY = context.startY + (context.y - context.startY) * value;\r\n\r\n      this._scrollElement(context.currentX, context.currentY);\r\n      // Proceed to the step\r\n      requestAnimationFrame(() => {\r\n        subscriber.next(context);\r\n        subscriber.complete();\r\n      });\r\n    });\r\n  }\r\n\r\n  private _applyScrollToOptions(options: SmoothScrollToOptions): void {\r\n    if (!options.duration) {\r\n      this._scrollElement(options.left, options.top);\r\n    }\r\n\r\n    const context: SmoothScrollStep = {\r\n      scrollable: this._el,\r\n      startTime: this._now(),\r\n      startX: this._el.scrollLeft,\r\n      startY: this._el.scrollTop,\r\n      x: options.left == null ? this._el.scrollLeft : ~~options.left,\r\n      y: options.top == null ? this._el.scrollTop : ~~options.top,\r\n      duration: options.duration,\r\n      easing: BezierEasing(options.easing.x1, options.easing.y1, options.easing.x2, options.easing.y2)\r\n    };\r\n\r\n    this._scrollController.next(context);\r\n  }\r\n\r\n  /**\r\n   * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\r\n   * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\r\n   * left and right always refer to the left and right side of the scrolling container irrespective\r\n   * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\r\n   * in an RTL context.\r\n   * @param params specified the offsets to scroll to.\r\n   */\r\n  scrollTo(params: SmoothScrollOptions): void {\r\n    const isRtl: boolean = this._dir.value === 'rtl';\r\n    const rtlScrollAxisType: RtlScrollAxisType = getRtlScrollAxisType();\r\n\r\n    const options: SmoothScrollToOptions = {\r\n      ...params,\r\n      ...({\r\n        // Rewrite start & end offsets as right or left offsets.\r\n        left: params.left == null ? (isRtl ? params.end : params.start) : params.left,\r\n        right: params.right == null ? (isRtl ? params.start : params.end) : params.right\r\n      } as _Without<_Bottom & _Top>),\r\n      duration: params.behavior === 'smooth' ? this.config.scrollDuration : 0,\r\n      easing: this.config.scrollEase,\r\n    };\r\n\r\n    // Rewrite the bottom offset as a top offset.\r\n    if (options.bottom != null) {\r\n      (options as _Without<_Bottom> & _Top).top = this._el.scrollHeight - this._el.clientHeight - options.bottom;\r\n    }\r\n\r\n    // Rewrite the right offset as a left offset.\r\n    if (isRtl && rtlScrollAxisType !== RtlScrollAxisType.NORMAL) {\r\n      if (options.left != null) {\r\n        (options as _Without<_Left> & _Right).right = this._el.scrollWidth - this._el.clientWidth - options.left;\r\n      }\r\n\r\n      if (rtlScrollAxisType === RtlScrollAxisType.INVERTED) {\r\n        options.left = options.right;\r\n      } else if (rtlScrollAxisType === RtlScrollAxisType.NEGATED) {\r\n        options.left = options.right ? -options.right : options.right;\r\n      }\r\n    } else {\r\n      if (options.right != null) {\r\n        (options as _Without<_Right> & _Left).left = this._el.scrollWidth - this._el.clientWidth - options.right;\r\n      }\r\n    }\r\n    return this._applyScrollToOptions(options);\r\n  }\r\n}\r\n",
            "selector": "[smoothScroll]",
            "providers": [
                {
                    "name": "Dir"
                }
            ],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "adapter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "SliderAdapter",
                    "decorators": []
                },
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 80,
                    "type": "GalleryConfig",
                    "decorators": []
                },
                {
                    "name": "smoothScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "SmoothScrollOptions",
                    "decorators": []
                },
                {
                    "name": "smoothScrollInterruptOnMousemove",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 82,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "isScrollingChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 84,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_el",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        121,
                        146
                    ]
                },
                {
                    "name": "_finished",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        121,
                        146
                    ]
                },
                {
                    "name": "_hammer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>HammerJS instance</p>\n",
                    "line": 46,
                    "rawdescription": "\nHammerJS instance",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_isInterruptedByMouse",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_scrollController",
                    "defaultValue": "new Subject<SmoothScrollStep>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<SmoothScrollStep>",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        121,
                        146
                    ]
                },
                {
                    "name": "_subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "_applyScrollToOptions",
                    "args": [
                        {
                            "name": "options",
                            "type": "SmoothScrollToOptions",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 210,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "options",
                            "type": "SmoothScrollToOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "_interrupted",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Event | void>",
                    "typeParameters": [],
                    "line": 155,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTerminates an ongoing smooth scroll\n",
                    "description": "<p>Terminates an ongoing smooth scroll</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_isFinished",
                    "args": [
                        {
                            "name": "context",
                            "type": "SmoothScrollStep",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 144,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChecks if smooth scroll has reached, cleans up the smooth scroll stream and resolves its promise\n",
                    "description": "<p>Checks if smooth scroll has reached, cleans up the smooth scroll stream and resolves its promise</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "context",
                            "type": "SmoothScrollStep",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "_scrollElement",
                    "args": [
                        {
                            "name": "x",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "y",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nchanges scroll position inside an element\n",
                    "description": "<p>changes scroll position inside an element</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "x",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "y",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "_step",
                    "args": [
                        {
                            "name": "context",
                            "type": "SmoothScrollStep",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<SmoothScrollStep>",
                    "typeParameters": [],
                    "line": 188,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nA function called recursively that, given a context, steps through scrolling\n",
                    "description": "<p>A function called recursively that, given a context, steps through scrolling</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "context",
                            "type": "SmoothScrollStep",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resetElement",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "scrollTo",
                    "args": [
                        {
                            "name": "params",
                            "type": "SmoothScrollOptions",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 237,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nScrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\nmethod, since browsers are not consistent about what scrollLeft means in RTL. For this method\nleft and right always refer to the left and right side of the scrolling container irrespective\nof the layout direction. start and end refer to left and right in an LTR context and vice-versa\nin an RTL context.\n",
                    "description": "<p>Scrolls to the specified offsets. This is a normalized version of the browser&#39;s native scrollTo\nmethod, since browsers are not consistent about what scrollLeft means in RTL. For this method\nleft and right always refer to the left and right side of the scrolling container irrespective\nof the layout direction. start and end refer to left and right in an LTR context and vice-versa\nin an RTL context.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7268,
                                "end": 7274,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "params"
                            },
                            "type": "SmoothScrollOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7262,
                                "end": 7267,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>specified the offsets to scroll to.</p>\n"
                        }
                    ]
                }
            ],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_zone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_dir",
                        "type": "Dir",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_el",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 84,
                "jsdoctags": [
                    {
                        "name": "_document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_zone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_dir",
                        "type": "Dir",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_el",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "_w": {
                    "name": "_w",
                    "getSignature": {
                        "name": "_w",
                        "type": "",
                        "returnType": "Window",
                        "line": 58
                    }
                },
                "_now": {
                    "name": "_now",
                    "getSignature": {
                        "name": "_now",
                        "type": "function",
                        "returnType": "number",
                        "line": 65,
                        "rawdescription": "\n\nTiming method\n",
                        "description": "<p>Timing method</p>\n"
                    }
                },
                "smoothScroll": {
                    "name": "smoothScroll",
                    "setSignature": {
                        "name": "smoothScroll",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "SmoothScrollOptions",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 70,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "SmoothScrollOptions",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "name": "ThumbResizeObserver",
            "id": "directive-ThumbResizeObserver-f4bec87bd1f6547135d967c65145c4e86b8754ad467189493e94811d9da357a949c08d5fe3245e0461721df30064e502335e86e3f947efa7efe6026daf1c754d",
            "file": "projects/ng-gallery/src/lib/observers/thumb-resize-observer.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\r\n  Directive,\r\n  Input,\r\n  Output,\r\n  OnInit,\r\n  OnChanges,\r\n  OnDestroy,\r\n  NgZone,\r\n  ElementRef,\r\n  SimpleChanges,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport { Subscription, tap, auditTime, animationFrameScheduler, debounceTime } from 'rxjs';\r\nimport { resizeObservable } from '../utils/resize-observer';\r\nimport { GalleryConfig } from '../models/config.model';\r\nimport { SliderAdapter } from '../components/adapters';\r\n\r\n@Directive({\r\n  selector: '[thumbResizeObserver]',\r\n  standalone: true\r\n})\r\nexport class ThumbResizeObserver implements OnChanges, OnInit, OnDestroy {\r\n\r\n  private _resizeSubscription: Subscription;\r\n\r\n  private get _viewport(): HTMLElement {\r\n    return this._el.nativeElement;\r\n  }\r\n\r\n  @Input() config: GalleryConfig;\r\n\r\n  @Input() adapter: SliderAdapter;\r\n\r\n  @Output('thumbResizeObserver') resized: EventEmitter<void> = new EventEmitter();\r\n\r\n  constructor(private _el: ElementRef<HTMLElement>, private _zone: NgZone) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._zone.runOutsideAngular(() => {\r\n      this._resizeSubscription = resizeObservable(this._viewport).pipe(\r\n        debounceTime(this.config.resizeDebounceTime, animationFrameScheduler),\r\n        tap(() => {\r\n          this.updateSliderSize();\r\n          this.resized.emit();\r\n        })\r\n      ).subscribe();\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (!changes.config.firstChange) {\r\n      this.updateSliderSize();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._resizeSubscription?.unsubscribe();\r\n  }\r\n\r\n  private updateSliderSize(): void {\r\n    this._viewport.style.setProperty('--thumb-centralize-start-size', this.adapter.getCentralizerStartSize() + 'px');\r\n    this._viewport.style.setProperty('--thumb-centralize-end-size', this.adapter.getCentralizerEndSize() + 'px');\r\n  }\r\n}\r\n",
            "selector": "[thumbResizeObserver]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "adapter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "SliderAdapter",
                    "decorators": []
                },
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "GalleryConfig",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "thumbResizeObserver",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "EventEmitter<void>"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_resizeSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateSliderSize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "implements": [
                "OnChanges",
                "OnInit",
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_el",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_zone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "_el",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_zone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "_viewport": {
                    "name": "_viewport",
                    "getSignature": {
                        "name": "_viewport",
                        "type": "",
                        "returnType": "HTMLElement",
                        "line": 26
                    }
                }
            }
        }
    ],
    "components": [
        {
            "name": "CustomTemplateComponent",
            "id": "component-CustomTemplateComponent-edc20b249ca659a17182a73d77c5802966c041e6796635ca5eccfcf01cc1194a0dca3423b64343dbbc632f79b7ecd2f2cf149030699a28aaa0985a9b731db844",
            "file": "projects/ng-gallery/src/stories/custom-templates/custom-template.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "custom-templates-example",
            "styleUrls": [],
            "styles": [
                "\n    .item-text {\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      margin: 3em auto 0;\n      width: 100%;\n      max-width: 500px;\n      padding: 20px 25px;\n      text-align: justify;\n      letter-spacing: 1px;\n      filter: drop-shadow(0px 0px 2px rgba(0, 0, 0, 0.3));\n      background: #ffffffd9;\n      color: black;\n      border-radius: 8px;\n    }\n  "
            ],
            "template": "<gallery [items]=\"items\">\n  <ng-container *galleryImageDef=\"let item\">\n    <div class=\"item-text\">\n      {{ item?.alt }}\n    </div>\n  </ng-container>\n</gallery>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "GalleryItem[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "GalleryModule",
                    "type": "module"
                }
            ],
            "description": "<p>This section demonstrate how to extend the image template, like displaying a text over the image item</p>\n",
            "rawdescription": "\n\nThis section demonstrate how to extend the image template, like displaying a text over the image item\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GalleryModule, GalleryItem, } from 'ng-gallery';\r\nimport { Observable } from 'rxjs';\r\n\r\n/**\r\n * This section demonstrate how to extend the image template, like displaying a text over the image item\r\n */\r\n@Component({\r\n  selector: 'custom-templates-example',\r\n  template: `\r\n    <gallery [items]=\"items\">\r\n      <ng-container *galleryImageDef=\"let item\">\r\n        <div class=\"item-text\">\r\n          {{ item?.alt }}\r\n        </div>\r\n      </ng-container>\r\n    </gallery>\r\n  `,\r\n  styles: [`\r\n    .item-text {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      right: 0;\r\n      margin: 3em auto 0;\r\n      width: 100%;\r\n      max-width: 500px;\r\n      padding: 20px 25px;\r\n      text-align: justify;\r\n      letter-spacing: 1px;\r\n      filter: drop-shadow(0px 0px 2px rgba(0, 0, 0, 0.3));\r\n      background: #ffffffd9;\r\n      color: black;\r\n      border-radius: 8px;\r\n    }\r\n  `],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  standalone: true,\r\n  imports: [CommonModule, GalleryModule]\r\n})\r\nexport class CustomTemplateComponent {\r\n\r\n  @Input() items: GalleryItem[];\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    .item-text {\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      margin: 3em auto 0;\n      width: 100%;\n      max-width: 500px;\n      padding: 20px 25px;\n      text-align: justify;\n      letter-spacing: 1px;\n      filter: drop-shadow(0px 0px 2px rgba(0, 0, 0, 0.3));\n      background: #ffffffd9;\n      color: black;\n      border-radius: 8px;\n    }\n  \n"
        },
        {
            "name": "GalleryBulletsComponent",
            "id": "component-GalleryBulletsComponent-d6ea477fcfc6a33a12079db8a4ff27220eb72e6c2be718c39876bb3c5343d921414e3e0be1152a782a07ce92979f0a0612c538d6b94ddf3121d80d759299b90d",
            "file": "projects/ng-gallery/src/lib/components/gallery-bullets.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gallery-bullets",
            "styleUrls": [
                "./gallery-bullets.scss"
            ],
            "styles": [],
            "template": "<div class=\"g-bullet\"\n     *ngFor=\"let item of state.items; let i = index\"\n     [class.g-bullet-active]=\"i === state.currIndex\"\n     [style.width.px]=\"config?.bulletSize\"\n     [style.height.px]=\"config?.bulletSize\"\n     (click)=\"config.disableBullets ? null : gallery.ref(this.galleryId).set(i)\">\n  <div class=\"g-bullet-inner\"></div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "GalleryConfig",
                    "decorators": []
                },
                {
                    "name": "galleryId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "GalleryState",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "gallery",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Gallery",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Gallery } from '../services/gallery.service';\r\nimport { GalleryState } from '../models/gallery.model';\r\nimport { GalleryConfig } from '../models/config.model';\r\n\r\n@Component({\r\n  selector: 'gallery-bullets',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['./gallery-bullets.scss'],\r\n  template: `\r\n    <div class=\"g-bullet\"\r\n         *ngFor=\"let item of state.items; let i = index\"\r\n         [class.g-bullet-active]=\"i === state.currIndex\"\r\n         [style.width.px]=\"config?.bulletSize\"\r\n         [style.height.px]=\"config?.bulletSize\"\r\n         (click)=\"config.disableBullets ? null : gallery.ref(this.galleryId).set(i)\">\r\n      <div class=\"g-bullet-inner\"></div>\r\n    </div>\r\n  `,\r\n  standalone: true,\r\n  imports: [CommonModule]\r\n})\r\nexport class GalleryBulletsComponent {\r\n\r\n  @Input() galleryId: string;\r\n  @Input() state: GalleryState;\r\n  @Input() config: GalleryConfig;\r\n\r\n  constructor(public gallery: Gallery) {\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  position: absolute;\r\n  left: 50%;\r\n  z-index: 99;\r\n  transform: translateX(-50%);\r\n  display: flex;\r\n  gap: 6px;\r\n  top: var(--bullets-top);\r\n  bottom: var(--bullets-bottom);\r\n}\r\n\r\n:host,\r\n.g-bullet,\r\n.g-bullet-inner {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.g-bullet {\r\n  cursor: var(--bullets-cursor);\r\n  z-index: 20;\r\n\r\n  &:hover .g-bullet-inner {\r\n    opacity: var(--bullets-hover-opacity);\r\n  }\r\n}\r\n\r\n.g-bullet-active .g-bullet-inner {\r\n  opacity: var(--bullets-active-opacity);\r\n}\r\n\r\n.g-bullet-inner {\r\n  background-color: var(--g-overlay-color);\r\n  opacity: var(--bullets-opacity);\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 50%;\r\n  transition: opacity linear 150ms;\r\n}\r\n",
                    "styleUrl": "./gallery-bullets.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "gallery",
                        "type": "Gallery",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "gallery",
                        "type": "Gallery",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "GalleryComponent",
            "id": "component-GalleryComponent-f3b9b0d77cae1496c5a5c79a0e7db4e8fedbebb04a0a06c6e0f96b3d2c5070592a99c09c2dcac483b020014785602acb85805507536bb2891fbd5a2bdf8e4238",
            "file": "projects/ng-gallery/src/lib/components/gallery.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "ImgManager"
                }
            ],
            "selector": "gallery",
            "styleUrls": [
                "./gallery.scss"
            ],
            "styles": [],
            "template": "<gallery-core autoplay\n              [galleryId]=\"id\"\n              [state]=\"galleryRef.state | async\"\n              [config]=\"galleryRef.config | async\"\n              (itemClick)=\"onItemClick($event)\"\n              (thumbClick)=\"onThumbClick($event)\"\n              (error)=\"onError($event)\"/>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "required": false,
                    "name": "autoHeight",
                    "defaultValue": "this._gallery.config.autoHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAutomatically adjusts the gallery's height to fit the content\n",
                    "description": "<p>Automatically adjusts the gallery&#39;s height to fit the content</p>\n",
                    "line": 121,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "autoplay",
                    "defaultValue": "this._gallery.config.autoplay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAutomatically cycle through items at time interval\n",
                    "description": "<p>Automatically cycle through items at time interval</p>\n",
                    "line": 126,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "autoplayInterval",
                    "defaultValue": "this._gallery.config.autoplayInterval",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets the interval used for the autoplay feature\n",
                    "description": "<p>Sets the interval used for the autoplay feature</p>\n",
                    "line": 181,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "bulletPosition",
                    "defaultValue": "this._gallery.config.bulletPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets the bullets navigation position\n",
                    "description": "<p>Sets the bullets navigation position</p>\n",
                    "line": 216,
                    "type": "\"top\" | \"bottom\"",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "bullets",
                    "defaultValue": "this._gallery.config.bullets",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDisplays the navigation bullets\n",
                    "description": "<p>Displays the navigation bullets</p>\n",
                    "line": 77,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "bulletSize",
                    "defaultValue": "this._gallery.config.bulletSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets the size of the bullets navigation\n",
                    "description": "<p>Sets the size of the bullets navigation</p>\n",
                    "line": 166,
                    "type": "number",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "counter",
                    "defaultValue": "this._gallery.config.counter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDisplays the counter or pagination\n",
                    "description": "<p>Displays the counter or pagination</p>\n",
                    "line": 97,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "counterPosition",
                    "defaultValue": "this._gallery.config.counterPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets the counter navigation position\n",
                    "description": "<p>Sets the counter navigation position</p>\n",
                    "line": 221,
                    "type": "\"top\" | \"bottom\"",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "debug",
                    "defaultValue": "this._gallery.config.debug",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nShow visuals that helps debugging the component\n",
                    "description": "<p>Show visuals that helps debugging the component</p>\n",
                    "line": 87,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "detachThumbs",
                    "defaultValue": "this._gallery.config.detachThumbs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDe-attaching the thumbnails from the main slider\nIf enabled - thumbnails won't automatically scroll to the active thumbnails\n",
                    "description": "<p>De-attaching the thumbnails from the main slider\nIf enabled - thumbnails won&#39;t automatically scroll to the active thumbnails</p>\n",
                    "line": 103,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "disableBullets",
                    "defaultValue": "this._gallery.config.disableBullets",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDisables bullets' clicks\n",
                    "description": "<p>Disables bullets&#39; clicks</p>\n",
                    "line": 136,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "disableMouseScroll",
                    "defaultValue": "this._gallery.config.disableMouseScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDisables sliding using the mouse\n",
                    "description": "<p>Disables sliding using the mouse</p>\n",
                    "line": 156,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "disableScroll",
                    "defaultValue": "this._gallery.config.disableScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDisables sliding using mousewheel, touchpad, scroll and gestures on touch devices\n",
                    "description": "<p>Disables sliding using mousewheel, touchpad, scroll and gestures on touch devices</p>\n",
                    "line": 141,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "disableThumbMouseScroll",
                    "defaultValue": "this._gallery.config.disableThumbMouseScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDisables sliding of thumbnails using the mouse\n",
                    "description": "<p>Disables sliding of thumbnails using the mouse</p>\n",
                    "line": 161,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "disableThumbs",
                    "defaultValue": "this._gallery.config.disableThumbs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDisables thumbnails' clicks\n",
                    "description": "<p>Disables thumbnails&#39; clicks</p>\n",
                    "line": 131,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "disableThumbScroll",
                    "defaultValue": "this._gallery.config.disableThumbScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDisables sliding of thumbnails using touchpad, scroll and gestures on touch devices\n",
                    "description": "<p>Disables sliding of thumbnails using touchpad, scroll and gestures on touch devices</p>\n",
                    "line": 146,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "'root'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe gallery instance unique id, required if more multiple gallery instances\n",
                    "description": "<p>The gallery instance unique id, required if more multiple gallery instances</p>\n",
                    "line": 62,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "imageSize",
                    "defaultValue": "this._gallery.config.imageSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets the object-fit style applied on items' images\n",
                    "description": "<p>Sets the object-fit style applied on items&#39; images</p>\n",
                    "line": 206,
                    "type": "\"cover\" | \"contain\"",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "itemAutosize",
                    "defaultValue": "this._gallery.config.itemAutosize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFits each item size to its content, This option should be used with:\n- Does not work if `autoHeight` is turned on\n- Does not work properly unless `loadingAttr=\"eager\"`\n- Does not work properly unless `loadingStrategy=\"preload\"`\n",
                    "description": "<p>Fits each item size to its content, This option should be used with:</p>\n<ul>\n<li>Does not work if <code>autoHeight</code> is turned on</li>\n<li>Does not work properly unless <code>loadingAttr=&quot;eager&quot;</code></li>\n<li>Does not work properly unless <code>loadingStrategy=&quot;preload&quot;</code></li>\n</ul>\n",
                    "line": 116,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLoads the items array into the gallery\n",
                    "description": "<p>Loads the items array into the gallery</p>\n",
                    "line": 67,
                    "type": "GalleryItem[]",
                    "decorators": []
                },
                {
                    "name": "loadingAttr",
                    "defaultValue": "this._gallery.config.loadingAttr",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets the loading attribute applied on the items' images\n",
                    "description": "<p>Sets the loading attribute applied on the items&#39; images</p>\n",
                    "line": 231,
                    "type": "\"eager\" | \"lazy\"",
                    "decorators": []
                },
                {
                    "name": "loadingStrategy",
                    "defaultValue": "this._gallery.config.loadingStrategy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets the loading strategy used for displaying the items\n- `lazy` renders only the active item\n- `default` renders only the active item, the previous item and the next item\n- `preload` renders all the items, this option is required for `thumbAutoSize` is enabled\n",
                    "description": "<p>Sets the loading strategy used for displaying the items</p>\n<ul>\n<li><code>lazy</code> renders only the active item</li>\n<li><code>default</code> renders only the active item, the previous item and the next item</li>\n<li><code>preload</code> renders all the items, this option is required for <code>thumbAutoSize</code> is enabled</li>\n</ul>\n",
                    "line": 239,
                    "type": "\"preload\" | \"lazy\" | \"default\"",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "loop",
                    "defaultValue": "this._gallery.config.loop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEnables loop cycling\n",
                    "description": "<p>Enables loop cycling</p>\n",
                    "line": 82,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "nav",
                    "defaultValue": "this._gallery.config.nav",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDisplays the navigation buttons\n",
                    "description": "<p>Displays the navigation buttons</p>\n",
                    "line": 72,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "orientation",
                    "defaultValue": "this._gallery.config.orientation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets the sliding direction\n",
                    "description": "<p>Sets the sliding direction</p>\n",
                    "line": 226,
                    "type": "\"horizontal\" | \"vertical\"",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "resizeDebounceTime",
                    "defaultValue": "this._gallery.config.resizeDebounceTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets the debounce time used to throttle the gallery update after it is resized\n",
                    "description": "<p>Sets the debounce time used to throttle the gallery update after it is resized</p>\n",
                    "line": 191,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "scrollBehavior",
                    "defaultValue": "this._gallery.config.scrollBehavior",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets the scroll behavior when the active item is changed\n",
                    "description": "<p>Sets the scroll behavior when the active item is changed</p>\n",
                    "line": 196,
                    "type": "ScrollBehavior",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "scrollDuration",
                    "defaultValue": "this._gallery.config.scrollDuration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets the duration used for smooth navigation between the items\n",
                    "description": "<p>Sets the duration used for smooth navigation between the items</p>\n",
                    "line": 186,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "scrollEase",
                    "defaultValue": "this._gallery.config.scrollEase",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets the ease function used for smooth navigation between the items\n",
                    "description": "<p>Sets the ease function used for smooth navigation between the items</p>\n",
                    "line": 201,
                    "type": "BezierEasingOptions",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "thumbAutosize",
                    "defaultValue": "this._gallery.config.thumbAutosize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFits each thumbnail size to its content\n",
                    "description": "<p>Fits each thumbnail size to its content</p>\n",
                    "line": 108,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "thumbCentralized",
                    "defaultValue": "this._gallery.config.thumbCentralized",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nForce centralizing the active thumbnail\n",
                    "description": "<p>Force centralizing the active thumbnail</p>\n",
                    "line": 151,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "thumbHeight",
                    "defaultValue": "this._gallery.config.thumbHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets the thumbnail's height\n",
                    "description": "<p>Sets the thumbnail&#39;s height</p>\n",
                    "line": 176,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "thumbImageSize",
                    "defaultValue": "this._gallery.config.thumbImageSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets the object-fit style applied on thumbnails' images\n",
                    "description": "<p>Sets the object-fit style applied on thumbnails&#39; images</p>\n",
                    "line": 211,
                    "type": "\"cover\" | \"contain\"",
                    "decorators": []
                },
                {
                    "name": "thumbPosition",
                    "defaultValue": "this._gallery.config.thumbPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets the thumbnails position, it also sets the sliding direction of the thumbnails accordingly\n",
                    "description": "<p>Sets the thumbnails position, it also sets the sliding direction of the thumbnails accordingly</p>\n",
                    "line": 244,
                    "type": "\"top\" | \"left\" | \"right\" | \"bottom\"",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "thumbs",
                    "defaultValue": "this._gallery.config.thumbs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDisplays the thumbnails\n",
                    "description": "<p>Displays the thumbnails</p>\n",
                    "line": 92,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "thumbWidth",
                    "defaultValue": "this._gallery.config.thumbWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets the thumbnail's width\n",
                    "description": "<p>Sets the thumbnail&#39;s width</p>\n",
                    "line": 171,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "error",
                    "defaultValue": "new EventEmitter<GalleryError>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nStream that emits when an error occurs, this would emit for loading errors of image and video items only\n",
                    "description": "<p>Stream that emits when an error occurs, this would emit for loading errors of image and video items only</p>\n",
                    "line": 288,
                    "type": "EventEmitter<GalleryError>"
                },
                {
                    "name": "indexChange",
                    "defaultValue": "new EventEmitter<GalleryState>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nStream that emits when index is changed\n",
                    "description": "<p>Stream that emits when index is changed</p>\n",
                    "line": 278,
                    "type": "EventEmitter<GalleryState>"
                },
                {
                    "name": "itemClick",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nStream that emits when an item is clicked\n",
                    "description": "<p>Stream that emits when an item is clicked</p>\n",
                    "line": 263,
                    "type": "EventEmitter<number>"
                },
                {
                    "name": "itemsChange",
                    "defaultValue": "new EventEmitter<GalleryState>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nStream that emits when items array is changed\n",
                    "description": "<p>Stream that emits when items array is changed</p>\n",
                    "line": 283,
                    "type": "EventEmitter<GalleryState>"
                },
                {
                    "name": "playingChange",
                    "defaultValue": "new EventEmitter<GalleryState>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nStream that emits when player state is changed\n",
                    "description": "<p>Stream that emits when player state is changed</p>\n",
                    "line": 273,
                    "type": "EventEmitter<GalleryState>"
                },
                {
                    "name": "thumbClick",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nStream that emits when a thumbnail is clicked\n",
                    "description": "<p>Stream that emits when a thumbnail is clicked</p>\n",
                    "line": 268,
                    "type": "EventEmitter<number>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "galleryRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GalleryRef",
                    "optional": false,
                    "description": "<p>The gallery reference instance</p>\n",
                    "line": 57,
                    "rawdescription": "\n\nThe gallery reference instance\n"
                }
            ],
            "methodsClass": [
                {
                    "name": "add",
                    "args": [
                        {
                            "name": "item",
                            "type": "GalleryItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "active",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 451,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdd gallery item, it can be any item, suitable to add item with a custom template\n",
                    "description": "<p>Add gallery item, it can be any item, suitable to add item with a custom template</p>\n",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "GalleryItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "active",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addIframe",
                    "args": [
                        {
                            "name": "data",
                            "type": "IframeItemData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "active",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 472,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdd iframe item\n",
                    "description": "<p>Add iframe item</p>\n",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "IframeItemData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "active",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addImage",
                    "args": [
                        {
                            "name": "data",
                            "type": "ImageItemData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "active",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 458,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdd image item\n",
                    "description": "<p>Add image item</p>\n",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "ImageItemData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "active",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addVideo",
                    "args": [
                        {
                            "name": "data",
                            "type": "VideoItemData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "active",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 465,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdd video item\n",
                    "description": "<p>Add video item</p>\n",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "VideoItemData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "active",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addYoutube",
                    "args": [
                        {
                            "name": "data",
                            "type": "YoutubeItemData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "active",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 479,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdd Youtube item\n",
                    "description": "<p>Add Youtube item</p>\n",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "YoutubeItemData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "active",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "load",
                    "args": [
                        {
                            "name": "items",
                            "type": "GalleryItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 444,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLoad items and reset the state\n",
                    "description": "<p>Load items and reset the state</p>\n",
                    "jsdoctags": [
                        {
                            "name": "items",
                            "type": "GalleryItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "next",
                    "args": [
                        {
                            "name": "behavior",
                            "type": "ScrollBehavior",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "loop",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 493,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGo to next item\n",
                    "description": "<p>Go to next item</p>\n",
                    "jsdoctags": [
                        {
                            "name": "behavior",
                            "type": "ScrollBehavior",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "loop",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "play",
                    "args": [
                        {
                            "name": "interval",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 521,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nStart the player\n",
                    "description": "<p>Start the player</p>\n",
                    "jsdoctags": [
                        {
                            "name": "interval",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "prev",
                    "args": [
                        {
                            "name": "behavior",
                            "type": "ScrollBehavior",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "loop",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 500,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGo to prev item\n",
                    "description": "<p>Go to prev item</p>\n",
                    "jsdoctags": [
                        {
                            "name": "behavior",
                            "type": "ScrollBehavior",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "loop",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "remove",
                    "args": [
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 486,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRemove gallery item by index\n",
                    "description": "<p>Remove gallery item by index</p>\n",
                    "jsdoctags": [
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 514,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset to initial state\n",
                    "description": "<p>Reset to initial state</p>\n"
                },
                {
                    "name": "set",
                    "args": [
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "behavior",
                            "type": "ScrollBehavior",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 507,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSet active item\n",
                    "description": "<p>Set active item</p>\n",
                    "jsdoctags": [
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "behavior",
                            "type": "ScrollBehavior",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "stop",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 528,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nStop the player\n",
                    "description": "<p>Stop the player</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "GalleryCoreComponent",
                    "type": "component"
                },
                {
                    "name": "AutoplayDirective",
                    "type": "directive"
                }
            ],
            "description": "<p>Gallery component</p>\n",
            "rawdescription": "\n\nGallery component\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  ContentChild,\r\n  booleanAttribute,\r\n  numberAttribute,\r\n  EventEmitter,\r\n  OnInit,\r\n  AfterContentInit,\r\n  OnChanges,\r\n  OnDestroy,\r\n  SimpleChanges,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Subscription } from 'rxjs';\r\nimport { GalleryCoreComponent } from './gallery-core.component';\r\nimport { Gallery } from '../services/gallery.service';\r\nimport { GalleryRef } from '../services/gallery-ref';\r\nimport { GalleryError, GalleryItem, GalleryState } from '../models/gallery.model';\r\nimport { IframeItemData, ImageItemData, VideoItemData, YoutubeItemData } from './templates/items.model';\r\nimport { GalleryConfig } from '../models/config.model';\r\nimport { BezierEasingOptions } from '../smooth-scroll';\r\nimport { GalleryImageDef } from '../directives/gallery-image-def.directive';\r\nimport { GalleryThumbDef } from '../directives/gallery-thumb-def.directive';\r\nimport { GalleryItemDef } from '../directives/gallery-item-def.directive';\r\nimport { GalleryBoxDef } from '../directives/gallery-box-def.directive';\r\nimport { ImgManager } from '../utils/img-manager';\r\nimport { AutoplayDirective } from '../autoplay/autoplay.directive';\r\n\r\n/**\r\n * Gallery component\r\n */\r\n@Component({\r\n  selector: 'gallery',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['./gallery.scss'],\r\n  template: `\r\n    <gallery-core autoplay\r\n                  [galleryId]=\"id\"\r\n                  [state]=\"galleryRef.state | async\"\r\n                  [config]=\"galleryRef.config | async\"\r\n                  (itemClick)=\"onItemClick($event)\"\r\n                  (thumbClick)=\"onThumbClick($event)\"\r\n                  (error)=\"onError($event)\"/>\r\n  `,\r\n  standalone: true,\r\n  imports: [CommonModule, GalleryCoreComponent, AutoplayDirective],\r\n  providers: [ImgManager]\r\n})\r\nexport class GalleryComponent implements OnInit, AfterContentInit, OnChanges, OnDestroy {\r\n\r\n  /**\r\n   * The gallery reference instance\r\n   */\r\n  galleryRef: GalleryRef;\r\n\r\n  /**\r\n   * The gallery instance unique id, required if more multiple gallery instances\r\n   */\r\n  @Input() id: string = 'root';\r\n\r\n  /**\r\n   * Loads the items array into the gallery\r\n   */\r\n  @Input() items: GalleryItem [];\r\n\r\n  /**\r\n   * Displays the navigation buttons\r\n   */\r\n  @Input({ transform: booleanAttribute }) nav: boolean = this._gallery.config.nav;\r\n\r\n  /**\r\n   * Displays the navigation bullets\r\n   */\r\n  @Input({ transform: booleanAttribute }) bullets: boolean = this._gallery.config.bullets;\r\n\r\n  /**\r\n   * Enables loop cycling\r\n   */\r\n  @Input({ transform: booleanAttribute }) loop: boolean = this._gallery.config.loop;\r\n\r\n  /**\r\n   * Show visuals that helps debugging the component\r\n   */\r\n  @Input({ transform: booleanAttribute }) debug: boolean = this._gallery.config.debug;\r\n\r\n  /**\r\n   * Displays the thumbnails\r\n   */\r\n  @Input({ transform: booleanAttribute }) thumbs: boolean = this._gallery.config.thumbs;\r\n\r\n  /**\r\n   * Displays the counter or pagination\r\n   */\r\n  @Input({ transform: booleanAttribute }) counter: boolean = this._gallery.config.counter;\r\n\r\n  /**\r\n   * De-attaching the thumbnails from the main slider\r\n   * If enabled - thumbnails won't automatically scroll to the active thumbnails\r\n   */\r\n  @Input({ transform: booleanAttribute }) detachThumbs: boolean = this._gallery.config.detachThumbs;\r\n\r\n  /**\r\n   * Fits each thumbnail size to its content\r\n   */\r\n  @Input({ transform: booleanAttribute }) thumbAutosize: boolean = this._gallery.config.thumbAutosize;\r\n\r\n  /**\r\n   * Fits each item size to its content, This option should be used with:\r\n   * - Does not work if `autoHeight` is turned on\r\n   * - Does not work properly unless `loadingAttr=\"eager\"`\r\n   * - Does not work properly unless `loadingStrategy=\"preload\"`\r\n   */\r\n  @Input({ transform: booleanAttribute }) itemAutosize: boolean = this._gallery.config.itemAutosize;\r\n\r\n  /**\r\n   * Automatically adjusts the gallery's height to fit the content\r\n   */\r\n  @Input({ transform: booleanAttribute }) autoHeight: boolean = this._gallery.config.autoHeight;\r\n\r\n  /**\r\n   * Automatically cycle through items at time interval\r\n   */\r\n  @Input({ transform: booleanAttribute }) autoplay: boolean = this._gallery.config.autoplay;\r\n\r\n  /**\r\n   * Disables thumbnails' clicks\r\n   */\r\n  @Input({ transform: booleanAttribute }) disableThumbs: boolean = this._gallery.config.disableThumbs;\r\n\r\n  /**\r\n   * Disables bullets' clicks\r\n   */\r\n  @Input({ transform: booleanAttribute }) disableBullets: boolean = this._gallery.config.disableBullets;\r\n\r\n  /**\r\n   * Disables sliding using mousewheel, touchpad, scroll and gestures on touch devices\r\n   */\r\n  @Input({ transform: booleanAttribute }) disableScroll: boolean = this._gallery.config.disableScroll;\r\n\r\n  /**\r\n   * Disables sliding of thumbnails using touchpad, scroll and gestures on touch devices\r\n   */\r\n  @Input({ transform: booleanAttribute }) disableThumbScroll: boolean = this._gallery.config.disableThumbScroll;\r\n\r\n  /**\r\n   * Force centralizing the active thumbnail\r\n   */\r\n  @Input({ transform: booleanAttribute }) thumbCentralized: boolean = this._gallery.config.thumbCentralized;\r\n\r\n  /**\r\n   * Disables sliding using the mouse\r\n   */\r\n  @Input({ transform: booleanAttribute }) disableMouseScroll: boolean = this._gallery.config.disableMouseScroll;\r\n\r\n  /**\r\n   * Disables sliding of thumbnails using the mouse\r\n   */\r\n  @Input({ transform: booleanAttribute }) disableThumbMouseScroll: boolean = this._gallery.config.disableThumbMouseScroll;\r\n\r\n  /**\r\n   * Sets the size of the bullets navigation\r\n   */\r\n  @Input({ transform: numberAttribute }) bulletSize: number = this._gallery.config.bulletSize;\r\n\r\n  /**\r\n   * Sets the thumbnail's width\r\n   */\r\n  @Input({ transform: numberAttribute }) thumbWidth: number = this._gallery.config.thumbWidth;\r\n\r\n  /**\r\n   * Sets the thumbnail's height\r\n   */\r\n  @Input({ transform: numberAttribute }) thumbHeight: number = this._gallery.config.thumbHeight;\r\n\r\n  /**\r\n   * Sets the interval used for the autoplay feature\r\n   */\r\n  @Input({ transform: numberAttribute }) autoplayInterval: number = this._gallery.config.autoplayInterval;\r\n\r\n  /**\r\n   * Sets the duration used for smooth navigation between the items\r\n   */\r\n  @Input({ transform: numberAttribute }) scrollDuration: number = this._gallery.config.scrollDuration;\r\n\r\n  /**\r\n   * Sets the debounce time used to throttle the gallery update after it is resized\r\n   */\r\n  @Input({ transform: numberAttribute }) resizeDebounceTime: number = this._gallery.config.resizeDebounceTime;\r\n\r\n  /**\r\n   * Sets the scroll behavior when the active item is changed\r\n   */\r\n  @Input() scrollBehavior: ScrollBehavior = this._gallery.config.scrollBehavior;\r\n\r\n  /**\r\n   * Sets the ease function used for smooth navigation between the items\r\n   */\r\n  @Input() scrollEase: BezierEasingOptions = this._gallery.config.scrollEase;\r\n\r\n  /**\r\n   * Sets the object-fit style applied on items' images\r\n   */\r\n  @Input() imageSize: 'cover' | 'contain' = this._gallery.config.imageSize;\r\n\r\n  /**\r\n   * Sets the object-fit style applied on thumbnails' images\r\n   */\r\n  @Input() thumbImageSize: 'cover' | 'contain' = this._gallery.config.thumbImageSize;\r\n\r\n  /**\r\n   * Sets the bullets navigation position\r\n   */\r\n  @Input() bulletPosition: 'top' | 'bottom' = this._gallery.config.bulletPosition;\r\n\r\n  /**\r\n   * Sets the counter navigation position\r\n   */\r\n  @Input() counterPosition: 'top' | 'bottom' = this._gallery.config.counterPosition;\r\n\r\n  /**\r\n   * Sets the sliding direction\r\n   */\r\n  @Input() orientation: 'horizontal' | 'vertical' = this._gallery.config.orientation;\r\n\r\n  /**\r\n   * Sets the loading attribute applied on the items' images\r\n   */\r\n  @Input() loadingAttr: 'eager' | 'lazy' = this._gallery.config.loadingAttr;\r\n\r\n  /**\r\n   * Sets the loading strategy used for displaying the items\r\n   * - `lazy` renders only the active item\r\n   * - `default` renders only the active item, the previous item and the next item\r\n   * - `preload` renders all the items, this option is required for `thumbAutoSize` is enabled\r\n   */\r\n  @Input() loadingStrategy: 'preload' | 'lazy' | 'default' = this._gallery.config.loadingStrategy;\r\n\r\n  /**\r\n   * Sets the thumbnails position, it also sets the sliding direction of the thumbnails accordingly\r\n   */\r\n  @Input() thumbPosition: 'top' | 'left' | 'right' | 'bottom' = this._gallery.config.thumbPosition;\r\n\r\n  /**\r\n   * Destroy gallery ref on component destroy event\r\n   * This intended to be used and disabled from the lightbox component\r\n   * @ignore\r\n   * */\r\n  @Input() destroyRef: boolean = true;\r\n\r\n  /**\r\n   * Skip initializing the config with components inputs (Lightbox mode)\r\n   * This intended to be used and enabled from the lightbox component\r\n   * @ignore\r\n   */\r\n  @Input() skipInitConfig: boolean = false;\r\n\r\n  /**\r\n   * Stream that emits when an item is clicked\r\n   */\r\n  @Output() itemClick: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  /**\r\n   * Stream that emits when a thumbnail is clicked\r\n   */\r\n  @Output() thumbClick: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  /**\r\n   * Stream that emits when player state is changed\r\n   */\r\n  @Output() playingChange: EventEmitter<GalleryState> = new EventEmitter<GalleryState>();\r\n\r\n  /**\r\n   * Stream that emits when index is changed\r\n   */\r\n  @Output() indexChange: EventEmitter<GalleryState> = new EventEmitter<GalleryState>();\r\n\r\n  /**\r\n   * Stream that emits when items array is changed\r\n   */\r\n  @Output() itemsChange: EventEmitter<GalleryState> = new EventEmitter<GalleryState>();\r\n\r\n  /**\r\n   * Stream that emits when an error occurs, this would emit for loading errors of image and video items only\r\n   */\r\n  @Output() error: EventEmitter<GalleryError> = new EventEmitter<GalleryError>();\r\n\r\n  /** @ignore */\r\n  @ContentChild(GalleryItemDef) private _galleryItemDef: GalleryItemDef;\r\n  /** @ignore */\r\n  @ContentChild(GalleryImageDef) private _galleryImageDef: GalleryImageDef;\r\n  /** @ignore */\r\n  @ContentChild(GalleryThumbDef) private _galleryThumbDef: GalleryThumbDef;\r\n  /** @ignore */\r\n  @ContentChild(GalleryBoxDef) private _galleryBoxDef: GalleryBoxDef;\r\n\r\n  /** @ignore */\r\n  private _itemClick$: Subscription;\r\n  /** @ignore */\r\n  private _thumbClick$: Subscription;\r\n  /** @ignore */\r\n  private _itemChange$: Subscription;\r\n  /** @ignore */\r\n  private _indexChange$: Subscription;\r\n  /** @ignore */\r\n  private _playingChange$: Subscription;\r\n\r\n  constructor(private _gallery: Gallery) {\r\n  }\r\n\r\n  /** @ignore */\r\n  private getConfig(): GalleryConfig {\r\n    return {\r\n      nav: this.nav,\r\n      bullets: this.bullets,\r\n      loop: this.loop,\r\n      debug: this.debug,\r\n      thumbs: this.thumbs,\r\n      counter: this.counter,\r\n      autoplay: this.autoplay,\r\n      bulletSize: this.bulletSize,\r\n      imageSize: this.imageSize,\r\n      thumbImageSize: this.thumbImageSize,\r\n      scrollBehavior: this.scrollBehavior,\r\n      thumbCentralized: this.thumbCentralized,\r\n      thumbWidth: this.thumbWidth,\r\n      thumbHeight: this.thumbHeight,\r\n      scrollEase: this.scrollEase,\r\n      bulletPosition: this.bulletPosition,\r\n      loadingAttr: this.loadingAttr,\r\n      detachThumbs: this.detachThumbs,\r\n      thumbPosition: this.thumbPosition,\r\n      autoplayInterval: this.autoplayInterval,\r\n      counterPosition: this.counterPosition,\r\n      loadingStrategy: this.loadingStrategy,\r\n      scrollDuration: this.scrollDuration,\r\n      orientation: this.orientation,\r\n      resizeDebounceTime: this.resizeDebounceTime,\r\n      disableBullets: this.disableBullets,\r\n      disableThumbs: this.disableThumbs,\r\n      disableScroll: this.disableScroll,\r\n      disableThumbScroll: this.disableThumbScroll,\r\n      disableMouseScroll: this.disableMouseScroll,\r\n      disableThumbMouseScroll: this.disableThumbMouseScroll,\r\n      thumbAutosize: this.thumbAutosize,\r\n      itemAutosize: this.itemAutosize,\r\n      autoHeight: this.autoHeight\r\n    };\r\n  }\r\n\r\n\r\n  /** @ignore */\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (this.galleryRef) {\r\n      this.galleryRef.setConfig(this.getConfig());\r\n\r\n      if (changes.items && changes.items.currentValue !== changes.items.previousValue) {\r\n        this.load(this.items);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /** @ignore */\r\n  ngOnInit(): void {\r\n    // Get gallery instance by id\r\n    if (this.skipInitConfig) {\r\n      this.galleryRef = this._gallery.ref(this.id);\r\n    } else {\r\n      this.galleryRef = this._gallery.ref(this.id, this.getConfig());\r\n    }\r\n\r\n    // Load gallery items\r\n    this.load(this.items);\r\n\r\n    // Subscribes to events on demand\r\n    if (this.indexChange.observed) {\r\n      this._indexChange$ = this.galleryRef.indexChanged.subscribe((state: GalleryState) => this.indexChange.emit(state));\r\n    }\r\n    if (this.itemsChange.observed) {\r\n      this._itemChange$ = this.galleryRef.itemsChanged.subscribe((state: GalleryState) => this.itemsChange.emit(state));\r\n    }\r\n    if (this.playingChange.observed) {\r\n      this._playingChange$ = this.galleryRef.playingChanged.subscribe((state: GalleryState) => this.playingChange.emit(state));\r\n    }\r\n  }\r\n\r\n  /** @ignore */\r\n  ngAfterContentInit(): void {\r\n    const templateConfig: GalleryConfig = {};\r\n    if (this._galleryItemDef) {\r\n      templateConfig.itemTemplate = this._galleryItemDef.templateRef;\r\n    }\r\n    if (this._galleryImageDef) {\r\n      templateConfig.imageTemplate = this._galleryImageDef.templateRef;\r\n    }\r\n    if (this._galleryThumbDef) {\r\n      templateConfig.thumbTemplate = this._galleryThumbDef.templateRef;\r\n    }\r\n    if (this._galleryBoxDef) {\r\n      templateConfig.boxTemplate = this._galleryBoxDef.templateRef;\r\n    }\r\n    if (Object.keys(templateConfig).length) {\r\n      this.galleryRef.setConfig(templateConfig);\r\n    }\r\n  }\r\n\r\n  /** @ignore */\r\n  ngOnDestroy(): void {\r\n    this._itemClick$?.unsubscribe();\r\n    this._thumbClick$?.unsubscribe();\r\n    this._itemChange$?.unsubscribe();\r\n    this._indexChange$?.unsubscribe();\r\n    this._playingChange$?.unsubscribe();\r\n    if (this.destroyRef) {\r\n      this.galleryRef?.destroy();\r\n    }\r\n  }\r\n\r\n  /** @ignore */\r\n  onItemClick(i: number): void {\r\n    this.itemClick.emit(i);\r\n    this.galleryRef.itemClick.next(i);\r\n  }\r\n\r\n  /** @ignore */\r\n  onThumbClick(i: number): void {\r\n    this.galleryRef.set(i);\r\n    this.thumbClick.emit(i);\r\n    this.galleryRef.thumbClick.next(i);\r\n  }\r\n\r\n  /** @ignore */\r\n  onError(err: GalleryError): void {\r\n    this.error.emit(err);\r\n    this.galleryRef.error.next(err);\r\n  }\r\n\r\n  /**\r\n   * Load items and reset the state\r\n   */\r\n  load(items: GalleryItem[]): void {\r\n    this.galleryRef.load(items);\r\n  }\r\n\r\n  /**\r\n   * Add gallery item, it can be any item, suitable to add item with a custom template\r\n   */\r\n  add(item: GalleryItem, active?: boolean): void {\r\n    this.galleryRef.add(item, active);\r\n  }\r\n\r\n  /**\r\n   * Add image item\r\n   */\r\n  addImage(data: ImageItemData, active?: boolean): void {\r\n    this.galleryRef.addImage(data, active);\r\n  }\r\n\r\n  /**\r\n   * Add video item\r\n   */\r\n  addVideo(data: VideoItemData, active?: boolean): void {\r\n    this.galleryRef.addVideo(data, active);\r\n  }\r\n\r\n  /**\r\n   * Add iframe item\r\n   */\r\n  addIframe(data: IframeItemData, active?: boolean): void {\r\n    this.galleryRef.addIframe(data, active);\r\n  }\r\n\r\n  /**\r\n   * Add Youtube item\r\n   */\r\n  addYoutube(data: YoutubeItemData, active?: boolean): void {\r\n    this.galleryRef.addYoutube(data, active);\r\n  }\r\n\r\n  /**\r\n   * Remove gallery item by index\r\n   */\r\n  remove(i: number): void {\r\n    this.galleryRef.remove(i);\r\n  }\r\n\r\n  /**\r\n   * Go to next item\r\n   */\r\n  next(behavior?: ScrollBehavior, loop?: boolean): void {\r\n    this.galleryRef.next(behavior, loop);\r\n  }\r\n\r\n  /**\r\n   * Go to prev item\r\n   */\r\n  prev(behavior?: ScrollBehavior, loop?: boolean): void {\r\n    this.galleryRef.prev(behavior, loop);\r\n  }\r\n\r\n  /**\r\n   * Set active item\r\n   */\r\n  set(i: number, behavior?: ScrollBehavior): void {\r\n    this.galleryRef.set(i, behavior);\r\n  }\r\n\r\n  /**\r\n   * Reset to initial state\r\n   */\r\n  reset(): void {\r\n    this.galleryRef.reset();\r\n  }\r\n\r\n  /**\r\n   * Start the player\r\n   */\r\n  play(interval?: number): void {\r\n    this.galleryRef.play(interval);\r\n  }\r\n\r\n  /**\r\n   * Stop the player\r\n   */\r\n  stop(): void {\r\n    this.galleryRef.stop();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  position: relative;\r\n  overflow: hidden;\r\n  z-index: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: black;\r\n\r\n  --g-height-transition: height 468ms cubic-bezier(0.42, 0, 0.58, 1);\r\n  --g-nav-drop-shadow: drop-shadow(0 0 2px rgba(0, 0, 0, 0.6));\r\n  --g-box-shadow: 0 0 3px rgba(0, 0, 0, 0.6);\r\n  --g-font-color: #000;\r\n  --g-overlay-color: #fff;\r\n  --g-gutter-size: 1px;\r\n\r\n  &[gallerize] {\r\n    --g-item-cursor: pointer;\r\n  }\r\n}\r\n",
                    "styleUrl": "./gallery.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_gallery",
                        "type": "Gallery",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 308,
                "jsdoctags": [
                    {
                        "name": "_gallery",
                        "type": "Gallery",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterContentInit",
                "OnChanges",
                "OnDestroy"
            ]
        },
        {
            "name": "GalleryCoreComponent",
            "id": "component-GalleryCoreComponent-514605865ce30ecc993dd769363ed85b2b4a73ad2e35e255bc6bf494a7fd417d17686b154afdb47ec6e1e2bfd947a7bf4bc8f1e5bbe16561c1540101ac9d6de1",
            "file": "projects/ng-gallery/src/lib/components/gallery-core.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gallery-core",
            "styleUrls": [
                "./gallery-core.scss",
                "../styles/debug.scss"
            ],
            "styles": [],
            "template": "<gallery-thumbs *ngIf=\"config.thumbs\"\n                [state]=\"state\"\n                [config]=\"config\"\n                [galleryId]=\"galleryId\"\n                (thumbClick)=\"thumbClick.emit($event)\"\n                (error)=\"error.emit($event)\"/>\n\n<div class=\"g-box\">\n  <gallery-slider [class.g-debug]=\"config.debug\"\n                  [state]=\"state\"\n                  [config]=\"config\"\n                  [galleryId]=\"galleryId\"\n                  (itemClick)=\"itemClick.emit($event)\"\n                  (error)=\"error.emit($event)\">\n\n    <gallery-nav *ngIf=\"config.nav && state.items.length > 1\"\n                 [state]=\"state\"\n                 [config]=\"config\"\n                 [galleryId]=\"galleryId\"/>\n\n  </gallery-slider>\n\n  <gallery-bullets *ngIf=\"config.bullets\"\n                   [state]=\"state\"\n                   [config]=\"config\"\n                   [galleryId]=\"galleryId\"/>\n\n  <gallery-counter *ngIf=\"config.counter\"\n                   [state]=\"state\"/>\n\n  <div class=\"g-box-template\">\n    <ng-container\n      *ngTemplateOutlet=\"config.boxTemplate; context: { state: state, config: config }\"></ng-container>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "GalleryConfig",
                    "decorators": []
                },
                {
                    "name": "galleryId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "GalleryState",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "error",
                    "defaultValue": "new EventEmitter<GalleryError>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter<GalleryError>"
                },
                {
                    "name": "itemClick",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter<number>"
                },
                {
                    "name": "thumbClick",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "EventEmitter<number>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 154,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "attr.autoHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSet gallery autoHeight styles",
                    "description": "<p>Set gallery autoHeight styles</p>\n",
                    "line": 132,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "attr.bulletDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSet bullets' clicks",
                    "description": "<p>Set bullets&#39; clicks</p>\n",
                    "line": 92,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "attr.bulletPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSet gallery bullets position",
                    "description": "<p>Set gallery bullets position</p>\n",
                    "line": 97,
                    "type": "\"top\" | \"bottom\"",
                    "decorators": []
                },
                {
                    "name": "attr.counterPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSet gallery counter position",
                    "description": "<p>Set gallery counter position</p>\n",
                    "line": 112,
                    "type": "\"top\" | \"bottom\"",
                    "decorators": []
                },
                {
                    "name": "attr.debug",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSet debug style",
                    "description": "<p>Set debug style</p>\n",
                    "line": 147,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "attr.dir",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSet direction",
                    "description": "<p>Set direction</p>\n",
                    "line": 142,
                    "type": "Direction",
                    "decorators": []
                },
                {
                    "name": "attr.imageSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSet gallery image size property",
                    "description": "<p>Set gallery image size property</p>\n",
                    "line": 102,
                    "type": "\"cover\" | \"contain\"",
                    "decorators": []
                },
                {
                    "name": "attr.itemAutosize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSet items autosize styles",
                    "description": "<p>Set items autosize styles</p>\n",
                    "line": 127,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "attr.orientation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSet sliding direction",
                    "description": "<p>Set sliding direction</p>\n",
                    "line": 82,
                    "type": "\"horizontal\" | \"vertical\"",
                    "decorators": []
                },
                {
                    "name": "attr.scrollDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nDisable sliding using sliding via touchpad, mousewheel and gestures",
                    "description": "<p>Disable sliding using sliding via touchpad, mousewheel and gestures</p>\n",
                    "line": 117,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "attr.thumbAutosize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSet gallery thumb autosize styles",
                    "description": "<p>Set gallery thumb autosize styles</p>\n",
                    "line": 137,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "attr.thumbDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nDisable thumbnails' clicks",
                    "description": "<p>Disable thumbnails&#39; clicks</p>\n",
                    "line": 87,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "attr.thumbImageSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSet gallery thumb image size property",
                    "description": "<p>Set gallery thumb image size property</p>\n",
                    "line": 107,
                    "type": "\"contain\" | \"cover\"",
                    "decorators": []
                },
                {
                    "name": "attr.thumbPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSet thumbnails position",
                    "description": "<p>Set thumbnails position</p>\n",
                    "line": 77,
                    "type": "\"top\" | \"left\" | \"right\" | \"bottom\"",
                    "decorators": []
                },
                {
                    "name": "attr.thumbScrollDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nDisable thumb sliding using sliding via touchpad, mousewheel and gestures",
                    "description": "<p>Disable thumb sliding using sliding via touchpad, mousewheel and gestures</p>\n",
                    "line": 122,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "GalleryThumbsComponent",
                    "type": "component"
                },
                {
                    "name": "GallerySliderComponent",
                    "type": "component"
                },
                {
                    "name": "GalleryNavComponent",
                    "type": "component"
                },
                {
                    "name": "GalleryBulletsComponent",
                    "type": "component"
                },
                {
                    "name": "GalleryCounterComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  HostBinding,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ElementRef,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { coerceCssPixelValue } from '@angular/cdk/coercion';\r\nimport { Direction, Directionality } from '@angular/cdk/bidi';\r\nimport { GalleryCounterComponent } from './gallery-counter.component';\r\nimport { GalleryBulletsComponent } from './gallery-bullets.component';\r\nimport { GalleryNavComponent } from './gallery-nav.component';\r\nimport { GallerySliderComponent } from './gallery-slider.component';\r\nimport { GalleryThumbsComponent } from './gallery-thumbs.component';\r\nimport { GalleryError, GalleryState } from '../models/gallery.model';\r\nimport { GalleryConfig } from '../models/config.model';\r\n\r\n@Component({\r\n  selector: 'gallery-core',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['./gallery-core.scss', '../styles/debug.scss'],\r\n  template: `\r\n    <gallery-thumbs *ngIf=\"config.thumbs\"\r\n                    [state]=\"state\"\r\n                    [config]=\"config\"\r\n                    [galleryId]=\"galleryId\"\r\n                    (thumbClick)=\"thumbClick.emit($event)\"\r\n                    (error)=\"error.emit($event)\"/>\r\n\r\n    <div class=\"g-box\">\r\n      <gallery-slider [class.g-debug]=\"config.debug\"\r\n                      [state]=\"state\"\r\n                      [config]=\"config\"\r\n                      [galleryId]=\"galleryId\"\r\n                      (itemClick)=\"itemClick.emit($event)\"\r\n                      (error)=\"error.emit($event)\">\r\n\r\n        <gallery-nav *ngIf=\"config.nav && state.items.length > 1\"\r\n                     [state]=\"state\"\r\n                     [config]=\"config\"\r\n                     [galleryId]=\"galleryId\"/>\r\n\r\n      </gallery-slider>\r\n\r\n      <gallery-bullets *ngIf=\"config.bullets\"\r\n                       [state]=\"state\"\r\n                       [config]=\"config\"\r\n                       [galleryId]=\"galleryId\"/>\r\n\r\n      <gallery-counter *ngIf=\"config.counter\"\r\n                       [state]=\"state\"/>\r\n\r\n      <div class=\"g-box-template\">\r\n        <ng-container\r\n          *ngTemplateOutlet=\"config.boxTemplate; context: { state: state, config: config }\"></ng-container>\r\n      </div>\r\n    </div>\r\n  `,\r\n  standalone: true,\r\n  imports: [CommonModule, GalleryThumbsComponent, GallerySliderComponent, GalleryNavComponent, GalleryBulletsComponent, GalleryCounterComponent]\r\n})\r\nexport class GalleryCoreComponent implements OnChanges {\r\n\r\n  @Input() galleryId: string;\r\n  @Input() state: GalleryState;\r\n  @Input() config: GalleryConfig;\r\n  @Output() itemClick: EventEmitter<number> = new EventEmitter<number>();\r\n  @Output() thumbClick: EventEmitter<number> = new EventEmitter<number>();\r\n  @Output() error: EventEmitter<GalleryError> = new EventEmitter<GalleryError>();\r\n\r\n  /** Set thumbnails position */\r\n  @HostBinding('attr.thumbPosition') get thumbPosition(): 'top' | 'left' | 'right' | 'bottom' {\r\n    return this.config.thumbPosition;\r\n  }\r\n\r\n  /** Set sliding direction */\r\n  @HostBinding('attr.orientation') get orientation(): 'horizontal' | 'vertical' {\r\n    return this.config.orientation;\r\n  }\r\n\r\n  /** Disable thumbnails' clicks */\r\n  @HostBinding('attr.thumbDisabled') get disableThumb(): boolean {\r\n    return this.config.disableThumbs;\r\n  }\r\n\r\n  /** Set bullets' clicks */\r\n  @HostBinding('attr.bulletDisabled') get bulletDisabled(): boolean {\r\n    return this.config.disableBullets;\r\n  }\r\n\r\n  /** Set gallery bullets position */\r\n  @HostBinding('attr.bulletPosition') get bulletPosition(): 'top' | 'bottom' {\r\n    return this.config.bulletPosition;\r\n  }\r\n\r\n  /** Set gallery image size property */\r\n  @HostBinding('attr.imageSize') get imageSize(): 'cover' | 'contain' {\r\n    return this.config.imageSize;\r\n  }\r\n\r\n  /** Set gallery thumb image size property */\r\n  @HostBinding('attr.thumbImageSize') get thumbImageSize(): 'contain' | 'cover' {\r\n    return this.config.thumbImageSize;\r\n  }\r\n\r\n  /** Set gallery counter position */\r\n  @HostBinding('attr.counterPosition') get counterPosition(): 'top' | 'bottom' {\r\n    return this.config.counterPosition;\r\n  }\r\n\r\n  /** Disable sliding using sliding via touchpad, mousewheel and gestures */\r\n  @HostBinding('attr.scrollDisabled') get scrollDisabled(): boolean {\r\n    return this.config.disableScroll;\r\n  }\r\n\r\n  /** Disable thumb sliding using sliding via touchpad, mousewheel and gestures */\r\n  @HostBinding('attr.thumbScrollDisabled') get thumbScrollDisabled(): boolean {\r\n    return this.config.disableThumbScroll;\r\n  }\r\n\r\n  /** Set items autosize styles  */\r\n  @HostBinding('attr.itemAutosize') get itemAutosize(): boolean {\r\n    return this.config.itemAutosize;\r\n  }\r\n\r\n  /** Set gallery autoHeight styles  */\r\n  @HostBinding('attr.autoHeight') get autoHeight(): boolean {\r\n    return this.config.autoHeight;\r\n  }\r\n\r\n  /** Set gallery thumb autosize styles  */\r\n  @HostBinding('attr.thumbAutosize') get thumbAutosize(): boolean {\r\n    return this.config.thumbAutosize;\r\n  }\r\n\r\n  /** Set direction  */\r\n  @HostBinding('attr.dir') get direction(): Direction {\r\n    return this.dir.value;\r\n  }\r\n\r\n  /** Set debug style  */\r\n  @HostBinding('attr.debug') get debug(): boolean {\r\n    return this.config.debug;\r\n  }\r\n\r\n  constructor(private el: ElementRef<HTMLElement>, private dir: Directionality) {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.config) {\r\n      if (changes.config.currentValue?.thumbWidth !== changes.config.previousValue?.thumbWidth) {\r\n        this.el.nativeElement.style.setProperty('--g-thumb-width', coerceCssPixelValue(changes.config.currentValue.thumbWidth));\r\n      }\r\n      if (changes.config.currentValue?.thumbHeight !== changes.config.previousValue?.thumbHeight) {\r\n        this.el.nativeElement.style.setProperty('--g-thumb-height', coerceCssPixelValue(changes.config.currentValue.thumbHeight));\r\n      }\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  position: relative;\r\n  overflow: hidden;\r\n  display: flex;\r\n  gap: var(--g-gutter-size);\r\n  width: 100%;\r\n  height: 500px;\r\n  min-height: 100%;\r\n  max-height: 100%;\r\n\r\n  &[thumbPosition='top'] {\r\n    flex-direction: column;\r\n  }\r\n\r\n  &[thumbPosition='left'] {\r\n    flex-direction: row;\r\n  }\r\n\r\n  &[thumbPosition='right'] {\r\n    flex-direction: row-reverse;\r\n  }\r\n\r\n  &[thumbPosition='bottom'] {\r\n    flex-direction: column-reverse;\r\n  }\r\n\r\n  // Gallery auto-height variables\r\n  &[autoHeight='true'][itemAutoSize='false'][orientation='horizontal'] {\r\n    &[thumbPosition='top'], &[thumbPosition='bottom'] {\r\n      // if auto-height, use fit-content\r\n      height: fit-content;\r\n      --g-item-height: auto !important;\r\n      --g-item-max-height: auto;\r\n    }\r\n  }\r\n\r\n  // Gallery image variables\r\n  --image-object-fit: unset;\r\n\r\n  &[imageSize='contain'] gallery-slider,\r\n  &[thumbImageSize='contain'] gallery-thumbs {\r\n    --image-object-fit: contain;\r\n  }\r\n\r\n  &[imageSize='cover'] gallery-slider,\r\n  &[thumbImageSize='cover'] gallery-thumbs {\r\n    --image-object-fit: cover;\r\n  }\r\n\r\n  // Gallery thumbs variables\r\n  --slider-thumb-height: unset;\r\n  --slider-thumb-width: unset;\r\n  --thumb-slider-left: unset;\r\n  --thumb-slider-overflow: unset;\r\n  --thumb-slider-flex-direction: unset;\r\n  --g-thumb-width: unset;\r\n  --g-thumb-height: unset;\r\n  --g-thumb-cursor: pointer;\r\n\r\n  &[thumbPosition='top'],\r\n  &[thumbPosition='bottom'] {\r\n    --thumb-slider-top: 0;\r\n    --thumb-slider-overflow: auto hidden;\r\n    --thumb-slider-flex-direction: row;\r\n    --g-thumb-height: 100%;\r\n\r\n    &[thumbAutosize=\"true\"] {\r\n      --g-thumb-width: auto !important;\r\n    }\r\n  }\r\n\r\n  &[thumbPosition='left'],\r\n  &[thumbPosition='right'] {\r\n    --thumb-slider-left: 0;\r\n    --thumb-slider-overflow: hidden auto;\r\n    --thumb-slider-flex-direction: column;\r\n    --g-thumb-width: 100%;\r\n\r\n    &[thumbAutosize=\"true\"] {\r\n      --g-thumb-height: auto !important;\r\n    }\r\n  }\r\n\r\n  &[thumbDisbled='true'] {\r\n    --g-thumb-cursor: default;\r\n  }\r\n\r\n  &[thumbScrollDisabled='true'] {\r\n    --thumb-slider-overflow: hidden !important;\r\n  }\r\n\r\n  // Gallery slider variables\r\n  --slider-scroll-snap-type: unset;\r\n  --slider-overflow: unset;\r\n  --slider-flex-direction: unset;\r\n  --slider-width: unset;\r\n  --slider-height: unset;\r\n  --slider-content-width: unset;\r\n  --slider-content-height: unset;\r\n\r\n  &[orientation='horizontal'] {\r\n    --slider-overflow: auto hidden;\r\n    --slider-scroll-snap-type: x mandatory;\r\n    --slider-flex-direction: row;\r\n    --slider-content-height: 100%;\r\n  }\r\n\r\n  &[orientation='vertical'] {\r\n    --slider-overflow: hidden auto;\r\n    --slider-scroll-snap-type: y mandatory;\r\n    --slider-flex-direction: column;\r\n    --slider-content-width: 100%;\r\n  }\r\n\r\n  &[scrollDisabled='true'] {\r\n    --slider-overflow: hidden !important;\r\n  }\r\n\r\n  // Gallery items variables\r\n  --g-item-width: unset;\r\n  --g-item-height: unset;\r\n  --g-item-max-height: var(--slider-height);\r\n\r\n  &[orientation='horizontal'] {\r\n    --g-item-width: var(--slider-width);\r\n    --g-item-height: 100%;\r\n\r\n    &[itemAutoSize='true'] {\r\n      --g-item-width: auto;\r\n    }\r\n  }\r\n\r\n  &[orientation='vertical'] {\r\n    --g-item-width: 100%;\r\n    --g-item-height: var(--slider-height);\r\n\r\n    &[itemAutoSize='true'] {\r\n      --g-item-height: auto;\r\n    }\r\n  }\r\n\r\n  // Gallery bullets variables\r\n  --bullets-top: unset;\r\n  --bullets-bottom: unset;\r\n  --bullets-cursor: pointer;\r\n  --bullets-opacity: 0.4;\r\n  --bullets-hover-opacity: 1;\r\n  --bullets-active-opacity: 1;\r\n\r\n  &[bulletPosition='top'] {\r\n    --bullets-top: 15px;\r\n  }\r\n\r\n  &[bulletPosition='bottom'] {\r\n    --bullets-bottom: 15px;\r\n  }\r\n\r\n  &[bulletDisabled='true'] {\r\n    --bullets-cursor: default;\r\n    --bullets-hover-opacity: var(--bullets-opacity);\r\n  }\r\n\r\n  // Gallery position variables\r\n  --counter-top: unset;\r\n  --counter-bottom: unset;\r\n  --counter-border-radius: unset;\r\n\r\n  &[counterPosition='top'] {\r\n    --counter-top: 0;\r\n    --counter-border-radius: 0 0 4px 4px;\r\n  }\r\n\r\n  &[counterPosition='bottom'] {\r\n    --counter-bottom: 0;\r\n    --counter-border-radius: 4px 4px 0 0;\r\n  }\r\n\r\n  // Gallery nav variables\r\n  --nav-space: 8px;\r\n  --nav-hover-space: 6.4px;\r\n  --nav-next-right: unset;\r\n  --nav-next-hover-right: unset;\r\n  --nav-next-left: unset;\r\n  --nav-next-hover-left: unset;\r\n\r\n  &[dir='ltr'] {\r\n    --nav-next-transform: translateY(-50%) perspective(1px);\r\n    --nav-next-right: var(--nav-space);\r\n    --nav-next-hover-right: var(--nav-hover-space);\r\n\r\n    --nav-prev-transform: translateY(-50%) perspective(1px) scale(-1, -1);\r\n    --nav-prev-left: var(--nav-space);\r\n    --nav-prev-hover-left: var(--nav-hover-space);\r\n  }\r\n\r\n  &[dir='rtl'] {\r\n    --nav-next-transform: translateY(-50%) perspective(1px) scale(-1, -1);\r\n    --nav-next-left: var(--nav-space);\r\n    --nav-next-hover-left: var(--nav-hover-space);\r\n\r\n    --nav-prev-transform: translateY(-50%) perspective(1px);\r\n    --nav-prev-right: var(--nav-space);\r\n    --nav-prev-hover-right: var(--nav-hover-space);\r\n  }\r\n}\r\n\r\n.g-box {\r\n  overflow: hidden;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  order: 1;\r\n  flex: 1;\r\n}\r\n\r\n.g-box-template {\r\n  position: absolute;\r\n  z-index: 10;\r\n}\r\n",
                    "styleUrl": "./gallery-core.scss"
                },
                {
                    "data": ":host[debug='true'] {\r\n  ::ng-deep {\r\n    .g-sliding, .g-resizing, .g-scrolling {\r\n      gallery-item.g-item-highlight {\r\n        visibility: hidden;\r\n      }\r\n    }\r\n  }\r\n\r\n  ::ng-deep {\r\n    gallery-slider {\r\n      &:after, &:before {\r\n        position: absolute;\r\n        content: '';\r\n        z-index: 12;\r\n      }\r\n\r\n      &:before {\r\n        width: 100%;\r\n        height: 0;\r\n        border-top: 1px dashed lime;\r\n      }\r\n\r\n      &:after {\r\n        height: 100%;\r\n        width: 0;\r\n        border-left: 1px dashed lime;\r\n      }\r\n\r\n      gallery-item {\r\n        outline: 1px solid darkorange;\r\n\r\n        &.g-item-highlight {\r\n          &:after {\r\n            content: '';\r\n            position: absolute;\r\n            width: 100%;\r\n            height: 100%;\r\n            border: 3px solid lime;\r\n            box-sizing: border-box;\r\n            z-index: 10;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .g-sliding {\r\n      .g-slider-sliding {\r\n        display: block;\r\n      }\r\n    }\r\n\r\n    .g-scrolling {\r\n      .g-slider-scrolling {\r\n        display: block;\r\n      }\r\n    }\r\n\r\n    .g-resizing {\r\n      .g-slider-resizing {\r\n        display: block;\r\n      }\r\n    }\r\n\r\n    .g-slider-debug {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      display: flex;\r\n      gap: 5px;\r\n      padding: 10px;\r\n\r\n      .g-slider-resizing {\r\n        background: rgba(245, 76, 40);\r\n      }\r\n\r\n      .g-slider-scrolling {\r\n        background: rgb(255, 133, 36);\r\n      }\r\n\r\n      .g-slider-sliding {\r\n        background: rgb(31, 108, 185);\r\n      }\r\n\r\n      div, &:before {\r\n        display: none;\r\n        color: white;\r\n        font-family: monospace;\r\n        z-index: 12;\r\n        padding: 2px 6px;\r\n        border-radius: 3px;\r\n      }\r\n    }\r\n  }\r\n\r\n  &[itemAutoSize='false'] {\r\n    ::ng-deep {\r\n      .g-slider-debug {\r\n        &:before {\r\n          content: var(--intersection-margin);\r\n          background: rgba(236, 236, 236, 0.84);\r\n          color: #363636;\r\n          display: block;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  &[itemAutoSize='true'] {\r\n    ::ng-deep {\r\n      gallery-item {\r\n        &:before {\r\n          position: absolute;\r\n          margin: 10px;\r\n          content: var(--item-intersection-margin);\r\n          background: rgba(236, 236, 236, 0.84);\r\n          color: #363636;\r\n          display: block;\r\n          width: 270px;\r\n          font-family: monospace;\r\n          z-index: 12;\r\n          padding: 2px 6px;\r\n          border-radius: 3px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "../styles/debug.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dir",
                        "type": "Directionality",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 149,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dir",
                        "type": "Directionality",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnChanges"
            ],
            "accessors": {
                "thumbPosition": {
                    "name": "thumbPosition",
                    "getSignature": {
                        "name": "thumbPosition",
                        "type": "",
                        "returnType": "\"top\" | \"left\" | \"right\" | \"bottom\"",
                        "line": 77,
                        "rawdescription": "\nSet thumbnails position",
                        "description": "<p>Set thumbnails position</p>\n"
                    }
                },
                "orientation": {
                    "name": "orientation",
                    "getSignature": {
                        "name": "orientation",
                        "type": "",
                        "returnType": "\"horizontal\" | \"vertical\"",
                        "line": 82,
                        "rawdescription": "\nSet sliding direction",
                        "description": "<p>Set sliding direction</p>\n"
                    }
                },
                "disableThumb": {
                    "name": "disableThumb",
                    "getSignature": {
                        "name": "disableThumb",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 87,
                        "rawdescription": "\nDisable thumbnails' clicks",
                        "description": "<p>Disable thumbnails&#39; clicks</p>\n"
                    }
                },
                "bulletDisabled": {
                    "name": "bulletDisabled",
                    "getSignature": {
                        "name": "bulletDisabled",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 92,
                        "rawdescription": "\nSet bullets' clicks",
                        "description": "<p>Set bullets&#39; clicks</p>\n"
                    }
                },
                "bulletPosition": {
                    "name": "bulletPosition",
                    "getSignature": {
                        "name": "bulletPosition",
                        "type": "",
                        "returnType": "\"top\" | \"bottom\"",
                        "line": 97,
                        "rawdescription": "\nSet gallery bullets position",
                        "description": "<p>Set gallery bullets position</p>\n"
                    }
                },
                "imageSize": {
                    "name": "imageSize",
                    "getSignature": {
                        "name": "imageSize",
                        "type": "",
                        "returnType": "\"cover\" | \"contain\"",
                        "line": 102,
                        "rawdescription": "\nSet gallery image size property",
                        "description": "<p>Set gallery image size property</p>\n"
                    }
                },
                "thumbImageSize": {
                    "name": "thumbImageSize",
                    "getSignature": {
                        "name": "thumbImageSize",
                        "type": "",
                        "returnType": "\"contain\" | \"cover\"",
                        "line": 107,
                        "rawdescription": "\nSet gallery thumb image size property",
                        "description": "<p>Set gallery thumb image size property</p>\n"
                    }
                },
                "counterPosition": {
                    "name": "counterPosition",
                    "getSignature": {
                        "name": "counterPosition",
                        "type": "",
                        "returnType": "\"top\" | \"bottom\"",
                        "line": 112,
                        "rawdescription": "\nSet gallery counter position",
                        "description": "<p>Set gallery counter position</p>\n"
                    }
                },
                "scrollDisabled": {
                    "name": "scrollDisabled",
                    "getSignature": {
                        "name": "scrollDisabled",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 117,
                        "rawdescription": "\nDisable sliding using sliding via touchpad, mousewheel and gestures",
                        "description": "<p>Disable sliding using sliding via touchpad, mousewheel and gestures</p>\n"
                    }
                },
                "thumbScrollDisabled": {
                    "name": "thumbScrollDisabled",
                    "getSignature": {
                        "name": "thumbScrollDisabled",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 122,
                        "rawdescription": "\nDisable thumb sliding using sliding via touchpad, mousewheel and gestures",
                        "description": "<p>Disable thumb sliding using sliding via touchpad, mousewheel and gestures</p>\n"
                    }
                },
                "itemAutosize": {
                    "name": "itemAutosize",
                    "getSignature": {
                        "name": "itemAutosize",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 127,
                        "rawdescription": "\nSet items autosize styles",
                        "description": "<p>Set items autosize styles</p>\n"
                    }
                },
                "autoHeight": {
                    "name": "autoHeight",
                    "getSignature": {
                        "name": "autoHeight",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 132,
                        "rawdescription": "\nSet gallery autoHeight styles",
                        "description": "<p>Set gallery autoHeight styles</p>\n"
                    }
                },
                "thumbAutosize": {
                    "name": "thumbAutosize",
                    "getSignature": {
                        "name": "thumbAutosize",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 137,
                        "rawdescription": "\nSet gallery thumb autosize styles",
                        "description": "<p>Set gallery thumb autosize styles</p>\n"
                    }
                },
                "direction": {
                    "name": "direction",
                    "getSignature": {
                        "name": "direction",
                        "type": "",
                        "returnType": "Direction",
                        "line": 142,
                        "rawdescription": "\nSet direction",
                        "description": "<p>Set direction</p>\n"
                    }
                },
                "debug": {
                    "name": "debug",
                    "getSignature": {
                        "name": "debug",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 147,
                        "rawdescription": "\nSet debug style",
                        "description": "<p>Set debug style</p>\n"
                    }
                }
            }
        },
        {
            "name": "GalleryCounterComponent",
            "id": "component-GalleryCounterComponent-c248b3b0b6b8f0d3298ca31037cb1a504376fe2b67f55c2275da836b4d13b5540ae785d4fa76ddfce225a78c2490a8e8140bb2cd4138e8ebc19b17083481a5f7",
            "file": "projects/ng-gallery/src/lib/components/gallery-counter.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gallery-counter",
            "styleUrls": [
                "./gallery-counter.scss"
            ],
            "styles": [],
            "template": "<div class=\"g-counter\">{{ (state.currIndex + 1) + ' / ' + state.items.length }}</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "GalleryState",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { GalleryState } from '../models/gallery.model';\r\n\r\n@Component({\r\n  selector: 'gallery-counter',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['./gallery-counter.scss'],\r\n  template: `\r\n    <div class=\"g-counter\">{{ (state.currIndex + 1) + ' / ' + state.items.length }}</div>\r\n  `,\r\n  standalone: true\r\n})\r\nexport class GalleryCounterComponent {\r\n  @Input() state: GalleryState;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".g-counter {\r\n  font-weight: bold;\r\n  user-select: none;\r\n  opacity: 0.6;\r\n  transition: opacity linear 150ms;\r\n  z-index: 50;\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translateX(-50%) perspective(1px);\r\n  font-size: 12px;\r\n  padding: 4px 10px;\r\n  color: var(--g-font-color);\r\n  background-color: var(--g-overlay-color);\r\n  box-shadow: var(--g-box-shadow);\r\n\r\n  top: var(--counter-top);\r\n  bottom: var(--counter-bottom);\r\n  border-radius: var(--counter-border-radius);\r\n\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n}\r\n",
                    "styleUrl": "./gallery-counter.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "GalleryIframeComponent",
            "id": "component-GalleryIframeComponent-f80fe77d8a6d367c9515bf9b4da61d8c7535dc721032b9dc75e5bd532552daf36798da47e8ddfa9c551a720e012b267c2553c4a2ca0aab949041ccb52847a902",
            "file": "projects/ng-gallery/src/lib/components/templates/gallery-iframe.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gallery-iframe",
            "styleUrls": [],
            "styles": [],
            "template": "<iframe *ngIf=\"autoplay; else default\"\n        #iframe\n        [attr.loading]=\"loadingAttr\"\n        allowfullscreen\n        allow\n        style=\"border:none\"\n        [src]=\"iframeSrc\">\n</iframe>\n<ng-template #default>\n  <iframe #iframe\n          [attr.loading]=\"loadingAttr\"\n          allowfullscreen\n          style=\"border:none\"\n          [src]=\"iframeSrc\">\n  </iframe>\n</ng-template>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "autoplay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "loadingAttr",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "\"eager\" | \"lazy\"",
                    "decorators": []
                },
                {
                    "name": "pause",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "src",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "iframe",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'iframe'"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "iframeSrc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SafeResourceUrl",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "videoSrc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIf"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewChild, ElementRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { NgIf } from '@angular/common';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'gallery-iframe',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <iframe *ngIf=\"autoplay; else default\"\r\n            #iframe\r\n            [attr.loading]=\"loadingAttr\"\r\n            allowfullscreen\r\n            allow\r\n            style=\"border:none\"\r\n            [src]=\"iframeSrc\">\r\n    </iframe>\r\n    <ng-template #default>\r\n      <iframe #iframe\r\n              [attr.loading]=\"loadingAttr\"\r\n              allowfullscreen\r\n              style=\"border:none\"\r\n              [src]=\"iframeSrc\">\r\n      </iframe>\r\n    </ng-template>\r\n  `,\r\n  standalone: true,\r\n  imports: [NgIf]\r\n})\r\nexport class GalleryIframeComponent {\r\n\r\n  iframeSrc: SafeResourceUrl;\r\n  videoSrc: string;\r\n\r\n  @Input('src') set src(src: string) {\r\n    this.videoSrc = src;\r\n    this.iframeSrc = this._sanitizer.bypassSecurityTrustResourceUrl(src);\r\n  }\r\n\r\n  @Input('pause') set pauseVideo(shouldPause: boolean) {\r\n    if (this.iframe?.nativeElement) {\r\n      if (shouldPause) {\r\n        const iframe: HTMLIFrameElement = this.iframe.nativeElement;\r\n        iframe.src = null;\r\n\r\n        if (!this.autoplay && this.videoSrc) {\r\n          this.iframeSrc = this._sanitizer.bypassSecurityTrustResourceUrl(this.videoSrc);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @Input() autoplay: boolean;\r\n\r\n  @Input() loadingAttr: 'eager' | 'lazy';\r\n\r\n  @ViewChild('iframe') iframe: ElementRef;\r\n\r\n  constructor(private _sanitizer: DomSanitizer) {\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 56,
                "jsdoctags": [
                    {
                        "name": "_sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "src": {
                    "name": "src",
                    "setSignature": {
                        "name": "src",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "src",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 34,
                        "jsdoctags": [
                            {
                                "name": "src",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "pauseVideo": {
                    "name": "pauseVideo",
                    "setSignature": {
                        "name": "pauseVideo",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "shouldPause",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 39,
                        "jsdoctags": [
                            {
                                "name": "shouldPause",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "name": "GalleryImageComponent",
            "id": "component-GalleryImageComponent-2ecb40ba37998297cbb5c07d50509e1eb10d2408f3d8cf25b5736c7999f6701872985ee34f4f7483a0fd99bdfcf71149ac5b4d41b1ed2b2f467734f089840705",
            "file": "projects/ng-gallery/src/lib/components/templates/gallery-image.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gallery-image",
            "styleUrls": [
                "./gallery-image.scss"
            ],
            "styles": [],
            "template": "<ng-container [ngSwitch]=\"state\">\n\n  <ng-container *ngIf=\"isThumbnail; else main\">\n    <img [@fadeIn]=\"state\"\n         [src]=\"src\"\n         [attr.alt]=\"alt\"\n         [attr.loading]=\"loadingAttr\"\n         [style.visibility]=\"state === 'success' ? 'visible' : 'hidden'\"\n         class=\"g-image-item\"\n         (load)=\"state = 'success'\"\n         (error)=\"state = 'failed'; error.emit($event)\"/>\n  </ng-container>\n  <ng-template #main>\n    <img [galleryImage]=\"index\"\n         [@fadeIn]=\"state\"\n         [src]=\"src\"\n         [attr.alt]=\"alt\"\n         [attr.loading]=\"loadingAttr\"\n         [style.visibility]=\"state === 'success' ? 'visible' : 'hidden'\"\n         class=\"g-image-item\"\n         (load)=\"state = 'success'\"\n         (error)=\"state = 'failed'; error.emit($event)\"/>\n  </ng-template>\n\n  <div *ngSwitchCase=\"'failed'\"\n       class=\"g-image-error-message\">\n    <div *ngIf=\"errorTemplate; else defaultError\"\n         [innerHTML]=\"errorTemplate\"></div>\n    <ng-template #defaultError>\n      <ng-container *ngIf=\"isThumbnail; else isLarge\">\n        <h4>\n          <div class=\"gallery-thumb-error\" [innerHTML]=\"errorSvg\"></div>\n        </h4>\n      </ng-container>\n      <ng-template #isLarge>\n        <h2>\n          <div class=\"gallery-image-error\" [innerHTML]=\"errorSvg\"></div>\n        </h2>\n        <p>Unable to load the image!</p>\n      </ng-template>\n    </ng-template>\n  </div>\n\n  <ng-container *ngSwitchCase=\"'loading'\">\n    <div *ngIf=\"loaderTemplate; else defaultLoader\"\n         class=\"g-loading\"\n         [innerHTML]=\"loaderTemplate\">\n    </div>\n    <ng-template #defaultLoader>\n      <div *ngIf=\"isThumbnail\" class=\"g-thumb-loading\"></div>\n    </ng-template>\n  </ng-container>\n</ng-container>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "alt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nImage alt",
                    "description": "<p>Image alt</p>\n",
                    "line": 101,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "errorIcon",
                    "defaultValue": "imageFailedSvg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 116,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 95,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "isThumbnail",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nIs thumbnail",
                    "description": "<p>Is thumbnail</p>\n",
                    "line": 93,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "loadingAttr",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nImage loading attribute",
                    "description": "<p>Image loading attribute</p>\n",
                    "line": 98,
                    "type": "\"eager\" | \"lazy\"",
                    "decorators": []
                },
                {
                    "name": "loadingError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nCustom error template",
                    "description": "<p>Custom error template</p>\n",
                    "line": 112,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "loadingIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nCustom loader template",
                    "description": "<p>Custom loader template</p>\n",
                    "line": 107,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "src",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nImage source URL",
                    "description": "<p>Image source URL</p>\n",
                    "line": 104,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "error",
                    "defaultValue": "new EventEmitter<ErrorEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nStream that emits when an error occurs",
                    "description": "<p>Stream that emits when an error occurs</p>\n",
                    "line": 120,
                    "type": "EventEmitter<ErrorEvent>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "errorSvg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SafeHtml",
                    "optional": false,
                    "description": "",
                    "line": 117
                },
                {
                    "name": "errorTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SafeHtml",
                    "optional": false,
                    "description": "<p>Custom error safe template</p>\n",
                    "line": 114,
                    "rawdescription": "\nCustom error safe template"
                },
                {
                    "name": "loaderTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SafeHtml",
                    "optional": false,
                    "description": "<p>Custom loader safe template</p>\n",
                    "line": 109,
                    "rawdescription": "\nCustom loader safe template"
                },
                {
                    "name": "state",
                    "defaultValue": "'loading'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ItemState",
                    "optional": false,
                    "description": "",
                    "line": 90
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "attr.imageState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 122,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgSwitch"
                },
                {
                    "name": "NgSwitchCase"
                },
                {
                    "name": "NgIf"
                },
                {
                    "name": "ImgRecognizer"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  HostBinding,\r\n  EventEmitter,\r\n  OnInit,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { NgSwitch, NgSwitchCase, NgIf } from '@angular/common';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { animate, style, transition, trigger } from '@angular/animations';\r\nimport { imageFailedSvg } from './svg-assets';\r\nimport { ImgRecognizer } from '../../utils/img-recognizer';\r\nimport { ItemState } from './items.model';\r\n\r\n@Component({\r\n  selector: 'gallery-image',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['./gallery-image.scss'],\r\n  animations: [\r\n    trigger('fadeIn', [\r\n      transition('* => success', [\r\n        style({ opacity: 0 }),\r\n        animate('300ms ease-in', style({ opacity: 1 }))\r\n      ])\r\n    ])\r\n  ],\r\n  template: `\r\n    <ng-container [ngSwitch]=\"state\">\r\n\r\n      <ng-container *ngIf=\"isThumbnail; else main\">\r\n        <img [@fadeIn]=\"state\"\r\n             [src]=\"src\"\r\n             [attr.alt]=\"alt\"\r\n             [attr.loading]=\"loadingAttr\"\r\n             [style.visibility]=\"state === 'success' ? 'visible' : 'hidden'\"\r\n             class=\"g-image-item\"\r\n             (load)=\"state = 'success'\"\r\n             (error)=\"state = 'failed'; error.emit($event)\"/>\r\n      </ng-container>\r\n      <ng-template #main>\r\n        <img [galleryImage]=\"index\"\r\n             [@fadeIn]=\"state\"\r\n             [src]=\"src\"\r\n             [attr.alt]=\"alt\"\r\n             [attr.loading]=\"loadingAttr\"\r\n             [style.visibility]=\"state === 'success' ? 'visible' : 'hidden'\"\r\n             class=\"g-image-item\"\r\n             (load)=\"state = 'success'\"\r\n             (error)=\"state = 'failed'; error.emit($event)\"/>\r\n      </ng-template>\r\n\r\n      <div *ngSwitchCase=\"'failed'\"\r\n           class=\"g-image-error-message\">\r\n        <div *ngIf=\"errorTemplate; else defaultError\"\r\n             [innerHTML]=\"errorTemplate\"></div>\r\n        <ng-template #defaultError>\r\n          <ng-container *ngIf=\"isThumbnail; else isLarge\">\r\n            <h4>\r\n              <div class=\"gallery-thumb-error\" [innerHTML]=\"errorSvg\"></div>\r\n            </h4>\r\n          </ng-container>\r\n          <ng-template #isLarge>\r\n            <h2>\r\n              <div class=\"gallery-image-error\" [innerHTML]=\"errorSvg\"></div>\r\n            </h2>\r\n            <p>Unable to load the image!</p>\r\n          </ng-template>\r\n        </ng-template>\r\n      </div>\r\n\r\n      <ng-container *ngSwitchCase=\"'loading'\">\r\n        <div *ngIf=\"loaderTemplate; else defaultLoader\"\r\n             class=\"g-loading\"\r\n             [innerHTML]=\"loaderTemplate\">\r\n        </div>\r\n        <ng-template #defaultLoader>\r\n          <div *ngIf=\"isThumbnail\" class=\"g-thumb-loading\"></div>\r\n        </ng-template>\r\n      </ng-container>\r\n    </ng-container>\r\n  `,\r\n  standalone: true,\r\n  imports: [NgSwitch, NgSwitchCase, NgIf, ImgRecognizer]\r\n})\r\n\r\nexport class GalleryImageComponent implements OnInit {\r\n\r\n  state: ItemState = 'loading';\r\n\r\n  /** Is thumbnail */\r\n  @Input() isThumbnail: boolean;\r\n\r\n  @Input() index: number;\r\n\r\n  /** Image loading attribute */\r\n  @Input() loadingAttr: 'eager' | 'lazy';\r\n\r\n  /** Image alt */\r\n  @Input() alt: string;\r\n\r\n  /** Image source URL */\r\n  @Input() src: string;\r\n\r\n  /** Custom loader template */\r\n  @Input() loadingIcon: string;\r\n  /** Custom loader safe template */\r\n  loaderTemplate: SafeHtml;\r\n\r\n  /** Custom error template */\r\n  @Input() loadingError: string;\r\n  /** Custom error safe template */\r\n  errorTemplate: SafeHtml;\r\n\r\n  @Input() errorIcon: string = imageFailedSvg;\r\n  errorSvg: SafeHtml;\r\n\r\n  /** Stream that emits when an error occurs */\r\n  @Output() error: EventEmitter<ErrorEvent> = new EventEmitter<ErrorEvent>();\r\n\r\n  @HostBinding('attr.imageState') get imageState(): string {\r\n    return this.state;\r\n  }\r\n\r\n  constructor(private _sanitizer: DomSanitizer) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.loadingIcon) {\r\n      this.loaderTemplate = this._sanitizer.bypassSecurityTrustHtml(this.loadingIcon);\r\n    }\r\n    if (this.loadingError) {\r\n      this.errorTemplate = this._sanitizer.bypassSecurityTrustHtml(this.loadingError);\r\n    }\r\n    if (this.errorIcon) {\r\n      this.errorSvg = this._sanitizer.bypassSecurityTrustHtml(this.errorIcon);\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  max-height: 100%;\r\n  max-width: 100%;\r\n  transition: opacity 300ms cubic-bezier(0.5, 0, 0.5, 1);\r\n  opacity: var(--g-thumb-opacity);\r\n\r\n  &[imageState='success'] {\r\n    align-self: center;\r\n  }\r\n\r\n  ::ng-deep {\r\n    svg {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  }\r\n}\r\n\r\n.gallery-image-error {\r\n  width: 100px;\r\n  height: 100px;\r\n}\r\n\r\n.gallery-thumb-error {\r\n  width: 40px;\r\n  height: 40px;\r\n}\r\n\r\nimg.g-image-item {\r\n  object-fit: var(--image-object-fit);\r\n  width: 100%;\r\n  height: 100%;\r\n  pointer-events: none;\r\n  max-height: 100%;\r\n  max-width: 100%;\r\n}\r\n\r\n.g-image-error-message {\r\n  position: absolute;\r\n  z-index: 10;\r\n  left: 0;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n}\r\n\r\nh2, h4 {\r\n  color: coral;\r\n  margin: 0;\r\n}\r\n\r\nh2 {\r\n  font-size: 3.5em;\r\n  margin-bottom: 0.3em;\r\n}\r\n\r\nh4 {\r\n  font-size: 1.6em;\r\n}\r\n\r\n.g-loading {\r\n  position: absolute;\r\n  transform: translate3d(-50%, -50%, 0);\r\n  left: 50%;\r\n  top: 50%;\r\n  width: 80px;\r\n  height: 80px;\r\n}\r\n\r\n// Thumbnail loading\r\n\r\n$loading-color: #fff !default;\r\n$placeholder-ng: #262626 !default;\r\n\r\n.g-active-thumb {\r\n  .g-thumb-loading {\r\n    background-color: #464646;\r\n  }\r\n}\r\n\r\n.g-thumb-loading {\r\n  position: relative;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: $placeholder-ng;\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 50%;\r\n    z-index: 1;\r\n    width: 500%;\r\n    margin-left: -250%;\r\n    animation: phAnimation .8s linear infinite;\r\n    background: linear-gradient(to right, rgba($loading-color, 0) 46%, rgba($loading-color, .35) 50%, rgba($loading-color, 0) 54%) 50% 50%;\r\n  }\r\n}\r\n\r\n@keyframes phAnimation {\r\n  0% {\r\n    transform: translate3d(-30%, 0, 0);\r\n  }\r\n  100% {\r\n    transform: translate3d(30%, 0, 0);\r\n  }\r\n}\r\n",
                    "styleUrl": "./gallery-image.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 124,
                "jsdoctags": [
                    {
                        "name": "_sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "imageState": {
                    "name": "imageState",
                    "getSignature": {
                        "name": "imageState",
                        "type": "string",
                        "returnType": "string",
                        "line": 122
                    }
                }
            }
        },
        {
            "name": "GalleryItemComponent",
            "id": "component-GalleryItemComponent-658b2eb839084d173eb340b21ce8e09f3515d46388ee03d9a284ac032974bcf745aac1a4b30c49fb4bc4ba7764ec7dc22475b6432ecf70d2d669140c172fba24",
            "file": "projects/ng-gallery/src/lib/components/gallery-item.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gallery-item",
            "styleUrls": [
                "./gallery-item.scss"
            ],
            "styles": [],
            "template": "<ng-container *ngIf=\"load\" [ngSwitch]=\"type\">\n  <ng-container *ngSwitchCase=\"Types.Image\">\n    <gallery-image [src]=\"imageData.src\"\n                   [alt]=\"imageData.alt\"\n                   [index]=\"index\"\n                   [loadingAttr]=\"config.loadingAttr\"\n                   [loadingIcon]=\"config.loadingIcon\"\n                   [loadingError]=\"config.loadingError\"\n                   (error)=\"error.emit($event)\"></gallery-image>\n\n    <div *ngIf=\"config.imageTemplate\" class=\"g-template g-item-template\">\n      <ng-container *ngTemplateOutlet=\"config.imageTemplate; context: imageContext\"></ng-container>\n    </div>\n  </ng-container>\n\n  <gallery-video *ngSwitchCase=\"Types.Video\"\n                 [src]=\"videoData.src\"\n                 [mute]=\"videoData.mute\"\n                 [poster]=\"videoData.poster\"\n                 [controls]=\"videoData.controls\"\n                 [controlsList]=\"videoData.controlsList\"\n                 [disablePictureInPicture]=\"videoData.disablePictureInPicture\"\n                 [play]=\"isAutoPlay\"\n                 [pause]=\"currIndex !== index\"\n                 (error)=\"error.emit($event)\"></gallery-video>\n\n  <gallery-iframe *ngSwitchCase=\"Types.Youtube\"\n                  [src]=\"youtubeSrc\"\n                  [autoplay]=\"isAutoPlay\"\n                  [loadingAttr]=\"config.loadingAttr\"\n                  [pause]=\"currIndex !== index\"></gallery-iframe>\n\n  <gallery-iframe *ngSwitchCase=\"Types.Iframe\"\n                  [src]=\"data.src\"\n                  [loadingAttr]=\"config.loadingAttr\"></gallery-iframe>\n\n  <ng-container *ngSwitchDefault>\n    <div *ngIf=\"config.itemTemplate\" class=\"g-template g-item-template\">\n      <ng-container *ngTemplateOutlet=\"config.itemTemplate; context: itemContext\"></ng-container>\n    </div>\n  </ng-container>\n</ng-container>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nGallery config",
                    "description": "<p>Gallery config</p>\n",
                    "line": 84,
                    "type": "GalleryConfig",
                    "decorators": []
                },
                {
                    "name": "count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nThe number of total items",
                    "description": "<p>The number of total items</p>\n",
                    "line": 90,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "currIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nGallery current index",
                    "description": "<p>Gallery current index</p>\n",
                    "line": 93,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nItem's data, this object contains the data required to display the content (e.g. src path)",
                    "description": "<p>Item&#39;s data, this object contains the data required to display the content (e.g. src path)</p>\n",
                    "line": 99,
                    "type": "GalleryItemData",
                    "decorators": []
                },
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nItem's index in the gallery",
                    "description": "<p>Item&#39;s index in the gallery</p>\n",
                    "line": 87,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nItem's type 'image', 'video', 'youtube', 'iframe'",
                    "description": "<p>Item&#39;s type &#39;image&#39;, &#39;video&#39;, &#39;youtube&#39;, &#39;iframe&#39;</p>\n",
                    "line": 96,
                    "type": "GalleryItemType",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "error",
                    "defaultValue": "new EventEmitter<ErrorEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nStream that emits when an error occurs",
                    "description": "<p>Stream that emits when an error occurs</p>\n",
                    "line": 102,
                    "type": "EventEmitter<ErrorEvent>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isItemContainImage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "<p>A flag that indicates if the item is type of image, it can be a custom template by the user,\nThe img recognizer directive will set it to true</p>\n",
                    "line": 81,
                    "rawdescription": "\nA flag that indicates if the item is type of image, it can be a custom template by the user,\nThe img recognizer directive will set it to true"
                },
                {
                    "name": "state$",
                    "defaultValue": "new BehaviorSubject<ItemState>('loading')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<ItemState>",
                    "optional": false,
                    "description": "<p>A stream that indicates that the height was emitted after the image is loaded, used only for gallery image types</p>\n",
                    "line": 77,
                    "rawdescription": "\nA stream that indicates that the height was emitted after the image is loaded, used only for gallery image types",
                    "modifierKind": [
                        146
                    ]
                },
                {
                    "name": "Types",
                    "defaultValue": "GalleryItemTypes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        146
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 188,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "attr.galleryIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 108,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "attr.itemState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 112,
                    "type": "ItemState",
                    "decorators": []
                },
                {
                    "name": "class.g-active-item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 104,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "GalleryImageComponent",
                    "type": "component"
                },
                {
                    "name": "GalleryVideoComponent",
                    "type": "component"
                },
                {
                    "name": "GalleryIframeComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  HostBinding,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ElementRef,\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { GalleryItemContext } from '../directives/gallery-item-def.directive';\r\nimport { GalleryIframeComponent } from './templates/gallery-iframe.component';\r\nimport { GalleryVideoComponent } from './templates/gallery-video.component';\r\nimport { GalleryImageComponent } from './templates/gallery-image.component';\r\nimport { GalleryConfig } from '../models/config.model';\r\nimport { GalleryItemType, GalleryItemTypes, LoadingStrategy } from '../models/constants';\r\nimport { GalleryItemData, ImageItemData, ItemState, VideoItemData, YoutubeItemData } from './templates/items.model';\r\n\r\n@Component({\r\n  selector: 'gallery-item',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['./gallery-item.scss'],\r\n  template: `\r\n    <ng-container *ngIf=\"load\" [ngSwitch]=\"type\">\r\n      <ng-container *ngSwitchCase=\"Types.Image\">\r\n        <gallery-image [src]=\"imageData.src\"\r\n                       [alt]=\"imageData.alt\"\r\n                       [index]=\"index\"\r\n                       [loadingAttr]=\"config.loadingAttr\"\r\n                       [loadingIcon]=\"config.loadingIcon\"\r\n                       [loadingError]=\"config.loadingError\"\r\n                       (error)=\"error.emit($event)\"></gallery-image>\r\n\r\n        <div *ngIf=\"config.imageTemplate\" class=\"g-template g-item-template\">\r\n          <ng-container *ngTemplateOutlet=\"config.imageTemplate; context: imageContext\"></ng-container>\r\n        </div>\r\n      </ng-container>\r\n\r\n      <gallery-video *ngSwitchCase=\"Types.Video\"\r\n                     [src]=\"videoData.src\"\r\n                     [mute]=\"videoData.mute\"\r\n                     [poster]=\"videoData.poster\"\r\n                     [controls]=\"videoData.controls\"\r\n                     [controlsList]=\"videoData.controlsList\"\r\n                     [disablePictureInPicture]=\"videoData.disablePictureInPicture\"\r\n                     [play]=\"isAutoPlay\"\r\n                     [pause]=\"currIndex !== index\"\r\n                     (error)=\"error.emit($event)\"></gallery-video>\r\n\r\n      <gallery-iframe *ngSwitchCase=\"Types.Youtube\"\r\n                      [src]=\"youtubeSrc\"\r\n                      [autoplay]=\"isAutoPlay\"\r\n                      [loadingAttr]=\"config.loadingAttr\"\r\n                      [pause]=\"currIndex !== index\"></gallery-iframe>\r\n\r\n      <gallery-iframe *ngSwitchCase=\"Types.Iframe\"\r\n                      [src]=\"data.src\"\r\n                      [loadingAttr]=\"config.loadingAttr\"></gallery-iframe>\r\n\r\n      <ng-container *ngSwitchDefault>\r\n        <div *ngIf=\"config.itemTemplate\" class=\"g-template g-item-template\">\r\n          <ng-container *ngTemplateOutlet=\"config.itemTemplate; context: itemContext\"></ng-container>\r\n        </div>\r\n      </ng-container>\r\n    </ng-container>\r\n  `,\r\n  standalone: true,\r\n  imports: [CommonModule, GalleryImageComponent, GalleryVideoComponent, GalleryIframeComponent]\r\n})\r\nexport class GalleryItemComponent implements AfterViewInit {\r\n\r\n  readonly Types = GalleryItemTypes;\r\n\r\n  /** A stream that indicates that the height was emitted after the image is loaded, used only for gallery image types */\r\n  readonly state$: BehaviorSubject<ItemState> = new BehaviorSubject<ItemState>('loading');\r\n\r\n  /** A flag that indicates if the item is type of image, it can be a custom template by the user,\r\n   * The img recognizer directive will set it to true*/\r\n  isItemContainImage: boolean;\r\n\r\n  /** Gallery config */\r\n  @Input() config: GalleryConfig;\r\n\r\n  /** Item's index in the gallery */\r\n  @Input() index: number;\r\n\r\n  /** The number of total items */\r\n  @Input() count: number;\r\n\r\n  /** Gallery current index */\r\n  @Input() currIndex: number;\r\n\r\n  /** Item's type 'image', 'video', 'youtube', 'iframe' */\r\n  @Input() type: GalleryItemType;\r\n\r\n  /** Item's data, this object contains the data required to display the content (e.g. src path) */\r\n  @Input() data: GalleryItemData;\r\n\r\n  /** Stream that emits when an error occurs */\r\n  @Output() error: EventEmitter<ErrorEvent> = new EventEmitter<ErrorEvent>();\r\n\r\n  @HostBinding('class.g-active-item') get isActive(): boolean {\r\n    return this.index === this.currIndex;\r\n  }\r\n\r\n  @HostBinding('attr.galleryIndex') get isIndexAttr(): number {\r\n    return this.index;\r\n  }\r\n\r\n  @HostBinding('attr.itemState') get itemState(): ItemState {\r\n    return this.state$.value;\r\n  }\r\n\r\n  get imageContext(): GalleryItemContext<ImageItemData> {\r\n    return {\r\n      $implicit: this.imageData,\r\n      index: this.index,\r\n      type: this.type,\r\n      active: this.isActive,\r\n      count: this.count,\r\n      first: this.index === 0,\r\n      last: this.index === this.count - 1\r\n    };\r\n  }\r\n\r\n  get itemContext(): GalleryItemContext<GalleryItemData> {\r\n    return {\r\n      $implicit: this.data,\r\n      index: this.index,\r\n      type: this.type,\r\n      active: this.isActive,\r\n      count: this.count,\r\n      first: this.index === 0,\r\n      last: this.index === this.count - 1\r\n    };\r\n  }\r\n\r\n  get nativeElement(): HTMLElement {\r\n    return this.el.nativeElement;\r\n  }\r\n\r\n  get isAutoPlay(): boolean {\r\n    if (this.isActive) {\r\n      if (this.type === GalleryItemTypes.Video || this.type === GalleryItemTypes.Youtube) {\r\n        return this.videoData.autoplay;\r\n      }\r\n    }\r\n  }\r\n\r\n  get youtubeSrc(): string {\r\n    let autoplay: 1 | 0 = 0;\r\n    if (this.isActive && this.type === GalleryItemTypes.Youtube && (this.data as YoutubeItemData).autoplay) {\r\n      autoplay = 1;\r\n    }\r\n    const url: URL = new URL(this.data.src as string);\r\n    url.search = new URLSearchParams({\r\n      wmode: 'transparent',\r\n      ...(this.data as YoutubeItemData).params,\r\n      autoplay\r\n    }).toString();\r\n    return url.href;\r\n  }\r\n\r\n  get load(): boolean {\r\n    switch (this.config.loadingStrategy) {\r\n      case LoadingStrategy.Preload:\r\n        return true;\r\n      case LoadingStrategy.Lazy:\r\n        return this.currIndex === this.index;\r\n      default:\r\n        return this.currIndex === this.index || this.currIndex === this.index - 1 || this.currIndex === this.index + 1;\r\n    }\r\n  }\r\n\r\n  get imageData(): ImageItemData {\r\n    return this.data;\r\n  }\r\n\r\n  get videoData(): VideoItemData {\r\n    return this.data;\r\n  }\r\n\r\n  constructor(private el: ElementRef) {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // If item does not contain an image, then set the state to DONE\r\n    if (!this.isItemContainImage) {\r\n      this.state$.next('success');\r\n    }\r\n  }\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  cursor: var(--g-item-cursor);\r\n  height: var(--g-item-height);\r\n  width: var(--g-item-width);\r\n  max-height: var(--g-item-max-height);\r\n  max-width: var(--slider-width);\r\n  z-index: 10;\r\n  position: relative;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 0 0 auto;\r\n  scroll-snap-align: center;\r\n\r\n  // Disable highlighting the elements on mouse move or click\r\n  user-select: none;\r\n  -webkit-user-drag: none;\r\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n\r\n  // In itemAutoSize is true, item size will be zero until it is loaded, fallback to the slider size\r\n  &[itemState='loading'] {\r\n    width: var(--slider-width);\r\n    height: var(--slider-height);\r\n  }\r\n\r\n  > * {\r\n    height: 100%;\r\n  }\r\n\r\n  ::ng-deep {\r\n    video, iframe {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  }\r\n}\r\n\r\ngallery-image {\r\n  width: var(--g-item-width);\r\n  height: var(--g-item-height);\r\n}\r\n\r\n.g-template {\r\n  position: absolute;\r\n  z-index: 10;\r\n  left: 0;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n}\r\n",
                    "styleUrl": "./gallery-item.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 183,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit"
            ],
            "accessors": {
                "isActive": {
                    "name": "isActive",
                    "getSignature": {
                        "name": "isActive",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 104
                    }
                },
                "isIndexAttr": {
                    "name": "isIndexAttr",
                    "getSignature": {
                        "name": "isIndexAttr",
                        "type": "number",
                        "returnType": "number",
                        "line": 108
                    }
                },
                "itemState": {
                    "name": "itemState",
                    "getSignature": {
                        "name": "itemState",
                        "type": "",
                        "returnType": "ItemState",
                        "line": 112
                    }
                },
                "imageContext": {
                    "name": "imageContext",
                    "getSignature": {
                        "name": "imageContext",
                        "type": "",
                        "returnType": "GalleryItemContext<ImageItemData>",
                        "line": 116
                    }
                },
                "itemContext": {
                    "name": "itemContext",
                    "getSignature": {
                        "name": "itemContext",
                        "type": "",
                        "returnType": "GalleryItemContext<GalleryItemData>",
                        "line": 128
                    }
                },
                "nativeElement": {
                    "name": "nativeElement",
                    "getSignature": {
                        "name": "nativeElement",
                        "type": "",
                        "returnType": "HTMLElement",
                        "line": 140
                    }
                },
                "isAutoPlay": {
                    "name": "isAutoPlay",
                    "getSignature": {
                        "name": "isAutoPlay",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 144
                    }
                },
                "youtubeSrc": {
                    "name": "youtubeSrc",
                    "getSignature": {
                        "name": "youtubeSrc",
                        "type": "string",
                        "returnType": "string",
                        "line": 152
                    }
                },
                "load": {
                    "name": "load",
                    "getSignature": {
                        "name": "load",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 166
                    }
                },
                "imageData": {
                    "name": "imageData",
                    "getSignature": {
                        "name": "imageData",
                        "type": "",
                        "returnType": "ImageItemData",
                        "line": 177
                    }
                },
                "videoData": {
                    "name": "videoData",
                    "getSignature": {
                        "name": "videoData",
                        "type": "",
                        "returnType": "VideoItemData",
                        "line": 181
                    }
                }
            }
        },
        {
            "name": "GalleryNavComponent",
            "id": "component-GalleryNavComponent-46e7626ad70c440670b8f602a5fec6ba6bcd1a7d8e5c34268aecdd68c82e1d1e0b21e5b6d3d83feaf9c2e67cdfeb1770ab4458dcd2b918546f1c4d7bb5294360",
            "file": "projects/ng-gallery/src/lib/components/gallery-nav.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gallery-nav",
            "styleUrls": [
                "./gallery-nav.scss"
            ],
            "styles": [],
            "template": "<i *ngIf=\"config.loop || state.hasPrev\"\n   class=\"g-nav-prev\"\n   aria-label=\"Previous\"\n   role=\"button\"\n   (click)=\"gallery.ref(this.id).prev(config.scrollBehavior)\"\n   [innerHtml]=\"navIcon\"></i>\n\n<i *ngIf=\"config.loop || state.hasNext\"\n   class=\"g-nav-next\"\n   aria-label=\"Next\"\n   role=\"button\"\n   (click)=\"gallery.ref(this.id).next(config.scrollBehavior)\"\n   [innerHtml]=\"navIcon\"></i>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "GalleryConfig",
                    "decorators": []
                },
                {
                    "name": "galleryId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "GalleryState",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dir",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Directionality",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "gallery",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Gallery",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "navIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SafeHtml",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "methodsClass": [
                {
                    "name": "leftButton",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "rightButton",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { Directionality } from '@angular/cdk/bidi';\r\nimport { Gallery } from '../services/gallery.service';\r\nimport { GalleryState } from '../models/gallery.model';\r\nimport { GalleryConfig } from '../models/config.model';\r\n\r\n@Component({\r\n  selector: 'gallery-nav',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['./gallery-nav.scss'],\r\n  template: `\r\n    <i *ngIf=\"config.loop || state.hasPrev\"\r\n       class=\"g-nav-prev\"\r\n       aria-label=\"Previous\"\r\n       role=\"button\"\r\n       (click)=\"gallery.ref(this.id).prev(config.scrollBehavior)\"\r\n       [innerHtml]=\"navIcon\"></i>\r\n\r\n    <i *ngIf=\"config.loop || state.hasNext\"\r\n       class=\"g-nav-next\"\r\n       aria-label=\"Next\"\r\n       role=\"button\"\r\n       (click)=\"gallery.ref(this.id).next(config.scrollBehavior)\"\r\n       [innerHtml]=\"navIcon\"></i>\r\n  `,\r\n  standalone: true,\r\n  imports: [CommonModule]\r\n})\r\nexport class GalleryNavComponent implements OnInit {\r\n\r\n  navIcon: SafeHtml;\r\n  @Input('galleryId') id: string;\r\n  @Input() state: GalleryState;\r\n  @Input() config: GalleryConfig;\r\n\r\n  constructor(public gallery: Gallery, private _sanitizer: DomSanitizer, public dir: Directionality) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.navIcon = this._sanitizer.bypassSecurityTrustHtml(this.config.navIcon);\r\n  }\r\n\r\n  rightButton() {\r\n\r\n  }\r\n\r\n  leftButton(): void {\r\n\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".g-nav-next,\r\n.g-nav-prev {\r\n  position: absolute;\r\n  top: 50%;\r\n  display: flex;\r\n  padding: 16px 8px;\r\n  cursor: pointer;\r\n  z-index: 999;\r\n  opacity: 0.6;\r\n  transition: opacity linear 150ms, right linear 150ms, left linear 150ms;\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n\r\n  ::ng-deep {\r\n    svg {\r\n      filter: var(--g-nav-drop-shadow);\r\n      width: 28px;\r\n      height: 28px;\r\n      fill: #fff;\r\n    }\r\n  }\r\n}\r\n\r\n.g-nav-next {\r\n  left: var(--nav-next-left);\r\n  right: var(--nav-next-right);\r\n  transform: var(--nav-next-transform);\r\n\r\n  &:hover {\r\n    left: var(--nav-next-hover-left);\r\n    right: var(--nav-next-hover-right);\r\n  }\r\n}\r\n\r\n.g-nav-prev {\r\n  left: var(--nav-prev-left);\r\n  right: var(--nav-prev-right);\r\n  transform: var(--nav-prev-transform);\r\n\r\n  &:hover {\r\n    left: var(--nav-prev-hover-left);\r\n    right: var(--nav-prev-hover-right);\r\n  }\r\n}\r\n",
                    "styleUrl": "./gallery-nav.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "gallery",
                        "type": "Gallery",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dir",
                        "type": "Directionality",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 36,
                "jsdoctags": [
                    {
                        "name": "gallery",
                        "type": "Gallery",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dir",
                        "type": "Directionality",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "GallerySliderComponent",
            "id": "component-GallerySliderComponent-8c5299b832f327bb20359ed9075c3ec50aa6d90b2a6dc31208ee1747da2edc10ae1f3542d9d4b43fefd90bb4361807e128b9f30704b3507f4fc014135c17251a",
            "file": "projects/ng-gallery/src/lib/components/gallery-slider.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gallery-slider",
            "styleUrls": [
                "./gallery-slider.scss"
            ],
            "styles": [],
            "template": "<div #slider\n     class=\"g-slider\"\n     [attr.centralised]=\"config.itemAutosize\"\n     [smoothScroll]=\"position$ | async\"\n     [smoothScrollInterruptOnMousemove]=\"!config.disableMouseScroll\"\n     sliderIntersectionObserver\n     [sliderIntersectionObserverDisabled]=\"isScrolling || isSliding || isResizing\"\n     [hammerSliding]=\"!config.disableMouseScroll\"\n     [adapter]=\"adapter\"\n     [items]=\"items$ | async\"\n     [config]=\"config\"\n     [state]=\"state\"\n     [galleryId]=\"galleryId\"\n     (isScrollingChange)=\"isScrolling = $event\"\n     (isSlidingChange)=\"isSliding = $event\"\n     (activeIndexChange)=\"onActiveIndexChange($event)\"\n     (isResizingChange)=\"isResizing = $event\"\n     sliderResizeObserver>\n  <div class=\"g-slider-content\">\n    <gallery-item *ngFor=\"let item of state.items; trackBy: trackByFn index as i\"\n                  [attr.galleryId]=\"galleryId\"\n                  [type]=\"item.type\"\n                  [config]=\"config\"\n                  [data]=\"item.data\"\n                  [currIndex]=\"state.currIndex\"\n                  [index]=\"i\"\n                  [count]=\"state.items.length\"\n                  itemIntersectionObserver\n                  [itemIntersectionObserverDisabled]=\"isScrolling || isSliding || isResizing\"\n                  [adapter]=\"adapter\"\n                  (activeIndexChange)=\"onActiveIndexChange($event)\"\n                  (click)=\"itemClick.emit(i)\"\n                  (error)=\"error.emit({ itemIndex: i, error: $event })\"/>\n  </div>\n\n  <div *ngIf=\"config.debug\" class=\"g-slider-debug\">\n    <div class=\"g-slider-resizing\">RESIZING</div>\n    <div class=\"g-slider-scrolling\">SCROLLING</div>\n    <div class=\"g-slider-sliding\">SLIDING</div>\n  </div>\n</div>\n<ng-content></ng-content>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nGallery config",
                    "description": "<p>Gallery config</p>\n",
                    "line": 104,
                    "type": "GalleryConfig",
                    "decorators": []
                },
                {
                    "name": "galleryId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nGallery ID",
                    "description": "<p>Gallery ID</p>\n",
                    "line": 98,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nGallery state",
                    "description": "<p>Gallery state</p>\n",
                    "line": 101,
                    "type": "GalleryState",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "error",
                    "defaultValue": "new EventEmitter<GalleryError>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nStream that emits when an error occurs",
                    "description": "<p>Stream that emits when an error occurs</p>\n",
                    "line": 110,
                    "type": "EventEmitter<GalleryError>"
                },
                {
                    "name": "itemClick",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nStream that emits when item is clicked",
                    "description": "<p>Stream that emits when item is clicked</p>\n",
                    "line": 107,
                    "type": "EventEmitter<number>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "adapter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SliderAdapter",
                    "optional": false,
                    "description": "<p>Slider adapter</p>\n",
                    "line": 86,
                    "rawdescription": "\nSlider adapter"
                },
                {
                    "name": "isResizing",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 95
                },
                {
                    "name": "isScrolling",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 91
                },
                {
                    "name": "isSliding",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 93
                },
                {
                    "name": "items",
                    "defaultValue": "new QueryList<GalleryItemComponent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<GalleryItemComponent>",
                    "optional": false,
                    "description": "",
                    "line": 115,
                    "decorators": [
                        {
                            "name": "ViewChildren",
                            "stringifiedArguments": "GalleryItemComponent"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "items$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<GalleryItemComponent[]>",
                    "optional": false,
                    "description": "<p>Stream that emits the item components once they&#39;re initialized</p>\n",
                    "line": 89,
                    "rawdescription": "\nStream that emits the item components once they're initialized"
                },
                {
                    "name": "position$",
                    "defaultValue": "new Subject<SmoothScrollOptions>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<SmoothScrollOptions>",
                    "optional": false,
                    "description": "<p>Stream that emits the slider position</p>\n",
                    "line": 83,
                    "rawdescription": "\nStream that emits the slider position",
                    "modifierKind": [
                        146
                    ]
                },
                {
                    "name": "sliderEl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Slider ElementRef</p>\n",
                    "line": 113,
                    "rawdescription": "\nSlider ElementRef",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'slider', {static: true}"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 154,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onActiveIndexChange",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "scrollToIndex",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "behavior",
                            "type": "ScrollBehavior",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 176,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "behavior",
                            "type": "ScrollBehavior",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "trackByFn",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "item",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 163,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "item",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "GalleryItemComponent",
                    "type": "component"
                },
                {
                    "name": "SmoothScroll"
                },
                {
                    "name": "HammerSliding"
                },
                {
                    "name": "SliderIntersectionObserver"
                },
                {
                    "name": "ItemIntersectionObserver"
                },
                {
                    "name": "SliderResizeObserver"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  ViewChild,\r\n  ViewChildren,\r\n  EventEmitter,\r\n  AfterViewInit,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ElementRef,\r\n  QueryList,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Observable, Subject, map, startWith } from 'rxjs';\r\nimport { Gallery } from '../services/gallery.service';\r\nimport { GalleryState, GalleryError } from '../models/gallery.model';\r\nimport { GalleryConfig } from '../models/config.model';\r\nimport { Orientation } from '../models/constants';\r\nimport { SliderAdapter, HorizontalAdapter, VerticalAdapter } from './adapters';\r\nimport { SmoothScroll, SmoothScrollOptions } from '../smooth-scroll';\r\nimport { HammerSliding } from '../gestures/hammer-sliding.directive';\r\nimport { SliderIntersectionObserver } from '../observers/slider-intersection-observer.directive';\r\nimport { ItemIntersectionObserver } from '../observers/item-intersection-observer.directive';\r\nimport { GalleryItemComponent } from './gallery-item.component';\r\nimport { SliderResizeObserver } from '../observers/slider-resize-observer.directive';\r\n\r\n@Component({\r\n  selector: 'gallery-slider',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['./gallery-slider.scss'],\r\n  template: `\r\n    <div #slider\r\n         class=\"g-slider\"\r\n         [attr.centralised]=\"config.itemAutosize\"\r\n         [smoothScroll]=\"position$ | async\"\r\n         [smoothScrollInterruptOnMousemove]=\"!config.disableMouseScroll\"\r\n         sliderIntersectionObserver\r\n         [sliderIntersectionObserverDisabled]=\"isScrolling || isSliding || isResizing\"\r\n         [hammerSliding]=\"!config.disableMouseScroll\"\r\n         [adapter]=\"adapter\"\r\n         [items]=\"items$ | async\"\r\n         [config]=\"config\"\r\n         [state]=\"state\"\r\n         [galleryId]=\"galleryId\"\r\n         (isScrollingChange)=\"isScrolling = $event\"\r\n         (isSlidingChange)=\"isSliding = $event\"\r\n         (activeIndexChange)=\"onActiveIndexChange($event)\"\r\n         (isResizingChange)=\"isResizing = $event\"\r\n         sliderResizeObserver>\r\n      <div class=\"g-slider-content\">\r\n        <gallery-item *ngFor=\"let item of state.items; trackBy: trackByFn index as i\"\r\n                      [attr.galleryId]=\"galleryId\"\r\n                      [type]=\"item.type\"\r\n                      [config]=\"config\"\r\n                      [data]=\"item.data\"\r\n                      [currIndex]=\"state.currIndex\"\r\n                      [index]=\"i\"\r\n                      [count]=\"state.items.length\"\r\n                      itemIntersectionObserver\r\n                      [itemIntersectionObserverDisabled]=\"isScrolling || isSliding || isResizing\"\r\n                      [adapter]=\"adapter\"\r\n                      (activeIndexChange)=\"onActiveIndexChange($event)\"\r\n                      (click)=\"itemClick.emit(i)\"\r\n                      (error)=\"error.emit({ itemIndex: i, error: $event })\"/>\r\n      </div>\r\n\r\n      <div *ngIf=\"config.debug\" class=\"g-slider-debug\">\r\n        <div class=\"g-slider-resizing\">RESIZING</div>\r\n        <div class=\"g-slider-scrolling\">SCROLLING</div>\r\n        <div class=\"g-slider-sliding\">SLIDING</div>\r\n      </div>\r\n    </div>\r\n    <ng-content></ng-content>\r\n  `,\r\n  standalone: true,\r\n  imports: [CommonModule, GalleryItemComponent, SmoothScroll, HammerSliding, SliderIntersectionObserver, ItemIntersectionObserver, SliderResizeObserver]\r\n})\r\nexport class GallerySliderComponent implements AfterViewInit, OnChanges {\r\n\r\n  /** Stream that emits the slider position */\r\n  readonly position$: Subject<SmoothScrollOptions> = new Subject<SmoothScrollOptions>();\r\n\r\n  /** Slider adapter */\r\n  adapter: SliderAdapter;\r\n\r\n  /** Stream that emits the item components once they're initialized */\r\n  items$: Observable<GalleryItemComponent[]>;\r\n\r\n  isScrolling: boolean;\r\n\r\n  isSliding: boolean;\r\n\r\n  isResizing: boolean;\r\n\r\n  /** Gallery ID */\r\n  @Input() galleryId: string;\r\n\r\n  /** Gallery state */\r\n  @Input() state: GalleryState;\r\n\r\n  /** Gallery config */\r\n  @Input() config: GalleryConfig;\r\n\r\n  /** Stream that emits when item is clicked */\r\n  @Output() itemClick: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  /** Stream that emits when an error occurs */\r\n  @Output() error: EventEmitter<GalleryError> = new EventEmitter<GalleryError>();\r\n\r\n  /** Slider ElementRef */\r\n  @ViewChild('slider', { static: true }) sliderEl: ElementRef<HTMLElement>;\r\n\r\n  @ViewChildren(GalleryItemComponent) items: QueryList<GalleryItemComponent> = new QueryList<GalleryItemComponent>();\r\n\r\n  get slider(): HTMLElement {\r\n    return this.sliderEl.nativeElement;\r\n  }\r\n\r\n  constructor(private _gallery: Gallery) {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.config) {\r\n      if (changes.config.currentValue?.orientation !== changes.config.previousValue?.orientation) {\r\n        switch (this.config.orientation) {\r\n          case Orientation.Horizontal:\r\n            this.adapter = new HorizontalAdapter(this.slider, this.config);\r\n            break;\r\n          case Orientation.Vertical:\r\n            this.adapter = new VerticalAdapter(this.slider, this.config);\r\n            break;\r\n        }\r\n      }\r\n      if (!changes.config.firstChange) {\r\n        // Keep the correct sliding position when direction changes\r\n        requestAnimationFrame(() => {\r\n          this.scrollToIndex(this.state.currIndex, 'auto');\r\n        });\r\n      }\r\n    }\r\n\r\n    // Scroll to current index\r\n    if (changes.state) {\r\n      if (changes.state.currentValue?.currIndex !== changes.state.previousValue?.currIndex) {\r\n        requestAnimationFrame(() => {\r\n          this.scrollToIndex(this.state.currIndex, changes.state.firstChange ? 'auto' : this.state.behavior);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.items.notifyOnChanges();\r\n    this.items$ = this.items.changes.pipe(\r\n      // In some cases, items is not notified at first, need to force start the stream\r\n      startWith(null),\r\n      map(() => this.items.toArray())\r\n    );\r\n  }\r\n\r\n  trackByFn(index: number, item: any) {\r\n    return item.type;\r\n  }\r\n\r\n  onActiveIndexChange(index: number): void {\r\n    if (index === -1) {\r\n      // Reset active index position\r\n      this.scrollToIndex(this.state.currIndex, 'smooth');\r\n    } else {\r\n      this._gallery.ref(this.galleryId).set(index, 'smooth');\r\n    }\r\n  }\r\n\r\n  private scrollToIndex(index: number, behavior: ScrollBehavior): void {\r\n    const el: HTMLElement = this.items.get(index)?.nativeElement;\r\n    if (el) {\r\n      const pos: SmoothScrollOptions = this.adapter.getScrollToValue(el, behavior || this.config.scrollBehavior);\r\n      this.position$.next(pos);\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n  order: 1;\r\n  flex: 1;\r\n}\r\n\r\n.g-slider {\r\n  display: flex;\r\n  align-items: center;\r\n  transition: var(--g-height-transition);\r\n  min-height: 100%;\r\n  min-width: 100%;\r\n  max-height: 100%;\r\n  max-width: 100%;\r\n  height: var(--slider-height, 100%);\r\n  width: var(--slider-width, 100%);\r\n\r\n  overflow: var(--slider-overflow);\r\n  scroll-snap-type: var(--slider-scroll-snap-type);\r\n  flex-direction: var(--slider-flex-direction);\r\n\r\n  scrollbar-width: none;\r\n\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n\r\n  &.g-sliding, &.g-scrolling {\r\n    // Disable mouse click on gallery items/thumbnails when the slider is being dragged using the mouse\r\n    .g-slider-content {\r\n      pointer-events: none;\r\n    }\r\n  }\r\n\r\n  &[centralised=\"true\"] {\r\n    &:before, &:after {\r\n      content: '';\r\n    }\r\n\r\n    &:before {\r\n      flex: 0 0 var(--slider-centralize-start-size);\r\n    }\r\n\r\n    &:after {\r\n      flex: 0 0 var(--slider-centralize-end-size);\r\n    }\r\n  }\r\n}\r\n\r\n.g-slider-content {\r\n  flex: 0 0 auto;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1px;\r\n  width: var(--slider-content-width, unset);\r\n  height: var(--slider-content-height, unset);\r\n  flex-direction: var(--slider-flex-direction);\r\n}\r\n",
                    "styleUrl": "./gallery-slider.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_gallery",
                        "type": "Gallery",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 119,
                "jsdoctags": [
                    {
                        "name": "_gallery",
                        "type": "Gallery",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit",
                "OnChanges"
            ],
            "accessors": {
                "slider": {
                    "name": "slider",
                    "getSignature": {
                        "name": "slider",
                        "type": "",
                        "returnType": "HTMLElement",
                        "line": 117
                    }
                }
            }
        },
        {
            "name": "GalleryThumbComponent",
            "id": "component-GalleryThumbComponent-319cc5375529a354d03dd248985279976b8f789f3f0ac96bd512add0afb24bbc9369c7922a86b7d84ec489068c9e7143c3d0ca5668ce2a70f90d12d9868f6436",
            "file": "projects/ng-gallery/src/lib/components/gallery-thumb.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gallery-thumb",
            "styleUrls": [
                "./gallery-thumb.scss"
            ],
            "styles": [],
            "template": "<gallery-image [src]=\"data.thumb\"\n               [alt]=\"data.alt + '-thumbnail'\"\n               [isThumbnail]=\"true\"\n               [loadingIcon]=\"config.thumbLoadingIcon\"\n               [loadingError]=\"config.thumbLoadingError\"\n               (error)=\"error.emit($event)\"></gallery-image>\n\n<div *ngIf=\"config.thumbTemplate\" class=\"g-template g-thumb-template\">\n  <ng-container *ngTemplateOutlet=\"config.thumbTemplate; context: imageContext\"></ng-container>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "GalleryConfig",
                    "decorators": []
                },
                {
                    "name": "count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nThe number of total items",
                    "description": "<p>The number of total items</p>\n",
                    "line": 44,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "currIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nGallery current index",
                    "description": "<p>Gallery current index</p>\n",
                    "line": 47,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nItem's data, this object contains the data required to display the content (e.g. src path)",
                    "description": "<p>Item&#39;s data, this object contains the data required to display the content (e.g. src path)</p>\n",
                    "line": 53,
                    "type": "ImageItemData",
                    "decorators": []
                },
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nItem's index in the gallery",
                    "description": "<p>Item&#39;s index in the gallery</p>\n",
                    "line": 41,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nItem's type 'image', 'video', 'youtube', 'iframe'",
                    "description": "<p>Item&#39;s type &#39;image&#39;, &#39;video&#39;, &#39;youtube&#39;, &#39;iframe&#39;</p>\n",
                    "line": 50,
                    "type": "GalleryItemType",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "error",
                    "defaultValue": "new EventEmitter<ErrorEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "EventEmitter<ErrorEvent>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "attr.galleryIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "class.g-active-thumb",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "GalleryImageComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  HostBinding,\r\n  EventEmitter,\r\n  ElementRef,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GalleryItemContext } from '../directives/gallery-item-def.directive';\r\nimport { GalleryImageComponent } from './templates/gallery-image.component';\r\nimport { ImageItemData } from './templates/items.model';\r\nimport { GalleryConfig } from '../models/config.model';\r\nimport { GalleryItemType } from '../models/constants';\r\n\r\n@Component({\r\n  selector: 'gallery-thumb',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['./gallery-thumb.scss'],\r\n  template: `\r\n    <gallery-image [src]=\"data.thumb\"\r\n                   [alt]=\"data.alt + '-thumbnail'\"\r\n                   [isThumbnail]=\"true\"\r\n                   [loadingIcon]=\"config.thumbLoadingIcon\"\r\n                   [loadingError]=\"config.thumbLoadingError\"\r\n                   (error)=\"error.emit($event)\"></gallery-image>\r\n\r\n    <div *ngIf=\"config.thumbTemplate\" class=\"g-template g-thumb-template\">\r\n      <ng-container *ngTemplateOutlet=\"config.thumbTemplate; context: imageContext\"></ng-container>\r\n    </div>\r\n  `,\r\n  standalone: true,\r\n  imports: [CommonModule, GalleryImageComponent]\r\n})\r\nexport class GalleryThumbComponent {\r\n\r\n  @Input() config: GalleryConfig;\r\n\r\n  /** Item's index in the gallery */\r\n  @Input() index: number;\r\n\r\n  /** The number of total items */\r\n  @Input() count: number;\r\n\r\n  /** Gallery current index */\r\n  @Input() currIndex: number;\r\n\r\n  /** Item's type 'image', 'video', 'youtube', 'iframe' */\r\n  @Input() type: GalleryItemType;\r\n\r\n  /** Item's data, this object contains the data required to display the content (e.g. src path) */\r\n  @Input() data: ImageItemData;\r\n\r\n  @Output() error: EventEmitter<ErrorEvent> = new EventEmitter<ErrorEvent>();\r\n\r\n  @HostBinding('class.g-active-thumb') get isActive() {\r\n    return this.index === this.currIndex;\r\n  }\r\n\r\n  @HostBinding('attr.galleryIndex') get isIndexAttr(): number {\r\n    return this.index;\r\n  }\r\n\r\n  get imageContext(): GalleryItemContext<ImageItemData> {\r\n    return {\r\n      $implicit: this.data,\r\n      index: this.index,\r\n      type: this.type,\r\n      active: this.isActive,\r\n      count: this.count,\r\n      first: this.index === 0,\r\n      last: this.index === this.count - 1\r\n    }\r\n  }\r\n\r\n  get nativeElement(): HTMLElement {\r\n    return this.el.nativeElement;\r\n  }\r\n\r\n  constructor(private el: ElementRef<HTMLElement>) {\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  cursor: var(--g-thumb-cursor);\r\n  height: var(--g-thumb-height);\r\n  width: var(--g-thumb-width);\r\n  max-height: var(--g-thumb-height);\r\n  max-width: var(--g-thumb-width);\r\n  align-self: center;\r\n  background: black;\r\n  position: relative;\r\n  display: flex;\r\n  overflow: hidden;\r\n  flex-direction: column;\r\n  flex: 0 0 auto;\r\n  scroll-snap-align: center;\r\n  // Disable highlighting the elements on mouse move or click\r\n  user-select: none;\r\n  -webkit-user-drag: none;\r\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n\r\n  --g-thumb-opacity: 0.5;\r\n\r\n  &.g-active-thumb {\r\n    --g-thumb-opacity: 1;\r\n  }\r\n}\r\n\r\n.g-template {\r\n  position: absolute;\r\n  z-index: 10;\r\n  left: 0;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n}\r\n",
                    "styleUrl": "./gallery-thumb.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 79,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "isActive": {
                    "name": "isActive",
                    "getSignature": {
                        "name": "isActive",
                        "type": "",
                        "returnType": "",
                        "line": 57
                    }
                },
                "isIndexAttr": {
                    "name": "isIndexAttr",
                    "getSignature": {
                        "name": "isIndexAttr",
                        "type": "number",
                        "returnType": "number",
                        "line": 61
                    }
                },
                "imageContext": {
                    "name": "imageContext",
                    "getSignature": {
                        "name": "imageContext",
                        "type": "",
                        "returnType": "GalleryItemContext<ImageItemData>",
                        "line": 65
                    }
                },
                "nativeElement": {
                    "name": "nativeElement",
                    "getSignature": {
                        "name": "nativeElement",
                        "type": "",
                        "returnType": "HTMLElement",
                        "line": 77
                    }
                }
            }
        },
        {
            "name": "GalleryThumbsComponent",
            "id": "component-GalleryThumbsComponent-de19f00cdfd53eb5cbb332ead8da65e2cafd15883a14cfea3cbf114e4219ce6927795a87f8565ae004edbd11823b07479c9871236e2a1cd241dfd6a1bea65647",
            "file": "projects/ng-gallery/src/lib/components/gallery-thumbs.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gallery-thumbs",
            "styleUrls": [
                "./gallery-thumbs.scss"
            ],
            "styles": [],
            "template": "<div #slider\n     class=\"g-slider\"\n     [smoothScroll]=\"position$ | async\"\n     [smoothScrollInterruptOnMousemove]=\"!config.disableThumbMouseScroll\"\n     [attr.centralised]=\"config.thumbCentralized || adapter.isContentLessThanContainer\"\n     [hammerSliding]=\"!config.disableThumbMouseScroll\"\n     [galleryId]=\"galleryId\"\n     [items]=\"items$ | async\"\n     [state]=\"state\"\n     [config]=\"config\"\n     [adapter]=\"adapter\"\n     (thumbResizeObserver)=\"scrollToIndex(state.currIndex, 'auto')\"\n     (activeIndexChange)=\"onActiveIndexChange($event)\">\n  <div class=\"g-slider-content\">\n    <gallery-thumb *ngFor=\"let item of state.items; trackBy: trackByFn; index as i\"\n                   [attr.galleryId]=\"galleryId\"\n                   [type]=\"item.type\"\n                   [config]=\"config\"\n                   [data]=\"item.data\"\n                   [currIndex]=\"state.currIndex\"\n                   [index]=\"i\"\n                   [count]=\"state.items.length\"\n                   (click)=\"config.disableThumbs ? null : thumbClick.emit(i)\"\n                   (error)=\"error.emit({ itemIndex: i, error: $event })\"/>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nGallery config",
                    "description": "<p>Gallery config</p>\n",
                    "line": 79,
                    "type": "GalleryConfig",
                    "decorators": []
                },
                {
                    "name": "galleryId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nGallery ID",
                    "description": "<p>Gallery ID</p>\n",
                    "line": 73,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nGallery state",
                    "description": "<p>Gallery state</p>\n",
                    "line": 76,
                    "type": "GalleryState",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "error",
                    "defaultValue": "new EventEmitter<GalleryError>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nStream that emits when an error occurs",
                    "description": "<p>Stream that emits when an error occurs</p>\n",
                    "line": 85,
                    "type": "EventEmitter<GalleryError>"
                },
                {
                    "name": "thumbClick",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nStream that emits when thumb is clicked",
                    "description": "<p>Stream that emits when thumb is clicked</p>\n",
                    "line": 82,
                    "type": "EventEmitter<number>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "adapter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SliderAdapter",
                    "optional": false,
                    "description": "<p>Slider adapter</p>\n",
                    "line": 67,
                    "rawdescription": "\nSlider adapter"
                },
                {
                    "name": "items",
                    "defaultValue": "new QueryList<GalleryThumbComponent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<GalleryThumbComponent>",
                    "optional": false,
                    "description": "",
                    "line": 90,
                    "decorators": [
                        {
                            "name": "ViewChildren",
                            "stringifiedArguments": "GalleryThumbComponent"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "items$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<GalleryThumbComponent[]>",
                    "optional": false,
                    "description": "<p>Stream that emits the thumb components once they&#39;re initialized</p>\n",
                    "line": 70,
                    "rawdescription": "\nStream that emits the thumb components once they're initialized"
                },
                {
                    "name": "position$",
                    "defaultValue": "new Subject<SmoothScrollOptions>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<SmoothScrollOptions>",
                    "optional": false,
                    "description": "<p>Stream that emits the slider position</p>\n",
                    "line": 64,
                    "rawdescription": "\nStream that emits the slider position",
                    "modifierKind": [
                        146
                    ]
                },
                {
                    "name": "sliderEl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "<p>Slider ElementRef</p>\n",
                    "line": 88,
                    "rawdescription": "\nSlider ElementRef",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'slider', {static: true}"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onActiveIndexChange",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 143,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "scrollToIndex",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "behavior",
                            "type": "ScrollBehavior",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 152,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "behavior",
                            "type": "ScrollBehavior",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "trackByFn",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "item",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "item",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "GalleryThumbComponent",
                    "type": "component"
                },
                {
                    "name": "SmoothScroll"
                },
                {
                    "name": "HammerSliding"
                },
                {
                    "name": "ThumbResizeObserver"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  ViewChild,\r\n  ViewChildren,\r\n  EventEmitter,\r\n  AfterViewInit,\r\n  OnChanges,\r\n  QueryList,\r\n  SimpleChanges,\r\n  ElementRef,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Observable, Subject, map, startWith } from 'rxjs';\r\nimport { GalleryConfig } from '../models/config.model';\r\nimport { GalleryState, GalleryError } from '../models/gallery.model';\r\nimport { ThumbnailsPosition } from '../models/constants';\r\nimport { VerticalAdapter, HorizontalAdapter, SliderAdapter } from './adapters';\r\nimport { SmoothScroll, SmoothScrollOptions } from '../smooth-scroll';\r\nimport { GalleryThumbComponent } from './gallery-thumb.component';\r\nimport { HammerSliding } from '../gestures/hammer-sliding.directive';\r\nimport { ThumbResizeObserver } from '../observers/thumb-resize-observer.directive';\r\n\r\n@Component({\r\n  selector: 'gallery-thumbs',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['./gallery-thumbs.scss'],\r\n  template: `\r\n    <div #slider\r\n         class=\"g-slider\"\r\n         [smoothScroll]=\"position$ | async\"\r\n         [smoothScrollInterruptOnMousemove]=\"!config.disableThumbMouseScroll\"\r\n         [attr.centralised]=\"config.thumbCentralized || adapter.isContentLessThanContainer\"\r\n         [hammerSliding]=\"!config.disableThumbMouseScroll\"\r\n         [galleryId]=\"galleryId\"\r\n         [items]=\"items$ | async\"\r\n         [state]=\"state\"\r\n         [config]=\"config\"\r\n         [adapter]=\"adapter\"\r\n         (thumbResizeObserver)=\"scrollToIndex(state.currIndex, 'auto')\"\r\n         (activeIndexChange)=\"onActiveIndexChange($event)\">\r\n      <div class=\"g-slider-content\">\r\n        <gallery-thumb *ngFor=\"let item of state.items; trackBy: trackByFn; index as i\"\r\n                       [attr.galleryId]=\"galleryId\"\r\n                       [type]=\"item.type\"\r\n                       [config]=\"config\"\r\n                       [data]=\"item.data\"\r\n                       [currIndex]=\"state.currIndex\"\r\n                       [index]=\"i\"\r\n                       [count]=\"state.items.length\"\r\n                       (click)=\"config.disableThumbs ? null : thumbClick.emit(i)\"\r\n                       (error)=\"error.emit({ itemIndex: i, error: $event })\"/>\r\n      </div>\r\n    </div>\r\n  `,\r\n  standalone: true,\r\n  imports: [CommonModule, GalleryThumbComponent, SmoothScroll, HammerSliding, ThumbResizeObserver]\r\n})\r\nexport class GalleryThumbsComponent implements AfterViewInit, OnChanges {\r\n\r\n  /** Stream that emits the slider position */\r\n  readonly position$: Subject<SmoothScrollOptions> = new Subject<SmoothScrollOptions>();\r\n\r\n  /** Slider adapter */\r\n  adapter: SliderAdapter;\r\n\r\n  /** Stream that emits the thumb components once they're initialized */\r\n  items$: Observable<GalleryThumbComponent[]>;\r\n\r\n  /** Gallery ID */\r\n  @Input() galleryId: string;\r\n\r\n  /** Gallery state */\r\n  @Input() state: GalleryState;\r\n\r\n  /** Gallery config */\r\n  @Input() config: GalleryConfig;\r\n\r\n  /** Stream that emits when thumb is clicked */\r\n  @Output() thumbClick: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  /** Stream that emits when an error occurs */\r\n  @Output() error: EventEmitter<GalleryError> = new EventEmitter<GalleryError>();\r\n\r\n  /** Slider ElementRef */\r\n  @ViewChild('slider', { static: true }) sliderEl: ElementRef;\r\n\r\n  @ViewChildren(GalleryThumbComponent) items: QueryList<GalleryThumbComponent> = new QueryList<GalleryThumbComponent>();\r\n\r\n  get slider(): HTMLElement {\r\n    return this.sliderEl.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.config) {\r\n      // Sets sliding direction\r\n      if (changes.config.currentValue?.thumbPosition !== changes.config.previousValue?.thumbPosition) {\r\n        switch (this.config.thumbPosition) {\r\n          case ThumbnailsPosition.Right:\r\n          case ThumbnailsPosition.Left:\r\n            this.adapter = new VerticalAdapter(this.slider, this.config);\r\n            break;\r\n          case ThumbnailsPosition.Top:\r\n          case ThumbnailsPosition.Bottom:\r\n            this.adapter = new HorizontalAdapter(this.slider, this.config);\r\n            break;\r\n        }\r\n\r\n        if (!changes.config.firstChange) {\r\n          // Keep the correct sliding position when direction changes\r\n          requestAnimationFrame(() => {\r\n            this.scrollToIndex(this.state.currIndex, 'auto');\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    if (changes.state && (changes.state.firstChange || !this.config.detachThumbs)) {\r\n      if (changes.state.currentValue?.currIndex !== changes.state.previousValue?.currIndex) {\r\n        // Scroll slide to item when current index changes.\r\n        requestAnimationFrame(() => {\r\n          this.scrollToIndex(this.state.currIndex, changes.state?.firstChange ? 'auto' : 'smooth');\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.items.notifyOnChanges();\r\n    this.items$ = this.items.changes.pipe(\r\n      // In some cases, items is not notified at first, need to force start the stream\r\n      startWith(null),\r\n      map(() => this.items.toArray())\r\n    );\r\n  }\r\n\r\n  trackByFn(index: number, item: any) {\r\n    return item.type;\r\n  }\r\n\r\n  onActiveIndexChange(index: number): void {\r\n    if (index === -1) {\r\n      // Reset active index position\r\n      this.scrollToIndex(this.state.currIndex, 'smooth');\r\n    } else {\r\n      this.scrollToIndex(index, 'smooth');\r\n    }\r\n  }\r\n\r\n  scrollToIndex(value: number, behavior: ScrollBehavior): void {\r\n    const el: HTMLElement = this.items.get(value)?.nativeElement;\r\n    if (el) {\r\n      const pos: SmoothScrollOptions = this.adapter.getScrollToValue(el, behavior);\r\n      this.position$.next(pos);\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  max-height: 100%;\r\n  max-width: 100%;\r\n  display: block;\r\n  z-index: 100;\r\n}\r\n\r\n.g-slider {\r\n  display: flex;\r\n  align-items: center;\r\n  transition: var(--g-height-transition);\r\n  max-height: 100%;\r\n  min-width: 100%;\r\n  height: var(--thumb-slider-height);\r\n  width: var(--thumb-slider-width);\r\n\r\n  top: var(--thumb-slider-top);\r\n  left: var(--thumb-slider-left);\r\n  overflow: var(--thumb-slider-overflow);\r\n  scroll-snap-type: var(--slider-scroll-snap-type);\r\n  flex-direction: var(--thumb-slider-flex-direction);\r\n\r\n  scrollbar-width: none;\r\n\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n\r\n  // Disable mouse click on gallery items/thumbnails when the slider is being dragged using the mouse\r\n  &.g-sliding {\r\n    // Disable mouse click on gallery items/thumbnails when the slider is being dragged using the mouse\r\n    .g-slider-content {\r\n      pointer-events: none;\r\n    }\r\n  }\r\n\r\n  &[centralised=\"true\"] {\r\n    &:before, &:after {\r\n      content: '';\r\n    }\r\n\r\n    &:before {\r\n      flex: 0 0 var(--thumb-centralize-start-size);\r\n    }\r\n\r\n    &:after {\r\n      flex: 0 0 var(--thumb-centralize-end-size);\r\n    }\r\n  }\r\n}\r\n\r\n.g-slider-content {\r\n  flex: 0 0 auto;\r\n  display: flex;\r\n  flex-direction: var(--thumb-slider-flex-direction);\r\n  align-items: center;\r\n  gap: 1px;\r\n}\r\n",
                    "styleUrl": "./gallery-thumbs.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "AfterViewInit",
                "OnChanges"
            ],
            "accessors": {
                "slider": {
                    "name": "slider",
                    "getSignature": {
                        "name": "slider",
                        "type": "",
                        "returnType": "HTMLElement",
                        "line": 92
                    }
                }
            }
        },
        {
            "name": "GalleryVideoComponent",
            "id": "component-GalleryVideoComponent-8373f3076bce537ab094b2f99b71fead7a20a6fa2e14f19abf4fa0edfd03f4d2d2465bbe8caf0ae8429a916cd68da813b72cc2466caf5d0b8d718d54c16c1475",
            "file": "projects/ng-gallery/src/lib/components/templates/gallery-video.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gallery-video",
            "styleUrls": [],
            "styles": [],
            "template": "<video #video\n       [attr.mute]=\"mute\"\n       [attr.controlsList]=\"controlsList\"\n       [attr.disablePictureInPicture]=\"disablePictureInPicture\"\n       [disableRemotePlayback]=\"disableRemotePlayback\"\n       [controls]=\"controls\"\n       [loop]=\"loop\"\n       [poster]=\"poster\"\n       (error)=\"error.emit($event)\">\n  <ng-container *ngFor=\"let src of videoSources\">\n    <source *ngIf=\"src?.type; else noType\" [src]=\"src?.url\" [type]=\"src.type\"/>\n    <ng-template #noType>\n      <source [src]=\"src?.url\"/>\n    </ng-template>\n  </ng-container>\n</video>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "controls",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "controlsList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "\"nodownload\" | \"nofullscreen\" | \"noremoteplayback\"",
                    "decorators": []
                },
                {
                    "name": "disablePictureInPicture",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disableRemotePlayback",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "loop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "mute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "pause",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "play",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "poster",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "src",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string | literal type[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "error",
                    "defaultValue": "new EventEmitter<ErrorEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nStream that emits when an error occurs",
                    "description": "<p>Stream that emits when an error occurs</p>\n",
                    "line": 60,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "video",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'video', {static: true}"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "videoSources",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgFor"
                },
                {
                    "name": "NgIf"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, OnInit, ViewChild, ElementRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { NgFor, NgIf } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'gallery-video',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <video #video\r\n           [attr.mute]=\"mute\"\r\n           [attr.controlsList]=\"controlsList\"\r\n           [attr.disablePictureInPicture]=\"disablePictureInPicture\"\r\n           [disableRemotePlayback]=\"disableRemotePlayback\"\r\n           [controls]=\"controls\"\r\n           [loop]=\"loop\"\r\n           [poster]=\"poster\"\r\n           (error)=\"error.emit($event)\">\r\n      <ng-container *ngFor=\"let src of videoSources\">\r\n        <source *ngIf=\"src?.type; else noType\" [src]=\"src?.url\" [type]=\"src.type\"/>\r\n        <ng-template #noType>\r\n          <source [src]=\"src?.url\"/>\r\n        </ng-template>\r\n      </ng-container>\r\n    </video>\r\n  `,\r\n  standalone: true,\r\n  imports: [NgFor, NgIf]\r\n})\r\nexport class GalleryVideoComponent implements OnInit {\r\n\r\n  videoSources: { url: string, type?: string }[];\r\n\r\n  @Input() src: string | { url: string, type?: string }[];\r\n  @Input() poster: string;\r\n  @Input() mute: boolean;\r\n  @Input() loop: boolean;\r\n  @Input() controls: boolean;\r\n  @Input() controlsList: 'nodownload' | 'nofullscreen' | 'noremoteplayback';\r\n  @Input() disableRemotePlayback: boolean;\r\n  @Input() disablePictureInPicture: boolean;\r\n\r\n  @Input('pause') set pauseVideo(shouldPause: boolean) {\r\n    if (this.video.nativeElement) {\r\n      const video: HTMLVideoElement = this.video.nativeElement;\r\n      if (shouldPause && !video.paused) {\r\n        video.pause();\r\n      }\r\n    }\r\n  }\r\n\r\n  @Input('play') set playVideo(shouldPlay: boolean) {\r\n    if (this.video.nativeElement) {\r\n      const video: HTMLVideoElement = this.video.nativeElement;\r\n      if (shouldPlay) {\r\n        video.play();\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Stream that emits when an error occurs */\r\n  @Output() error = new EventEmitter<ErrorEvent>();\r\n\r\n  @ViewChild('video', { static: true }) video: ElementRef;\r\n\r\n  ngOnInit() {\r\n    if (this.src instanceof Array) {\r\n      // If video has multiple sources\r\n      this.videoSources = [...this.src];\r\n    } else {\r\n      this.videoSources = [{ url: this.src }];\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "pauseVideo": {
                    "name": "pauseVideo",
                    "setSignature": {
                        "name": "pauseVideo",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "shouldPause",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 41,
                        "jsdoctags": [
                            {
                                "name": "shouldPause",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "playVideo": {
                    "name": "playVideo",
                    "setSignature": {
                        "name": "playVideo",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "shouldPlay",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 50,
                        "jsdoctags": [
                            {
                                "name": "shouldPlay",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "name": "LightboxExampleComponent",
            "id": "component-LightboxExampleComponent-be406b9330227251e0d998f2d72189e3754f9e897029bddef8bf4ff2fa3efde370dc6248ccca9152a1768d358fda481c7b7a5427015371160f96d042bba32940",
            "file": "projects/ng-gallery/src/stories/lightbox/lightbox-example.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lightbox-example",
            "styleUrls": [],
            "styles": [
                "\n    .container {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 3px;\n      margin: 0 auto;\n      padding: 20px;\n      max-width: 768px;\n    }\n    img {\n      height: 90px;\n      width: 125px;\n      object-fit: cover;\n    }\n  "
            ],
            "template": "<div class=\"container\">\n  <img *ngFor=\"let item of items; index as i\"\n     class=\"grid-image\"\n     [src]=\"item.data.thumb\"\n     [lightbox]=\"i\"\n     [gallery]=\"galleryId\"/>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "GalleryItem[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "gallery",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Gallery",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "galleryId",
                    "defaultValue": "'lightbox'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "galleryRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GalleryRef",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "lightbox",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Lightbox",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "LightboxModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnDestroy, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Gallery, GalleryItem, GalleryRef } from 'ng-gallery';\r\nimport { Lightbox, LightboxModule } from 'ng-gallery/lightbox';\r\n\r\n@Component({\r\n  selector: 'lightbox-example',\r\n  template: `\r\n    <div class=\"container\">\r\n      <img *ngFor=\"let item of items; index as i\"\r\n         class=\"grid-image\"\r\n         [src]=\"item.data.thumb\"\r\n         [lightbox]=\"i\"\r\n         [gallery]=\"galleryId\"/>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .container {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      gap: 3px;\r\n      margin: 0 auto;\r\n      padding: 20px;\r\n      max-width: 768px;\r\n    }\r\n    img {\r\n      height: 90px;\r\n      width: 125px;\r\n      object-fit: cover;\r\n    }\r\n  `],\r\n  imports: [CommonModule, LightboxModule],\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LightboxExampleComponent implements OnInit, OnDestroy {\r\n\r\n  galleryId: string = 'lightbox';\r\n\r\n  galleryRef: GalleryRef;\r\n\r\n  @Input() items: GalleryItem[];\r\n\r\n  constructor(public gallery: Gallery, public lightbox: Lightbox) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.galleryRef = this.gallery.ref('lightbox', {\r\n      thumbPosition: 'top',\r\n      imageSize: 'cover',\r\n      autoHeight: false\r\n    });\r\n\r\n    this.galleryRef.load(this.items);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.galleryRef.destroy();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    .container {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 3px;\n      margin: 0 auto;\n      padding: 20px;\n      max-width: 768px;\n    }\n    img {\n      height: 90px;\n      width: 125px;\n      object-fit: cover;\n    }\n  \n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "gallery",
                        "type": "Gallery",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "lightbox",
                        "type": "Lightbox",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 42,
                "jsdoctags": [
                    {
                        "name": "gallery",
                        "type": "Gallery",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "lightbox",
                        "type": "Lightbox",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ]
        }
    ],
    "modules": [
        {
            "name": "GalleryModule",
            "id": "module-GalleryModule-90f9d1f7efe4d47d235a2518dd69bdc5f50065fdc02b9aa3ebc79e364b001092de31ebe30487e7678eb04ad320c7ad562149c0fa066e2545945bf214e26ec8ed",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-gallery/src/lib/gallery.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { GalleryComponent } from './components/gallery.component';\r\nimport { GalleryImageDef } from './directives/gallery-image-def.directive';\r\nimport { GalleryThumbDef } from './directives/gallery-thumb-def.directive';\r\nimport { GalleryItemDef } from './directives/gallery-item-def.directive';\r\nimport { GalleryBoxDef } from './directives/gallery-box-def.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    GalleryComponent,\r\n    GalleryItemDef,\r\n    GalleryImageDef,\r\n    GalleryThumbDef,\r\n    GalleryBoxDef\r\n  ],\r\n  exports: [\r\n    GalleryComponent,\r\n    GalleryItemDef,\r\n    GalleryImageDef,\r\n    GalleryThumbDef,\r\n    GalleryBoxDef\r\n  ]\r\n})\r\nexport class GalleryModule {\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "GalleryBoxDef"
                        },
                        {
                            "name": "GalleryComponent"
                        },
                        {
                            "name": "GalleryImageDef"
                        },
                        {
                            "name": "GalleryItemDef"
                        },
                        {
                            "name": "GalleryThumbDef"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "GalleryBoxDef"
                        },
                        {
                            "name": "GalleryComponent"
                        },
                        {
                            "name": "GalleryImageDef"
                        },
                        {
                            "name": "GalleryItemDef"
                        },
                        {
                            "name": "GalleryThumbDef"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "API_KEY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/stories/pixabay/pixabay.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'560162-704dd2880c027f22c62ab7941'"
            },
            {
                "name": "AutoHeightExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  parameters: { controls: { exclude: /.*/g } },\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `<gallery [items]=\"items\" autoHeight />`,\n  }),\n  loaders: [async () => ({ items: await getHDImages('tigers') })],\n}"
            },
            {
                "name": "AutoplayExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  parameters: { controls: { exclude: /.*/g } },\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `<gallery [items]=\"items\" autoplay />`,\n  }),\n  loaders: [async () => ({ items: await getHDImages('airplane') })],\n}"
            },
            {
                "name": "BoxTemplateExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/stories/custom-templates/CustomTemplates.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args: CustomTemplateComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `\n      <gallery [items]=\"items\">\n        <div *galleryBoxDef=\"let state; config\" class=\"my-box\">\n          <div>This is fixed overlay template</div>\n          <img src=\"https://user-images.githubusercontent.com/8130692/36171173-ad0da54c-1112-11e8-85bf-843c5f70efdc.png\">\n        </div>\n      </gallery>\n    `,\n    styles: [\n      `\n      .my-box {\n        width: 200px;\n        height: 50px;\n        color: white;\n      }\n      img {\n        position: absolute;\n        z-index: 999;\n        width: 40px;\n        height: 40px;\n        top: 20px;\n        left: 20px;\n      }\n    `,\n    ],\n  }),\n  loaders: [async () => ({ items: await getHDImages('sea') })],\n}"
            },
            {
                "name": "BulletExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  parameters: { controls: { exclude: /.*/g } },\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `<gallery [items]=\"items\" bullets />`,\n  }),\n  loaders: [async () => ({ items: await getHDImages('football') })],\n}"
            },
            {
                "name": "CounterExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  parameters: { controls: { exclude: /.*/g } },\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `<gallery [items]=\"items\" counter />`,\n  }),\n  loaders: [async () => ({ items: await getHDImages('basketball') })],\n}"
            },
            {
                "name": "defaultConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/lib/utils/gallery.default.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "GalleryConfig",
                "defaultValue": "{\r\n  nav: true,\r\n  loop: false,\r\n  bullets: false,\r\n  thumbs: false,\r\n  debug: false,\r\n  bulletSize: 6,\r\n  counter: false,\r\n  autoplay: false,\r\n  thumbWidth: 120,\r\n  thumbHeight: 90,\r\n  disableBullets: false,\r\n  disableThumbs: false,\r\n  disableScroll: false,\r\n  disableThumbScroll: false,\r\n  disableMouseScroll: false,\r\n  disableThumbMouseScroll: false,\r\n  autoplayInterval: 3000,\r\n  scrollDuration: 468,\r\n  scrollEase: {\r\n    x1: 0.42,\r\n    y1: 0,\r\n    x2: 0.58,\r\n    y2: 1\r\n  },\r\n  thumbCentralized: false,\r\n  thumbAutosize: false,\r\n  itemAutosize: false,\r\n  autoHeight: false,\r\n  scrollBehavior: 'smooth',\r\n  resizeDebounceTime: 0,\r\n  loadingAttr: LoadingAttr.Lazy,\r\n  imageSize: ImageSize.Contain,\r\n  thumbImageSize: ImageSize.Cover,\r\n  bulletPosition: BulletsPosition.Bottom,\r\n  counterPosition: CounterPosition.Top,\r\n  thumbPosition: ThumbnailsPosition.Bottom,\r\n  loadingStrategy: LoadingStrategy.Preload,\r\n  orientation: Orientation.Horizontal,\r\n  navIcon: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M0 256C0 397.4 114.6 512 256 512s256-114.6 256-256S397.4 0 256 0S0 114.6 0 256zM241 377c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l87-87-87-87c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0L345 239c9.4 9.4 9.4 24.6 0 33.9L241 377z\"/></svg>`,\r\n  // navIcon: `<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"512px\" height=\"512px\" enable-background=\"new 0 0 240.823 240.823\" version=\"1.1\" viewBox=\"0 0 240.823 240.823\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m183.19 111.82l-108.3-108.26c-4.752-4.74-12.451-4.74-17.215 0-4.752 4.74-4.752 12.439 0 17.179l99.707 99.671-99.695 99.671c-4.752 4.74-4.752 12.439 0 17.191 4.752 4.74 12.463 4.74 17.215 0l108.3-108.26c4.68-4.691 4.68-12.511-0.012-17.19z\"></svg>`,\r\n  loadingIcon: `<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg stroke=\"#fff\" viewBox=\"0 0 44 44\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\" stroke-width=\"2\"><circle cx=\"22\" cy=\"22\" r=\"1\"><animate attributeName=\"r\" begin=\"0s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.165, 0.84, 0.44, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 20\"/><animate attributeName=\"stroke-opacity\" begin=\"0s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.3, 0.61, 0.355, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 0\"/></circle><circle cx=\"22\" cy=\"22\" r=\"1\"><animate attributeName=\"r\" begin=\"-0.9s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.165, 0.84, 0.44, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 20\"/><animate attributeName=\"stroke-opacity\" begin=\"-0.9s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.3, 0.61, 0.355, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 0\"/></circle></g></svg>`\r\n}"
            },
            {
                "name": "defaultState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/lib/utils/gallery.default.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "GalleryState",
                "defaultValue": "{\r\n  action: GalleryAction.INITIALIZED,\r\n  isPlaying: false,\r\n  hasNext: false,\r\n  hasPrev: false,\r\n  currIndex: 0,\r\n  items: []\r\n}",
                "rawdescription": "Initial state",
                "description": "<p>Initial state</p>\n"
            },
            {
                "name": "DIRECTION_DOWN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/lib/components/adapters/main-adapters.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "16"
            },
            {
                "name": "DIRECTION_LEFT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/lib/components/adapters/main-adapters.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "2",
                "rawdescription": "A clone of HammerJs constants",
                "description": "<p>A clone of HammerJs constants</p>\n"
            },
            {
                "name": "DIRECTION_RIGHT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/lib/components/adapters/main-adapters.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "4"
            },
            {
                "name": "DIRECTION_UP",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/lib/components/adapters/main-adapters.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "8"
            },
            {
                "name": "filterActions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/lib/services/gallery-ref.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(actions: string[]) => {\r\n  return filter((state: GalleryState) => actions.indexOf(state.action) > -1);\r\n}"
            },
            {
                "name": "float32ArraySupported",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "typeof Float32Array === 'function'"
            },
            {
                "name": "GallerizeExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/stories/lightbox/Lightbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args: LightboxExampleComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `\n      <div class=\"container\" gallerize>\n        <img *ngFor=\"let item of items\"\n             [src]=\"item.data.thumb\"\n             [attr.imageSrc]=\"item.data.src\">\n      </div>\n    `,\n    styles: [\n      `\n      .container {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 3px;\n        margin: 0 auto;\n        padding: 20px;\n        max-width: 768px;\n      }\n      img {\n        height: 90px;\n        width: 125px;\n        object-fit: cover;\n      }\n    `,\n    ],\n  }),\n  loaders: [async () => ({ items: await getHDImages('ship') })],\n}"
            },
            {
                "name": "GallerizeGalleryExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/stories/lightbox/Lightbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args: LightboxExampleComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `\n      <gallery [items]=\"items\" gallerize />\n    `,\n  }),\n  loaders: [async () => ({ items: await getHDImages('ship') })],\n}"
            },
            {
                "name": "GALLERY_CONFIG",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/lib/models/config.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "InjectionToken<GalleryConfig>",
                "defaultValue": "new InjectionToken<GalleryConfig>('GALLERY_CONFIG')"
            },
            {
                "name": "Hammer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/lib/gestures/hammer-sliding.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "Hammer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/lib/smooth-scroll/smooth-scroll.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "imageFailedSvg",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/lib/components/templates/svg-assets.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<svg width=\"100\" height=\"100\" version=\"1.1\" viewBox=\"0 0 256 256\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\">\r\n <g transform=\"translate(1.4066 1.4066) scale(2.81)\">\r\n\\t<path d=\"m74.453 48.627c-5.538 0-11.075-2.107-15.291-6.324-6.11-6.11-7.768-14.99-5.024-22.629h-48.08c-3.346 1e-3 -6.058 2.713-6.058 6.059v16.322l23.834 20.315c2.278 1.942 5.573 2.119 8.047 0.434l14.382-9.801c2.33-1.588 5.408-1.531 7.677 0.141l27.15 20.001v-25.574c-2.156 0.692-4.394 1.056-6.637 1.056z\" fill=\"#c1e5f4\" stroke-linecap=\"round\"/>\r\n <circle cx=\"27.942\" cy=\"37.942\" r=\"6.072\" fill=\"#fff0a9\"/>\r\n <path d=\"m85.446 16.02c-6.061-6.061-15.922-6.061-21.983 0s-6.061 15.923 0 21.984c3.031 3.031 7.011 4.546 10.992 4.546 3.98 0 7.962-1.515 10.992-4.545 2.936-2.937 4.553-6.841 4.553-10.993s-1.617-8.056-4.554-10.992zm-3.555 3.555c1.987 1.986 3.081 4.627 3.081 7.436 0 1.95-0.538 3.813-1.525 5.438l-14.428-14.428c4.043-2.442 9.384-1.934 12.872 1.554zm-14.873 14.874c-3.486-3.487-3.997-8.829-1.554-12.873l14.426 14.427c-4.043 2.443-9.385 1.932-12.872-1.554z\" fill=\"#e29393\" stroke-linecap=\"round\"/>\r\n <path d=\"m0 40.043v32.425c0 3.346 2.712 6.058 6.058 6.058h68.974c3.346 0 6.058-2.712 6.058-6.058v-1.335l-27.15-20.001c-2.27-1.672-5.348-1.729-7.677-0.141l-14.383 9.801c-2.473 1.686-5.769 1.508-8.047-0.434l-23.833-20.315z\" fill=\"#96ea9c\" stroke-linecap=\"round\"/>\r\n</g>\r\n</svg>\r\n`"
            },
            {
                "name": "ImageSizeExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  parameters: { controls: { exclude: /.*/g } },\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `<gallery [items]=\"items\" imageSize=\"cover\" />`,\n  }),\n  loaders: [async () => ({ items: await getHDImages('tigers') })],\n}"
            },
            {
                "name": "ImageTemplateExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/stories/custom-templates/CustomTemplates.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args: CustomTemplateComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `\n      <gallery [items]=\"items\">\n        <div *galleryImageDef=\"let item\" class=\"my-image-overlay\">\n          {{ item?.alt }}\n        </div>\n      </gallery>\n    `,\n  }),\n  loaders: [async () => ({ items: await getHDImages('sea') })],\n}"
            },
            {
                "name": "ItemAutosizeExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  parameters: { controls: { exclude: /.*/g } },\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `<gallery [items]=\"items\" itemAutosize loadingStrategy=\"preload\" loadingAttr=\"eager\" />`,\n  }),\n  loaders: [async () => ({ items: await getHDImages('ship') })],\n}"
            },
            {
                "name": "ItemTemplateExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/stories/custom-templates/CustomTemplates.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args: CustomTemplateComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `\n      <gallery [items]=\"items\">\n        <div *galleryItemDef=\"let item\" class=\"my-item-template\">\n          <img [src]=\"item?.src\">\n        </div>\n      </gallery>\n    `,\n    styles: [\n      `\n      img {\n        object-fit: cover;\n        border: 10px white solid;\n        width: 400px;\n        height: 400px;\n      }\n    `,\n    ],\n  }),\n  loaders: [\n    async () => ({ items: await getHDImagesForCustomTemplate('sand') }),\n  ],\n}"
            },
            {
                "name": "kSampleStepSize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "1.0 / (kSplineTableSize - 1.0)"
            },
            {
                "name": "kSplineTableSize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "11"
            },
            {
                "name": "Lab",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: {\n      ...args,\n      items,\n    },\n    template: `\n      <gallery [items]=\"items\"\n               [orientation]=\"orientation\"\n               [scrollBehavior]=\"scrollBehavior\"\n               [scrollDuration]=\"scrollDuration\"\n               [disableScroll]=\"disableScroll\"\n               [disableMouseScroll]=\"disableMouseScroll\"\n               [autoHeight]=\"autoHeight\"\n               [itemAutosize]=\"itemAutosize\"\n               [thumbs]=\"thumbs\"\n               [thumbImageSize]=\"thumbImageSize\"\n               [thumbPosition]=\"thumbPosition\"\n               [thumbCentralized]=\"thumbCentralized\"\n               [thumbWidth]=\"thumbWidth\"\n               [thumbHeight]=\"thumbHeight\"\n               [disableThumbs]=\"disableThumbs\"\n               [detachThumbs]=\"detachThumbs\"\n               [thumbAutosize]=\"thumbAutosize\"\n               [disableThumbScroll]=\"disableThumbScroll\"\n               [disableThumbMouseScroll]=\"disableThumbMouseScroll\"\n               [bullets]=\"bullets\"\n               [bulletPosition]=\"bulletPosition\"\n               [bulletSize]=\"bulletSize\"\n               [disableBullets]=\"disableBullets\"\n               [resizeDebounceTime]=\"resizeDebounceTime\"\n               [nav]=\"nav\"\n               [loop]=\"loop\"\n               [debug]=\"debug\"\n               [counter]=\"counter\"\n               [counterPosition]=\"counterPosition\"\n               [autoplay]=\"autoplay\"\n               [autoplayInterval]=\"autoplayInterval\"\n               [imageSize]=\"imageSize\"\n               [loadingAttr]=\"loadingAttr\"\n               [loadingStrategy]=\"loadingStrategy\"/>\n    `,\n  }),\n  loaders: [\n    async () => ({\n      items: await getHDImages('jet fighter'),\n    }),\n  ],\n}",
                "rawdescription": "First Example for gallery",
                "description": "<p>First Example for gallery</p>\n"
            },
            {
                "name": "LightboxExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/stories/lightbox/Lightbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  parameters: {\n    docs: {\n      source: {\n        code: `\n          <div class=\"container\">\n            <img *ngFor=\"let item of items; index as i\"\n               class=\"grid-image\"\n               [src]=\"item.data.thumb\"\n               [lightbox]=\"i\"\n               [gallery]=\"galleryId\"/>\n          </div>\n        `,\n      },\n    },\n  },\n  render: (args: LightboxExampleComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n  }),\n  loaders: [async () => ({ items: await getHDImages('ship') })],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<GalleryComponent>",
                "defaultValue": "{\n  title: 'Documentations/Gallery',\n  component: GalleryComponent,\n  tags: ['autodocs'],\n  render: (args: GalleryComponent) => ({\n    props: {\n      ...args,\n    },\n  }),\n  decorators: [\n    applicationConfig({\n      providers: [provideAnimations()],\n    }),\n  ],\n  args: {\n    id: 'root',\n    scrollBehavior: 'smooth',\n    imageSize: ImageSize.Contain,\n    thumbImageSize: ImageSize.Cover,\n    bulletPosition: BulletsPosition.Bottom,\n    counterPosition: CounterPosition.Top,\n    orientation: Orientation.Horizontal,\n    loadingAttr: LoadingAttr.Lazy,\n    loadingStrategy: LoadingStrategy.Default,\n    thumbPosition: ThumbnailsPosition.Bottom,\n    scrollEase: {\n      x1: 0.42,\n      y1: 0,\n      x2: 0.58,\n      y2: 1,\n    },\n    bulletSize: 6,\n    thumbWidth: 120,\n    thumbHeight: 90,\n    autoplayInterval: 3000,\n    scrollDuration: 468,\n    resizeDebounceTime: 0,\n    nav: true,\n    bullets: true,\n    disableBullets: false,\n    loop: true,\n    debug: false,\n    thumbs: true,\n    counter: true,\n    autoplay: false,\n    autoHeight: false,\n    itemAutosize: false,\n    disableThumbs: false,\n    detachThumbs: false,\n    thumbAutosize: false,\n    disableScroll: false,\n    thumbCentralized: false,\n    disableThumbScroll: false,\n    disableMouseScroll: false,\n    disableThumbMouseScroll: false,\n  },\n  // Disables the long useless control description\n  argTypes: {\n    scrollBehavior: {\n      control: 'radio',\n      options: ['smooth', 'auto'],\n      table: {\n        defaultValue: { summary: 'smooth' },\n      },\n    },\n    imageSize: {\n      table: {\n        defaultValue: { summary: 'contain' },\n      },\n    },\n    thumbImageSize: {\n      table: {\n        defaultValue: { summary: 'cover' },\n      },\n    },\n    bulletPosition: {\n      table: {\n        defaultValue: { summary: 'bottom' },\n      },\n    },\n    counterPosition: {\n      table: {\n        defaultValue: { summary: 'top' },\n      },\n    },\n    orientation: {\n      table: {\n        defaultValue: { summary: 'horizontal' },\n      },\n    },\n    loadingAttr: {\n      table: {\n        defaultValue: { summary: 'lazy' },\n      },\n    },\n    loadingStrategy: {\n      table: {\n        defaultValue: { summary: 'default' },\n      },\n    },\n    thumbPosition: {\n      table: {\n        defaultValue: { summary: 'bottom' },\n      },\n    },\n    thumbCentralized: {\n      table: {\n        defaultValue: { summary: 'default' },\n      },\n    },\n    scrollEase: {\n      table: {\n        defaultValue: { summary: '{ x1: 0.42, y1: 0, x2: 0.58, y2: 1 }' },\n      },\n    },\n    nav: {\n      table: {\n        defaultValue: { summary: 'true' },\n      },\n    },\n    thumbs: {\n      table: {\n        defaultValue: { summary: 'true' },\n      },\n    },\n    loop: {\n      table: {\n        defaultValue: { summary: 'true' },\n      },\n    },\n    counter: {\n      table: {\n        defaultValue: { summary: 'true' },\n      },\n    },\n    bulletSize: {\n      table: {\n        defaultValue: { summary: '6' },\n      },\n    },\n    thumbWidth: {\n      table: {\n        defaultValue: { summary: '120' },\n      },\n    },\n    thumbHeight: {\n      table: {\n        defaultValue: { summary: '90' },\n      },\n    },\n    autoplayInterval: {\n      table: {\n        defaultValue: { summary: '3000' },\n      },\n    },\n    scrollDuration: {\n      table: {\n        defaultValue: { summary: '468' },\n      },\n    },\n    resizeDebounceTime: {\n      table: {\n        defaultValue: { summary: '0' },\n      },\n    },\n    error: {\n      control: false,\n    },\n    indexChange: {\n      control: false,\n    },\n    itemsChange: {\n      control: false,\n    },\n    itemClick: {\n      control: false,\n    },\n    thumbClick: {\n      control: false,\n    },\n    playingChange: {\n      control: false,\n    },\n    galleryRef: {\n      control: false,\n    },\n    load: {\n      control: false,\n    },\n    add: {\n      control: false,\n    },\n    addImage: {\n      control: false,\n    },\n    addVideo: {\n      control: false,\n    },\n    addIframe: {\n      control: false,\n    },\n    addYoutube: {\n      control: false,\n    },\n    remove: {\n      control: false,\n    },\n    next: {\n      control: false,\n    },\n    prev: {\n      control: false,\n    },\n    set: {\n      control: false,\n    },\n    reset: {\n      control: false,\n    },\n    play: {\n      control: false,\n    },\n    stop: {\n      control: false,\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/stories/custom-templates/CustomTemplates.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CustomTemplateComponent>",
                "defaultValue": "{\n  title: 'Documentations/CustomTemplates',\n  component: CustomTemplateComponent,\n  // tags: ['autodocs'],\n  render: (args: CustomTemplateComponent) => ({\n    props: {\n      ...args,\n    },\n  }),\n  decorators: [\n    moduleMetadata({\n      imports: [GalleryModule],\n    }),\n    applicationConfig({\n      providers: [provideAnimations()],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/stories/lightbox/Lightbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<LightboxExampleComponent>",
                "defaultValue": "{\n  title: 'Documentations/Lightbox',\n  component: LightboxExampleComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [LightboxModule],\n    }),\n    applicationConfig({\n      providers: [provideAnimations()],\n    }),\n  ],\n}"
            },
            {
                "name": "NavExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  parameters: { controls: { exclude: /.*/g } },\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `<gallery [items]=\"items\"/>`,\n  }),\n  loaders: [async () => ({ items: await getHDImages('lions') })],\n}"
            },
            {
                "name": "NavWithLoopExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  parameters: { controls: { exclude: /.*/g } },\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `<gallery [items]=\"items\" loop/>`,\n  }),\n  loaders: [async () => ({ items: await getHDImages('tigers') })],\n}"
            },
            {
                "name": "NEWTON_ITERATIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "4",
                "rawdescription": "https://github.com/gre/bezier-easing\r\nBezierEasing - use bezier curve for transition easing function\r\nby Gaëtan Renaudeau 2014 - 2015 – MIT License",
                "description": "<p><a href=\"https://github.com/gre/bezier-easing\">https://github.com/gre/bezier-easing</a>\nBezierEasing - use bezier curve for transition easing function\nby Gaëtan Renaudeau 2014 - 2015 – MIT License</p>\n"
            },
            {
                "name": "NEWTON_MIN_SLOPE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "0.001"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\r\n  parameters: {\r\n    layout: 'fullscreen',\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/i,\r\n      }\r\n    }\r\n  },\r\n}"
            },
            {
                "name": "SliderBehaviorExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  parameters: { controls: { exclude: /.*/g } },\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `<gallery [items]=\"items\" scrollBehavior=\"auto\"/>`,\n  }),\n  loaders: [async () => ({ items: await getHDImages('chips') })],\n}"
            },
            {
                "name": "SliderDirectionExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  parameters: { controls: { exclude: /.*/g } },\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `<gallery [items]=\"items\" orientation=\"vertical\" />`,\n  }),\n  loaders: [async () => ({ items: await getHDImages('tigers') })],\n}"
            },
            {
                "name": "SliderExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  parameters: { controls: { exclude: /.*/g } },\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `<gallery [items]=\"items\"/>`,\n  }),\n  loaders: [async () => ({ items: await getHDImages('chips') })],\n}"
            },
            {
                "name": "SUBDIVISION_MAX_ITERATIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "10"
            },
            {
                "name": "SUBDIVISION_PRECISION",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "0.0000001"
            },
            {
                "name": "ThumbAutosizeExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  parameters: { controls: { exclude: /.*/g } },\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `<gallery [items]=\"items\" thumbs thumbAutosize/>`,\n  }),\n  loaders: [async () => ({ items: await getHDImages('roads') })],\n}"
            },
            {
                "name": "ThumbDetachedExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  parameters: { controls: { exclude: /.*/g } },\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `<gallery [items]=\"items\" thumbs detachThumbs/>`,\n  }),\n  loaders: [async () => ({ items: await getHDImages('flowers') })],\n}"
            },
            {
                "name": "ThumbPositionExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  parameters: { controls: { exclude: /.*/g } },\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `<gallery [items]=\"items\" thumbs thumbPosition=\"bottom\"/>`,\n  }),\n  loaders: [async () => ({ items: await getHDImages('street') })],\n}"
            },
            {
                "name": "ThumbTemplateExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/stories/custom-templates/CustomTemplates.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args: CustomTemplateComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `\n      <gallery [items]=\"items\" thumbs>\n        <div *galleryThumbDef=\"let thumb\" class=\"my-thumb-overlay\">\n          {{ thumb?.alt }}\n        </div>\n      </gallery>\n    `,\n  }),\n  loaders: [async () => ({ items: await getHDImages('sea') })],\n}"
            },
            {
                "name": "ThumbViewExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  parameters: { controls: { exclude: /.*/g } },\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `<gallery [items]=\"items\" thumbs thumbCentralized/>`,\n  }),\n  loaders: [async () => ({ items: await getHDImages('landscape') })],\n}"
            }
        ],
        "functions": [
            {
                "name": "A",
                "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "aA1",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "aA2",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "aA1",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "aA2",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "B",
                "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "aA1",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "aA2",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "aA1",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "aA2",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "bezier",
                "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "mX1",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "mY1",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "mX2",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "mY2",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "mX1",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "mY1",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "mX2",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "mY2",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "binarySubdivide",
                "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "aX",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "aA",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "aB",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "mX1",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "mX2",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "aX",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "aA",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "aB",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "mX1",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "mX2",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "C",
                "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "aA1",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "aA1",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "calcBezier",
                "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "aT",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "aA1",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "aA2",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "aT",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "aA1",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "aA2",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "createIntersectionObserver",
                "file": "projects/ng-gallery/src/lib/observers/active-item-observer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "root",
                        "type": "HTMLElement",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "elements",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "rootMargin",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Observable<IntersectionObserverEntry>",
                "jsdoctags": [
                    {
                        "name": "root",
                        "type": "HTMLElement",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "elements",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "rootMargin",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getHDImages",
                "file": "projects/ng-gallery/src/stories/pixabay/pixabay.service.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "key",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Promise<GalleryItem[]>",
                "jsdoctags": [
                    {
                        "name": "key",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getHDImagesForCustomTemplate",
                "file": "projects/ng-gallery/src/stories/pixabay/pixabay.service.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "key",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Promise<GalleryItem[]>",
                "jsdoctags": [
                    {
                        "name": "key",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getSlope",
                "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "aT",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "aA1",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "aA2",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "aT",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "aA1",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "aA2",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "LinearEasing",
                "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "x",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "x",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "newtonRaphsonIterate",
                "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "aX",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "aGuessT",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "mX1",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "mX2",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "aX",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "aGuessT",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "mX1",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "mX2",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "resizeObservable",
                "file": "projects/ng-gallery/src/lib/utils/resize-observer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "el",
                        "type": "HTMLElement",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "setter",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "Observable<ResizeObserverEntry>",
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "HTMLElement",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "setter",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "GalleryConfig",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/ng-gallery/src/lib/models/config.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 190
            },
            {
                "name": "GalleryItemData",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "ImageItemData | VideoItemData | IframeItemData | YoutubeItemData",
                "file": "projects/ng-gallery/src/lib/components/templates/items.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "GalleryItemModel",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/ng-gallery/src/lib/components/templates/items.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "GalleryItemType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "GalleryItemTypes | string",
                "file": "projects/ng-gallery/src/lib/models/constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "HorizontalPosition",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"top\" | \"bottom\"",
                "file": "projects/ng-gallery/src/lib/models/config.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "IframeItemData",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/ng-gallery/src/lib/components/templates/items.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 190
            },
            {
                "name": "ImageItemData",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/ng-gallery/src/lib/components/templates/items.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 190
            },
            {
                "name": "ImageSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"contain\" | \"cover\"",
                "file": "projects/ng-gallery/src/lib/models/config.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "ItemState",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"success\" | \"loading\" | \"failed\"",
                "file": "projects/ng-gallery/src/lib/components/templates/items.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "LoadingAttr",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"eager\" | \"lazy\"",
                "file": "projects/ng-gallery/src/lib/models/config.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "LoadingStrategy",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"preload\" | \"lazy\" | \"default\"",
                "file": "projects/ng-gallery/src/lib/models/config.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "Orientation",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"horizontal\" | \"vertical\"",
                "file": "projects/ng-gallery/src/lib/models/config.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "SmoothScrollOptions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/ng-gallery/src/lib/smooth-scroll/smooth-scroll.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 190
            },
            {
                "name": "SmoothScrollToOptions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/ng-gallery/src/lib/smooth-scroll/smooth-scroll.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 190
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<GalleryComponent>",
                "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CustomTemplateComponent>",
                "file": "projects/ng-gallery/src/stories/custom-templates/CustomTemplates.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<LightboxExampleComponent>",
                "file": "projects/ng-gallery/src/stories/lightbox/Lightbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "ThumbsPosition",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"top\" | \"left\" | \"right\" | \"bottom\"",
                "file": "projects/ng-gallery/src/lib/models/config.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "VideoItemData",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/ng-gallery/src/lib/components/templates/items.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 190
            },
            {
                "name": "YoutubeItemData",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/ng-gallery/src/lib/components/templates/items.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 190
            }
        ],
        "enumerations": [
            {
                "name": "BulletsPosition",
                "childs": [
                    {
                        "name": "Top",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "top"
                    },
                    {
                        "name": "Bottom",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "bottom"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/ng-gallery/src/lib/models/constants.ts"
            },
            {
                "name": "CounterPosition",
                "childs": [
                    {
                        "name": "Top",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "top"
                    },
                    {
                        "name": "Bottom",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "bottom"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/ng-gallery/src/lib/models/constants.ts"
            },
            {
                "name": "GalleryAction",
                "childs": [
                    {
                        "name": "INITIALIZED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "initialized"
                    },
                    {
                        "name": "ITEMS_CHANGED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "itemsChanged"
                    },
                    {
                        "name": "INDEX_CHANGED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "indexChanged"
                    },
                    {
                        "name": "PLAY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "play"
                    },
                    {
                        "name": "STOP",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "stop"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/ng-gallery/src/lib/models/constants.ts"
            },
            {
                "name": "GalleryItemTypes",
                "childs": [
                    {
                        "name": "Image",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "image"
                    },
                    {
                        "name": "Video",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "video"
                    },
                    {
                        "name": "Youtube",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "youtube"
                    },
                    {
                        "name": "Iframe",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "iframe"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/ng-gallery/src/lib/models/constants.ts"
            },
            {
                "name": "ImageSize",
                "childs": [
                    {
                        "name": "Cover",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "cover"
                    },
                    {
                        "name": "Contain",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "contain"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/ng-gallery/src/lib/models/constants.ts"
            },
            {
                "name": "LoadingAttr",
                "childs": [
                    {
                        "name": "Eager",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "eager"
                    },
                    {
                        "name": "Lazy",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "lazy"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/ng-gallery/src/lib/models/constants.ts"
            },
            {
                "name": "LoadingStrategy",
                "childs": [
                    {
                        "name": "Preload",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "preload"
                    },
                    {
                        "name": "Lazy",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "lazy"
                    },
                    {
                        "name": "Default",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "default"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/ng-gallery/src/lib/models/constants.ts"
            },
            {
                "name": "Orientation",
                "childs": [
                    {
                        "name": "Horizontal",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "horizontal"
                    },
                    {
                        "name": "Vertical",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "vertical"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/ng-gallery/src/lib/models/constants.ts"
            },
            {
                "name": "ThumbnailsPosition",
                "childs": [
                    {
                        "name": "Top",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "top"
                    },
                    {
                        "name": "Left",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "left"
                    },
                    {
                        "name": "Right",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "right"
                    },
                    {
                        "name": "Bottom",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "bottom"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/ng-gallery/src/lib/models/constants.ts"
            }
        ],
        "groupedVariables": {
            "projects/ng-gallery/src/stories/pixabay/pixabay.service.ts": [
                {
                    "name": "API_KEY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/stories/pixabay/pixabay.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'560162-704dd2880c027f22c62ab7941'"
                }
            ],
            "projects/ng-gallery/src/stories/basic/Gallery.stories.ts": [
                {
                    "name": "AutoHeightExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  parameters: { controls: { exclude: /.*/g } },\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `<gallery [items]=\"items\" autoHeight />`,\n  }),\n  loaders: [async () => ({ items: await getHDImages('tigers') })],\n}"
                },
                {
                    "name": "AutoplayExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  parameters: { controls: { exclude: /.*/g } },\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `<gallery [items]=\"items\" autoplay />`,\n  }),\n  loaders: [async () => ({ items: await getHDImages('airplane') })],\n}"
                },
                {
                    "name": "BulletExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  parameters: { controls: { exclude: /.*/g } },\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `<gallery [items]=\"items\" bullets />`,\n  }),\n  loaders: [async () => ({ items: await getHDImages('football') })],\n}"
                },
                {
                    "name": "CounterExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  parameters: { controls: { exclude: /.*/g } },\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `<gallery [items]=\"items\" counter />`,\n  }),\n  loaders: [async () => ({ items: await getHDImages('basketball') })],\n}"
                },
                {
                    "name": "ImageSizeExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  parameters: { controls: { exclude: /.*/g } },\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `<gallery [items]=\"items\" imageSize=\"cover\" />`,\n  }),\n  loaders: [async () => ({ items: await getHDImages('tigers') })],\n}"
                },
                {
                    "name": "ItemAutosizeExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  parameters: { controls: { exclude: /.*/g } },\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `<gallery [items]=\"items\" itemAutosize loadingStrategy=\"preload\" loadingAttr=\"eager\" />`,\n  }),\n  loaders: [async () => ({ items: await getHDImages('ship') })],\n}"
                },
                {
                    "name": "Lab",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: {\n      ...args,\n      items,\n    },\n    template: `\n      <gallery [items]=\"items\"\n               [orientation]=\"orientation\"\n               [scrollBehavior]=\"scrollBehavior\"\n               [scrollDuration]=\"scrollDuration\"\n               [disableScroll]=\"disableScroll\"\n               [disableMouseScroll]=\"disableMouseScroll\"\n               [autoHeight]=\"autoHeight\"\n               [itemAutosize]=\"itemAutosize\"\n               [thumbs]=\"thumbs\"\n               [thumbImageSize]=\"thumbImageSize\"\n               [thumbPosition]=\"thumbPosition\"\n               [thumbCentralized]=\"thumbCentralized\"\n               [thumbWidth]=\"thumbWidth\"\n               [thumbHeight]=\"thumbHeight\"\n               [disableThumbs]=\"disableThumbs\"\n               [detachThumbs]=\"detachThumbs\"\n               [thumbAutosize]=\"thumbAutosize\"\n               [disableThumbScroll]=\"disableThumbScroll\"\n               [disableThumbMouseScroll]=\"disableThumbMouseScroll\"\n               [bullets]=\"bullets\"\n               [bulletPosition]=\"bulletPosition\"\n               [bulletSize]=\"bulletSize\"\n               [disableBullets]=\"disableBullets\"\n               [resizeDebounceTime]=\"resizeDebounceTime\"\n               [nav]=\"nav\"\n               [loop]=\"loop\"\n               [debug]=\"debug\"\n               [counter]=\"counter\"\n               [counterPosition]=\"counterPosition\"\n               [autoplay]=\"autoplay\"\n               [autoplayInterval]=\"autoplayInterval\"\n               [imageSize]=\"imageSize\"\n               [loadingAttr]=\"loadingAttr\"\n               [loadingStrategy]=\"loadingStrategy\"/>\n    `,\n  }),\n  loaders: [\n    async () => ({\n      items: await getHDImages('jet fighter'),\n    }),\n  ],\n}",
                    "rawdescription": "First Example for gallery",
                    "description": "<p>First Example for gallery</p>\n"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<GalleryComponent>",
                    "defaultValue": "{\n  title: 'Documentations/Gallery',\n  component: GalleryComponent,\n  tags: ['autodocs'],\n  render: (args: GalleryComponent) => ({\n    props: {\n      ...args,\n    },\n  }),\n  decorators: [\n    applicationConfig({\n      providers: [provideAnimations()],\n    }),\n  ],\n  args: {\n    id: 'root',\n    scrollBehavior: 'smooth',\n    imageSize: ImageSize.Contain,\n    thumbImageSize: ImageSize.Cover,\n    bulletPosition: BulletsPosition.Bottom,\n    counterPosition: CounterPosition.Top,\n    orientation: Orientation.Horizontal,\n    loadingAttr: LoadingAttr.Lazy,\n    loadingStrategy: LoadingStrategy.Default,\n    thumbPosition: ThumbnailsPosition.Bottom,\n    scrollEase: {\n      x1: 0.42,\n      y1: 0,\n      x2: 0.58,\n      y2: 1,\n    },\n    bulletSize: 6,\n    thumbWidth: 120,\n    thumbHeight: 90,\n    autoplayInterval: 3000,\n    scrollDuration: 468,\n    resizeDebounceTime: 0,\n    nav: true,\n    bullets: true,\n    disableBullets: false,\n    loop: true,\n    debug: false,\n    thumbs: true,\n    counter: true,\n    autoplay: false,\n    autoHeight: false,\n    itemAutosize: false,\n    disableThumbs: false,\n    detachThumbs: false,\n    thumbAutosize: false,\n    disableScroll: false,\n    thumbCentralized: false,\n    disableThumbScroll: false,\n    disableMouseScroll: false,\n    disableThumbMouseScroll: false,\n  },\n  // Disables the long useless control description\n  argTypes: {\n    scrollBehavior: {\n      control: 'radio',\n      options: ['smooth', 'auto'],\n      table: {\n        defaultValue: { summary: 'smooth' },\n      },\n    },\n    imageSize: {\n      table: {\n        defaultValue: { summary: 'contain' },\n      },\n    },\n    thumbImageSize: {\n      table: {\n        defaultValue: { summary: 'cover' },\n      },\n    },\n    bulletPosition: {\n      table: {\n        defaultValue: { summary: 'bottom' },\n      },\n    },\n    counterPosition: {\n      table: {\n        defaultValue: { summary: 'top' },\n      },\n    },\n    orientation: {\n      table: {\n        defaultValue: { summary: 'horizontal' },\n      },\n    },\n    loadingAttr: {\n      table: {\n        defaultValue: { summary: 'lazy' },\n      },\n    },\n    loadingStrategy: {\n      table: {\n        defaultValue: { summary: 'default' },\n      },\n    },\n    thumbPosition: {\n      table: {\n        defaultValue: { summary: 'bottom' },\n      },\n    },\n    thumbCentralized: {\n      table: {\n        defaultValue: { summary: 'default' },\n      },\n    },\n    scrollEase: {\n      table: {\n        defaultValue: { summary: '{ x1: 0.42, y1: 0, x2: 0.58, y2: 1 }' },\n      },\n    },\n    nav: {\n      table: {\n        defaultValue: { summary: 'true' },\n      },\n    },\n    thumbs: {\n      table: {\n        defaultValue: { summary: 'true' },\n      },\n    },\n    loop: {\n      table: {\n        defaultValue: { summary: 'true' },\n      },\n    },\n    counter: {\n      table: {\n        defaultValue: { summary: 'true' },\n      },\n    },\n    bulletSize: {\n      table: {\n        defaultValue: { summary: '6' },\n      },\n    },\n    thumbWidth: {\n      table: {\n        defaultValue: { summary: '120' },\n      },\n    },\n    thumbHeight: {\n      table: {\n        defaultValue: { summary: '90' },\n      },\n    },\n    autoplayInterval: {\n      table: {\n        defaultValue: { summary: '3000' },\n      },\n    },\n    scrollDuration: {\n      table: {\n        defaultValue: { summary: '468' },\n      },\n    },\n    resizeDebounceTime: {\n      table: {\n        defaultValue: { summary: '0' },\n      },\n    },\n    error: {\n      control: false,\n    },\n    indexChange: {\n      control: false,\n    },\n    itemsChange: {\n      control: false,\n    },\n    itemClick: {\n      control: false,\n    },\n    thumbClick: {\n      control: false,\n    },\n    playingChange: {\n      control: false,\n    },\n    galleryRef: {\n      control: false,\n    },\n    load: {\n      control: false,\n    },\n    add: {\n      control: false,\n    },\n    addImage: {\n      control: false,\n    },\n    addVideo: {\n      control: false,\n    },\n    addIframe: {\n      control: false,\n    },\n    addYoutube: {\n      control: false,\n    },\n    remove: {\n      control: false,\n    },\n    next: {\n      control: false,\n    },\n    prev: {\n      control: false,\n    },\n    set: {\n      control: false,\n    },\n    reset: {\n      control: false,\n    },\n    play: {\n      control: false,\n    },\n    stop: {\n      control: false,\n    },\n  },\n}"
                },
                {
                    "name": "NavExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  parameters: { controls: { exclude: /.*/g } },\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `<gallery [items]=\"items\"/>`,\n  }),\n  loaders: [async () => ({ items: await getHDImages('lions') })],\n}"
                },
                {
                    "name": "NavWithLoopExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  parameters: { controls: { exclude: /.*/g } },\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `<gallery [items]=\"items\" loop/>`,\n  }),\n  loaders: [async () => ({ items: await getHDImages('tigers') })],\n}"
                },
                {
                    "name": "SliderBehaviorExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  parameters: { controls: { exclude: /.*/g } },\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `<gallery [items]=\"items\" scrollBehavior=\"auto\"/>`,\n  }),\n  loaders: [async () => ({ items: await getHDImages('chips') })],\n}"
                },
                {
                    "name": "SliderDirectionExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  parameters: { controls: { exclude: /.*/g } },\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `<gallery [items]=\"items\" orientation=\"vertical\" />`,\n  }),\n  loaders: [async () => ({ items: await getHDImages('tigers') })],\n}"
                },
                {
                    "name": "SliderExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  parameters: { controls: { exclude: /.*/g } },\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `<gallery [items]=\"items\"/>`,\n  }),\n  loaders: [async () => ({ items: await getHDImages('chips') })],\n}"
                },
                {
                    "name": "ThumbAutosizeExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  parameters: { controls: { exclude: /.*/g } },\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `<gallery [items]=\"items\" thumbs thumbAutosize/>`,\n  }),\n  loaders: [async () => ({ items: await getHDImages('roads') })],\n}"
                },
                {
                    "name": "ThumbDetachedExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  parameters: { controls: { exclude: /.*/g } },\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `<gallery [items]=\"items\" thumbs detachThumbs/>`,\n  }),\n  loaders: [async () => ({ items: await getHDImages('flowers') })],\n}"
                },
                {
                    "name": "ThumbPositionExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  parameters: { controls: { exclude: /.*/g } },\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `<gallery [items]=\"items\" thumbs thumbPosition=\"bottom\"/>`,\n  }),\n  loaders: [async () => ({ items: await getHDImages('street') })],\n}"
                },
                {
                    "name": "ThumbViewExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  parameters: { controls: { exclude: /.*/g } },\n  render: (args: GalleryComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `<gallery [items]=\"items\" thumbs thumbCentralized/>`,\n  }),\n  loaders: [async () => ({ items: await getHDImages('landscape') })],\n}"
                }
            ],
            "projects/ng-gallery/src/stories/custom-templates/CustomTemplates.stories.ts": [
                {
                    "name": "BoxTemplateExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/stories/custom-templates/CustomTemplates.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args: CustomTemplateComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `\n      <gallery [items]=\"items\">\n        <div *galleryBoxDef=\"let state; config\" class=\"my-box\">\n          <div>This is fixed overlay template</div>\n          <img src=\"https://user-images.githubusercontent.com/8130692/36171173-ad0da54c-1112-11e8-85bf-843c5f70efdc.png\">\n        </div>\n      </gallery>\n    `,\n    styles: [\n      `\n      .my-box {\n        width: 200px;\n        height: 50px;\n        color: white;\n      }\n      img {\n        position: absolute;\n        z-index: 999;\n        width: 40px;\n        height: 40px;\n        top: 20px;\n        left: 20px;\n      }\n    `,\n    ],\n  }),\n  loaders: [async () => ({ items: await getHDImages('sea') })],\n}"
                },
                {
                    "name": "ImageTemplateExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/stories/custom-templates/CustomTemplates.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args: CustomTemplateComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `\n      <gallery [items]=\"items\">\n        <div *galleryImageDef=\"let item\" class=\"my-image-overlay\">\n          {{ item?.alt }}\n        </div>\n      </gallery>\n    `,\n  }),\n  loaders: [async () => ({ items: await getHDImages('sea') })],\n}"
                },
                {
                    "name": "ItemTemplateExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/stories/custom-templates/CustomTemplates.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args: CustomTemplateComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `\n      <gallery [items]=\"items\">\n        <div *galleryItemDef=\"let item\" class=\"my-item-template\">\n          <img [src]=\"item?.src\">\n        </div>\n      </gallery>\n    `,\n    styles: [\n      `\n      img {\n        object-fit: cover;\n        border: 10px white solid;\n        width: 400px;\n        height: 400px;\n      }\n    `,\n    ],\n  }),\n  loaders: [\n    async () => ({ items: await getHDImagesForCustomTemplate('sand') }),\n  ],\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/stories/custom-templates/CustomTemplates.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CustomTemplateComponent>",
                    "defaultValue": "{\n  title: 'Documentations/CustomTemplates',\n  component: CustomTemplateComponent,\n  // tags: ['autodocs'],\n  render: (args: CustomTemplateComponent) => ({\n    props: {\n      ...args,\n    },\n  }),\n  decorators: [\n    moduleMetadata({\n      imports: [GalleryModule],\n    }),\n    applicationConfig({\n      providers: [provideAnimations()],\n    }),\n  ],\n}"
                },
                {
                    "name": "ThumbTemplateExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/stories/custom-templates/CustomTemplates.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args: CustomTemplateComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `\n      <gallery [items]=\"items\" thumbs>\n        <div *galleryThumbDef=\"let thumb\" class=\"my-thumb-overlay\">\n          {{ thumb?.alt }}\n        </div>\n      </gallery>\n    `,\n  }),\n  loaders: [async () => ({ items: await getHDImages('sea') })],\n}"
                }
            ],
            "projects/ng-gallery/src/lib/utils/gallery.default.ts": [
                {
                    "name": "defaultConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/lib/utils/gallery.default.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GalleryConfig",
                    "defaultValue": "{\r\n  nav: true,\r\n  loop: false,\r\n  bullets: false,\r\n  thumbs: false,\r\n  debug: false,\r\n  bulletSize: 6,\r\n  counter: false,\r\n  autoplay: false,\r\n  thumbWidth: 120,\r\n  thumbHeight: 90,\r\n  disableBullets: false,\r\n  disableThumbs: false,\r\n  disableScroll: false,\r\n  disableThumbScroll: false,\r\n  disableMouseScroll: false,\r\n  disableThumbMouseScroll: false,\r\n  autoplayInterval: 3000,\r\n  scrollDuration: 468,\r\n  scrollEase: {\r\n    x1: 0.42,\r\n    y1: 0,\r\n    x2: 0.58,\r\n    y2: 1\r\n  },\r\n  thumbCentralized: false,\r\n  thumbAutosize: false,\r\n  itemAutosize: false,\r\n  autoHeight: false,\r\n  scrollBehavior: 'smooth',\r\n  resizeDebounceTime: 0,\r\n  loadingAttr: LoadingAttr.Lazy,\r\n  imageSize: ImageSize.Contain,\r\n  thumbImageSize: ImageSize.Cover,\r\n  bulletPosition: BulletsPosition.Bottom,\r\n  counterPosition: CounterPosition.Top,\r\n  thumbPosition: ThumbnailsPosition.Bottom,\r\n  loadingStrategy: LoadingStrategy.Preload,\r\n  orientation: Orientation.Horizontal,\r\n  navIcon: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M0 256C0 397.4 114.6 512 256 512s256-114.6 256-256S397.4 0 256 0S0 114.6 0 256zM241 377c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l87-87-87-87c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0L345 239c9.4 9.4 9.4 24.6 0 33.9L241 377z\"/></svg>`,\r\n  // navIcon: `<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"512px\" height=\"512px\" enable-background=\"new 0 0 240.823 240.823\" version=\"1.1\" viewBox=\"0 0 240.823 240.823\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m183.19 111.82l-108.3-108.26c-4.752-4.74-12.451-4.74-17.215 0-4.752 4.74-4.752 12.439 0 17.179l99.707 99.671-99.695 99.671c-4.752 4.74-4.752 12.439 0 17.191 4.752 4.74 12.463 4.74 17.215 0l108.3-108.26c4.68-4.691 4.68-12.511-0.012-17.19z\"></svg>`,\r\n  loadingIcon: `<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg stroke=\"#fff\" viewBox=\"0 0 44 44\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\" stroke-width=\"2\"><circle cx=\"22\" cy=\"22\" r=\"1\"><animate attributeName=\"r\" begin=\"0s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.165, 0.84, 0.44, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 20\"/><animate attributeName=\"stroke-opacity\" begin=\"0s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.3, 0.61, 0.355, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 0\"/></circle><circle cx=\"22\" cy=\"22\" r=\"1\"><animate attributeName=\"r\" begin=\"-0.9s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.165, 0.84, 0.44, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 20\"/><animate attributeName=\"stroke-opacity\" begin=\"-0.9s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.3, 0.61, 0.355, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 0\"/></circle></g></svg>`\r\n}"
                },
                {
                    "name": "defaultState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/lib/utils/gallery.default.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GalleryState",
                    "defaultValue": "{\r\n  action: GalleryAction.INITIALIZED,\r\n  isPlaying: false,\r\n  hasNext: false,\r\n  hasPrev: false,\r\n  currIndex: 0,\r\n  items: []\r\n}",
                    "rawdescription": "Initial state",
                    "description": "<p>Initial state</p>\n"
                }
            ],
            "projects/ng-gallery/src/lib/components/adapters/main-adapters.ts": [
                {
                    "name": "DIRECTION_DOWN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/lib/components/adapters/main-adapters.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "16"
                },
                {
                    "name": "DIRECTION_LEFT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/lib/components/adapters/main-adapters.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "2",
                    "rawdescription": "A clone of HammerJs constants",
                    "description": "<p>A clone of HammerJs constants</p>\n"
                },
                {
                    "name": "DIRECTION_RIGHT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/lib/components/adapters/main-adapters.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "4"
                },
                {
                    "name": "DIRECTION_UP",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/lib/components/adapters/main-adapters.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "8"
                }
            ],
            "projects/ng-gallery/src/lib/services/gallery-ref.ts": [
                {
                    "name": "filterActions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/lib/services/gallery-ref.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(actions: string[]) => {\r\n  return filter((state: GalleryState) => actions.indexOf(state.action) > -1);\r\n}"
                }
            ],
            "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts": [
                {
                    "name": "float32ArraySupported",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "typeof Float32Array === 'function'"
                },
                {
                    "name": "kSampleStepSize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "1.0 / (kSplineTableSize - 1.0)"
                },
                {
                    "name": "kSplineTableSize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "11"
                },
                {
                    "name": "NEWTON_ITERATIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "4",
                    "rawdescription": "https://github.com/gre/bezier-easing\r\nBezierEasing - use bezier curve for transition easing function\r\nby Gaëtan Renaudeau 2014 - 2015 – MIT License",
                    "description": "<p><a href=\"https://github.com/gre/bezier-easing\">https://github.com/gre/bezier-easing</a>\nBezierEasing - use bezier curve for transition easing function\nby Gaëtan Renaudeau 2014 - 2015 – MIT License</p>\n"
                },
                {
                    "name": "NEWTON_MIN_SLOPE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "0.001"
                },
                {
                    "name": "SUBDIVISION_MAX_ITERATIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "10"
                },
                {
                    "name": "SUBDIVISION_PRECISION",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "0.0000001"
                }
            ],
            "projects/ng-gallery/src/stories/lightbox/Lightbox.stories.ts": [
                {
                    "name": "GallerizeExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/stories/lightbox/Lightbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args: LightboxExampleComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `\n      <div class=\"container\" gallerize>\n        <img *ngFor=\"let item of items\"\n             [src]=\"item.data.thumb\"\n             [attr.imageSrc]=\"item.data.src\">\n      </div>\n    `,\n    styles: [\n      `\n      .container {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 3px;\n        margin: 0 auto;\n        padding: 20px;\n        max-width: 768px;\n      }\n      img {\n        height: 90px;\n        width: 125px;\n        object-fit: cover;\n      }\n    `,\n    ],\n  }),\n  loaders: [async () => ({ items: await getHDImages('ship') })],\n}"
                },
                {
                    "name": "GallerizeGalleryExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/stories/lightbox/Lightbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args: LightboxExampleComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n    template: `\n      <gallery [items]=\"items\" gallerize />\n    `,\n  }),\n  loaders: [async () => ({ items: await getHDImages('ship') })],\n}"
                },
                {
                    "name": "LightboxExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/stories/lightbox/Lightbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  parameters: {\n    docs: {\n      source: {\n        code: `\n          <div class=\"container\">\n            <img *ngFor=\"let item of items; index as i\"\n               class=\"grid-image\"\n               [src]=\"item.data.thumb\"\n               [lightbox]=\"i\"\n               [gallery]=\"galleryId\"/>\n          </div>\n        `,\n      },\n    },\n  },\n  render: (args: LightboxExampleComponent, { loaded: { items } }) => ({\n    props: { ...args, items },\n  }),\n  loaders: [async () => ({ items: await getHDImages('ship') })],\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/stories/lightbox/Lightbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<LightboxExampleComponent>",
                    "defaultValue": "{\n  title: 'Documentations/Lightbox',\n  component: LightboxExampleComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [LightboxModule],\n    }),\n    applicationConfig({\n      providers: [provideAnimations()],\n    }),\n  ],\n}"
                }
            ],
            "projects/ng-gallery/src/lib/models/config.model.ts": [
                {
                    "name": "GALLERY_CONFIG",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/lib/models/config.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InjectionToken<GalleryConfig>",
                    "defaultValue": "new InjectionToken<GalleryConfig>('GALLERY_CONFIG')"
                }
            ],
            "projects/ng-gallery/src/lib/gestures/hammer-sliding.directive.ts": [
                {
                    "name": "Hammer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/lib/gestures/hammer-sliding.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ],
            "projects/ng-gallery/src/lib/smooth-scroll/smooth-scroll.directive.ts": [
                {
                    "name": "Hammer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/lib/smooth-scroll/smooth-scroll.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ],
            "projects/ng-gallery/src/lib/components/templates/svg-assets.ts": [
                {
                    "name": "imageFailedSvg",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/src/lib/components/templates/svg-assets.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<svg width=\"100\" height=\"100\" version=\"1.1\" viewBox=\"0 0 256 256\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\">\r\n <g transform=\"translate(1.4066 1.4066) scale(2.81)\">\r\n\\t<path d=\"m74.453 48.627c-5.538 0-11.075-2.107-15.291-6.324-6.11-6.11-7.768-14.99-5.024-22.629h-48.08c-3.346 1e-3 -6.058 2.713-6.058 6.059v16.322l23.834 20.315c2.278 1.942 5.573 2.119 8.047 0.434l14.382-9.801c2.33-1.588 5.408-1.531 7.677 0.141l27.15 20.001v-25.574c-2.156 0.692-4.394 1.056-6.637 1.056z\" fill=\"#c1e5f4\" stroke-linecap=\"round\"/>\r\n <circle cx=\"27.942\" cy=\"37.942\" r=\"6.072\" fill=\"#fff0a9\"/>\r\n <path d=\"m85.446 16.02c-6.061-6.061-15.922-6.061-21.983 0s-6.061 15.923 0 21.984c3.031 3.031 7.011 4.546 10.992 4.546 3.98 0 7.962-1.515 10.992-4.545 2.936-2.937 4.553-6.841 4.553-10.993s-1.617-8.056-4.554-10.992zm-3.555 3.555c1.987 1.986 3.081 4.627 3.081 7.436 0 1.95-0.538 3.813-1.525 5.438l-14.428-14.428c4.043-2.442 9.384-1.934 12.872 1.554zm-14.873 14.874c-3.486-3.487-3.997-8.829-1.554-12.873l14.426 14.427c-4.043 2.443-9.385 1.932-12.872-1.554z\" fill=\"#e29393\" stroke-linecap=\"round\"/>\r\n <path d=\"m0 40.043v32.425c0 3.346 2.712 6.058 6.058 6.058h68.974c3.346 0 6.058-2.712 6.058-6.058v-1.335l-27.15-20.001c-2.27-1.672-5.348-1.729-7.677-0.141l-14.383 9.801c-2.473 1.686-5.769 1.508-8.047-0.434l-23.833-20.315z\" fill=\"#96ea9c\" stroke-linecap=\"round\"/>\r\n</g>\r\n</svg>\r\n`"
                }
            ],
            "projects/ng-gallery/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-gallery/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\r\n  parameters: {\r\n    layout: 'fullscreen',\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/i,\r\n      }\r\n    }\r\n  },\r\n}"
                }
            ]
        },
        "groupedFunctions": {
            "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts": [
                {
                    "name": "A",
                    "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "aA1",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "aA2",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "aA1",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "aA2",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "B",
                    "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "aA1",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "aA2",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "aA1",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "aA2",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "bezier",
                    "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "mX1",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "mY1",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "mX2",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "mY2",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "mX1",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mY1",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mX2",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mY2",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "binarySubdivide",
                    "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "aX",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "aA",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "aB",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "mX1",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "mX2",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "aX",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "aA",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "aB",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mX1",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mX2",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "C",
                    "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "aA1",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "aA1",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "calcBezier",
                    "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "aT",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "aA1",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "aA2",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "aT",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "aA1",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "aA2",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSlope",
                    "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "aT",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "aA1",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "aA2",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "aT",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "aA1",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "aA2",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "LinearEasing",
                    "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "x",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "x",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "newtonRaphsonIterate",
                    "file": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "aX",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "aGuessT",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "mX1",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "mX2",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "aX",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "aGuessT",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mX1",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mX2",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "projects/ng-gallery/src/lib/observers/active-item-observer.ts": [
                {
                    "name": "createIntersectionObserver",
                    "file": "projects/ng-gallery/src/lib/observers/active-item-observer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "root",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "elements",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "rootMargin",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Observable<IntersectionObserverEntry>",
                    "jsdoctags": [
                        {
                            "name": "root",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "elements",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "rootMargin",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "projects/ng-gallery/src/stories/pixabay/pixabay.service.ts": [
                {
                    "name": "getHDImages",
                    "file": "projects/ng-gallery/src/stories/pixabay/pixabay.service.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Promise<GalleryItem[]>",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getHDImagesForCustomTemplate",
                    "file": "projects/ng-gallery/src/stories/pixabay/pixabay.service.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Promise<GalleryItem[]>",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "projects/ng-gallery/src/lib/utils/resize-observer.ts": [
                {
                    "name": "resizeObservable",
                    "file": "projects/ng-gallery/src/lib/utils/resize-observer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "el",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "setter",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "Observable<ResizeObserverEntry>",
                    "jsdoctags": [
                        {
                            "name": "el",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "setter",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "projects/ng-gallery/src/lib/models/constants.ts": [
                {
                    "name": "BulletsPosition",
                    "childs": [
                        {
                            "name": "Top",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "top"
                        },
                        {
                            "name": "Bottom",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "bottom"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/ng-gallery/src/lib/models/constants.ts"
                },
                {
                    "name": "CounterPosition",
                    "childs": [
                        {
                            "name": "Top",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "top"
                        },
                        {
                            "name": "Bottom",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "bottom"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/ng-gallery/src/lib/models/constants.ts"
                },
                {
                    "name": "GalleryAction",
                    "childs": [
                        {
                            "name": "INITIALIZED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "initialized"
                        },
                        {
                            "name": "ITEMS_CHANGED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "itemsChanged"
                        },
                        {
                            "name": "INDEX_CHANGED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "indexChanged"
                        },
                        {
                            "name": "PLAY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "play"
                        },
                        {
                            "name": "STOP",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "stop"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/ng-gallery/src/lib/models/constants.ts"
                },
                {
                    "name": "GalleryItemTypes",
                    "childs": [
                        {
                            "name": "Image",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "image"
                        },
                        {
                            "name": "Video",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "video"
                        },
                        {
                            "name": "Youtube",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "youtube"
                        },
                        {
                            "name": "Iframe",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "iframe"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/ng-gallery/src/lib/models/constants.ts"
                },
                {
                    "name": "ImageSize",
                    "childs": [
                        {
                            "name": "Cover",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "cover"
                        },
                        {
                            "name": "Contain",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "contain"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/ng-gallery/src/lib/models/constants.ts"
                },
                {
                    "name": "LoadingAttr",
                    "childs": [
                        {
                            "name": "Eager",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "eager"
                        },
                        {
                            "name": "Lazy",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "lazy"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/ng-gallery/src/lib/models/constants.ts"
                },
                {
                    "name": "LoadingStrategy",
                    "childs": [
                        {
                            "name": "Preload",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "preload"
                        },
                        {
                            "name": "Lazy",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "lazy"
                        },
                        {
                            "name": "Default",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "default"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/ng-gallery/src/lib/models/constants.ts"
                },
                {
                    "name": "Orientation",
                    "childs": [
                        {
                            "name": "Horizontal",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "horizontal"
                        },
                        {
                            "name": "Vertical",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "vertical"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/ng-gallery/src/lib/models/constants.ts"
                },
                {
                    "name": "ThumbnailsPosition",
                    "childs": [
                        {
                            "name": "Top",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "top"
                        },
                        {
                            "name": "Left",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "left"
                        },
                        {
                            "name": "Right",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "right"
                        },
                        {
                            "name": "Bottom",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "bottom"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/ng-gallery/src/lib/models/constants.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "projects/ng-gallery/src/lib/models/config.model.ts": [
                {
                    "name": "GalleryConfig",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/ng-gallery/src/lib/models/config.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 190
                },
                {
                    "name": "HorizontalPosition",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"top\" | \"bottom\"",
                    "file": "projects/ng-gallery/src/lib/models/config.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "ImageSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"contain\" | \"cover\"",
                    "file": "projects/ng-gallery/src/lib/models/config.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "LoadingAttr",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"eager\" | \"lazy\"",
                    "file": "projects/ng-gallery/src/lib/models/config.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "LoadingStrategy",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"preload\" | \"lazy\" | \"default\"",
                    "file": "projects/ng-gallery/src/lib/models/config.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "Orientation",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"horizontal\" | \"vertical\"",
                    "file": "projects/ng-gallery/src/lib/models/config.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "ThumbsPosition",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"top\" | \"left\" | \"right\" | \"bottom\"",
                    "file": "projects/ng-gallery/src/lib/models/config.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                }
            ],
            "projects/ng-gallery/src/lib/components/templates/items.model.ts": [
                {
                    "name": "GalleryItemData",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "ImageItemData | VideoItemData | IframeItemData | YoutubeItemData",
                    "file": "projects/ng-gallery/src/lib/components/templates/items.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "GalleryItemModel",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/ng-gallery/src/lib/components/templates/items.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                },
                {
                    "name": "IframeItemData",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/ng-gallery/src/lib/components/templates/items.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 190
                },
                {
                    "name": "ImageItemData",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/ng-gallery/src/lib/components/templates/items.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 190
                },
                {
                    "name": "ItemState",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"success\" | \"loading\" | \"failed\"",
                    "file": "projects/ng-gallery/src/lib/components/templates/items.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "VideoItemData",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/ng-gallery/src/lib/components/templates/items.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 190
                },
                {
                    "name": "YoutubeItemData",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/ng-gallery/src/lib/components/templates/items.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 190
                }
            ],
            "projects/ng-gallery/src/lib/models/constants.ts": [
                {
                    "name": "GalleryItemType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "GalleryItemTypes | string",
                    "file": "projects/ng-gallery/src/lib/models/constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                }
            ],
            "projects/ng-gallery/src/lib/smooth-scroll/smooth-scroll.model.ts": [
                {
                    "name": "SmoothScrollOptions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/ng-gallery/src/lib/smooth-scroll/smooth-scroll.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 190
                },
                {
                    "name": "SmoothScrollToOptions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/ng-gallery/src/lib/smooth-scroll/smooth-scroll.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 190
                }
            ],
            "projects/ng-gallery/src/stories/basic/Gallery.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<GalleryComponent>",
                    "file": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "projects/ng-gallery/src/stories/custom-templates/CustomTemplates.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CustomTemplateComponent>",
                    "file": "projects/ng-gallery/src/stories/custom-templates/CustomTemplates.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "projects/ng-gallery/src/stories/lightbox/Lightbox.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<LightboxExampleComponent>",
                    "file": "projects/ng-gallery/src/stories/lightbox/Lightbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 9,
        "status": "low",
        "files": [
            {
                "filePath": "projects/ng-gallery/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/autoplay/autoplay.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "AutoplayDirective",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/components/adapters/base-adapter.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SliderAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/components/adapters/main-adapters.ts",
                "type": "class",
                "linktype": "classe",
                "name": "HorizontalAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/components/adapters/main-adapters.ts",
                "type": "class",
                "linktype": "classe",
                "name": "VerticalAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/components/adapters/main-adapters.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DIRECTION_DOWN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/components/adapters/main-adapters.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DIRECTION_LEFT",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/components/adapters/main-adapters.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DIRECTION_RIGHT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/components/adapters/main-adapters.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DIRECTION_UP",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/components/gallery-bullets.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GalleryBulletsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/components/gallery-core.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GalleryCoreComponent",
                "coveragePercent": 62,
                "coverageCount": "15/24",
                "status": "good"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/components/gallery-counter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GalleryCounterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/components/gallery-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GalleryItemComponent",
                "coveragePercent": 56,
                "coverageCount": "9/16",
                "status": "good"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/components/gallery-nav.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GalleryNavComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/components/gallery-slider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GallerySliderComponent",
                "coveragePercent": 45,
                "coverageCount": "9/20",
                "status": "medium"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/components/gallery-thumb.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GalleryThumbComponent",
                "coveragePercent": 45,
                "coverageCount": "5/11",
                "status": "medium"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/components/gallery-thumbs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GalleryThumbsComponent",
                "coveragePercent": 56,
                "coverageCount": "9/16",
                "status": "good"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/components/gallery.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GalleryComponent",
                "coveragePercent": 98,
                "coverageCount": "57/58",
                "status": "very-good"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/components/templates/gallery-iframe.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GalleryIframeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/components/templates/gallery-image.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GalleryImageComponent",
                "coveragePercent": 52,
                "coverageCount": "9/17",
                "status": "good"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/components/templates/gallery-video.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GalleryVideoComponent",
                "coveragePercent": 6,
                "coverageCount": "1/15",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/components/templates/items.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "IframeItem",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/components/templates/items.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ImageItem",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/components/templates/items.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "VideoItem",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/components/templates/items.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "YoutubeItem",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/components/templates/svg-assets.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "imageFailedSvg",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/directives/gallery-box-def.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "GalleryBoxDef",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/directives/gallery-box-def.directive.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GalleryStateContext",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/directives/gallery-image-def.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "GalleryImageDef",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/directives/gallery-item-def.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "GalleryItemDef",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/directives/gallery-item-def.directive.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GalleryItemContext",
                "coveragePercent": 87,
                "coverageCount": "7/8",
                "status": "very-good"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/directives/gallery-thumb-def.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "GalleryThumbDef",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/gestures/hammer-sliding.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "HammerSliding",
                "coveragePercent": 5,
                "coverageCount": "1/17",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/gestures/hammer-sliding.directive.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Hammer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/models/config.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BulletsConfig",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/models/config.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CounterConfig",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/models/config.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NavConfig",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/models/config.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PlayerConfig",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/models/config.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SliderConfig",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/models/config.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ThumbConfig",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/models/config.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GALLERY_CONFIG",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/models/gallery.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GalleryError",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/models/gallery.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GalleryItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/models/gallery.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GalleryState",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/models/slider.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SliderState",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/models/slider.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "WorkerState",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/observers/active-item-observer.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ActiveItemObserver",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/observers/active-item-observer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "createIntersectionObserver",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/observers/item-intersection-observer.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ItemIntersectionObserver",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/observers/slider-intersection-observer.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SliderIntersectionObserver",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/observers/slider-resize-observer.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SliderResizeObserver",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/observers/thumb-resize-observer.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ThumbResizeObserver",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/services/gallery-ref.ts",
                "type": "class",
                "linktype": "classe",
                "name": "GalleryRef",
                "coveragePercent": 92,
                "coverageCount": "23/25",
                "status": "very-good"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/services/gallery-ref.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "filterActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/services/gallery.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "Gallery",
                "coveragePercent": 77,
                "coverageCount": "7/9",
                "status": "very-good"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "A",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "B",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "bezier",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "binarySubdivide",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "C",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "calcBezier",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getSlope",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "LinearEasing",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "newtonRaphsonIterate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "float32ArraySupported",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "kSampleStepSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "kSplineTableSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NEWTON_ITERATIONS",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NEWTON_MIN_SLOPE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SUBDIVISION_MAX_ITERATIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/smooth-scroll/bezier-easing.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SUBDIVISION_PRECISION",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/smooth-scroll/smooth-scroll.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SmoothScroll",
                "coveragePercent": 27,
                "coverageCount": "6/22",
                "status": "medium"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/smooth-scroll/smooth-scroll.directive.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Hammer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/smooth-scroll/smooth-scroll.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BezierEasingOptions",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/smooth-scroll/smooth-scroll.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SmoothScrollStep",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/utils/gallery.default.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/utils/gallery.default.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultState",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/utils/img-manager.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ImgManager",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/utils/img-manager.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ImageRegistry",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/utils/img-recognizer.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ImgRecognizer",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/lib/utils/resize-observer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "resizeObservable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AutoHeightExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AutoplayExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BulletExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CounterExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ImageSizeExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ItemAutosizeExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Lab",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NavExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NavWithLoopExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SliderBehaviorExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SliderDirectionExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SliderExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ThumbAutosizeExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ThumbDetachedExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ThumbPositionExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/basic/Gallery.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ThumbViewExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/custom-templates/CustomTemplates.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BoxTemplateExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/custom-templates/CustomTemplates.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ImageTemplateExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/custom-templates/CustomTemplates.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ItemTemplateExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/custom-templates/CustomTemplates.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/custom-templates/CustomTemplates.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ThumbTemplateExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/custom-templates/custom-template.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomTemplateComponent",
                "coveragePercent": 50,
                "coverageCount": "1/2",
                "status": "medium"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/lightbox/Lightbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GallerizeExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/lightbox/Lightbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GallerizeGalleryExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/lightbox/Lightbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LightboxExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/lightbox/Lightbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/lightbox/lightbox-example.ts",
                "type": "component",
                "linktype": "component",
                "name": "LightboxExampleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/pixabay/pixabay.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Hit",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/pixabay/pixabay.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Hit2",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/pixabay/pixabay.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PixabayHDModel",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/pixabay/pixabay.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PixabayModel",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/pixabay/pixabay.service.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getHDImages",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/pixabay/pixabay.service.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getHDImagesForCustomTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-gallery/src/stories/pixabay/pixabay.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "API_KEY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}